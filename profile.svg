<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1354" onload="init(evt)" viewBox="0 0 1200 1354" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1354" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">/Users/yannik/.pyenv/versions/3.13.0/bin/py-spy record -o profile.svg -- /Users/yannik/miniconda3/bin/python src/run_branching.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1343.00"> </text><svg id="frames" x="10" width="1180" total_samples="2231"><g><title>&lt;module&gt; (subprocess.py:48) (3 samples, 0.13%)</title><rect x="0.0896%" y="996" width="0.1345%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.13%)</title><rect x="0.0896%" y="1012" width="0.1345%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.13%)</title><rect x="0.0896%" y="1028" width="0.1345%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.13%)</title><rect x="0.0896%" y="1044" width="0.1345%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.13%)</title><rect x="0.0896%" y="1060" width="0.1345%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.13%)</title><rect x="0.0896%" y="1076" width="0.1345%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1086.50"></text></g><g><title>&lt;module&gt; (signal.py:14) (3 samples, 0.13%)</title><rect x="0.0896%" y="1092" width="0.1345%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1102.50"></text></g><g><title>_convert_ (enum.py:563) (3 samples, 0.13%)</title><rect x="0.0896%" y="1108" width="0.1345%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1118.50"></text></g><g><title>__call__ (enum.py:387) (3 samples, 0.13%)</title><rect x="0.0896%" y="1124" width="0.1345%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1134.50"></text></g><g><title>_create_ (enum.py:497) (3 samples, 0.13%)</title><rect x="0.0896%" y="1140" width="0.1345%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="3"/><text x="0.3396%" y="1150.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (7 samples, 0.31%)</title><rect x="0.0000%" y="548" width="0.3138%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (7 samples, 0.31%)</title><rect x="0.0000%" y="564" width="0.3138%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.0000%" y="580" width="0.3138%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="0.0000%" y="596" width="0.3138%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="7"/><text x="0.2500%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="0.0000%" y="612" width="0.3138%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="7"/><text x="0.2500%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="0.0000%" y="628" width="0.3138%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="7"/><text x="0.2500%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="0.0000%" y="644" width="0.3138%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="7"/><text x="0.2500%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.0000%" y="660" width="0.3138%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="7"/><text x="0.2500%" y="670.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:32) (6 samples, 0.27%)</title><rect x="0.0448%" y="676" width="0.2689%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="6"/><text x="0.2948%" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (6 samples, 0.27%)</title><rect x="0.0448%" y="692" width="0.2689%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="6"/><text x="0.2948%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 0.27%)</title><rect x="0.0448%" y="708" width="0.2689%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="6"/><text x="0.2948%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (6 samples, 0.27%)</title><rect x="0.0448%" y="724" width="0.2689%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="6"/><text x="0.2948%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (6 samples, 0.27%)</title><rect x="0.0448%" y="740" width="0.2689%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="6"/><text x="0.2948%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (6 samples, 0.27%)</title><rect x="0.0448%" y="756" width="0.2689%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="6"/><text x="0.2948%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (6 samples, 0.27%)</title><rect x="0.0448%" y="772" width="0.2689%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="6"/><text x="0.2948%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (6 samples, 0.27%)</title><rect x="0.0448%" y="788" width="0.2689%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="6"/><text x="0.2948%" y="798.50"></text></g><g><title>&lt;module&gt; (numpy/lib/utils.py:8) (5 samples, 0.22%)</title><rect x="0.0896%" y="804" width="0.2241%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="5"/><text x="0.3396%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.22%)</title><rect x="0.0896%" y="820" width="0.2241%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="5"/><text x="0.3396%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.22%)</title><rect x="0.0896%" y="836" width="0.2241%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="5"/><text x="0.3396%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.22%)</title><rect x="0.0896%" y="852" width="0.2241%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="5"/><text x="0.3396%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.22%)</title><rect x="0.0896%" y="868" width="0.2241%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="5"/><text x="0.3396%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.22%)</title><rect x="0.0896%" y="884" width="0.2241%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="5"/><text x="0.3396%" y="894.50"></text></g><g><title>&lt;module&gt; (platform.py:119) (5 samples, 0.22%)</title><rect x="0.0896%" y="900" width="0.2241%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="5"/><text x="0.3396%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.22%)</title><rect x="0.0896%" y="916" width="0.2241%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="5"/><text x="0.3396%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.22%)</title><rect x="0.0896%" y="932" width="0.2241%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="5"/><text x="0.3396%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.22%)</title><rect x="0.0896%" y="948" width="0.2241%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="5"/><text x="0.3396%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.22%)</title><rect x="0.0896%" y="964" width="0.2241%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="5"/><text x="0.3396%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.22%)</title><rect x="0.0896%" y="980" width="0.2241%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="5"/><text x="0.3396%" y="990.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/deterministic/experiments/clock_synchronization_experiments.py:4) (9 samples, 0.40%)</title><rect x="0.0000%" y="452" width="0.4034%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="9"/><text x="0.2500%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 0.40%)</title><rect x="0.0000%" y="468" width="0.4034%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="9"/><text x="0.2500%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 0.40%)</title><rect x="0.0000%" y="484" width="0.4034%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="9"/><text x="0.2500%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 0.40%)</title><rect x="0.0000%" y="500" width="0.4034%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="9"/><text x="0.2500%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 0.40%)</title><rect x="0.0000%" y="516" width="0.4034%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="9"/><text x="0.2500%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.40%)</title><rect x="0.0000%" y="532" width="0.4034%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="9"/><text x="0.2500%" y="542.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/shared/binary_decision_trees.py:7) (3 samples, 0.13%)</title><rect x="0.4034%" y="644" width="0.1345%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="3"/><text x="0.6534%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.13%)</title><rect x="0.4034%" y="660" width="0.1345%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="3"/><text x="0.6534%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.13%)</title><rect x="0.4034%" y="676" width="0.1345%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="3"/><text x="0.6534%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.13%)</title><rect x="0.4034%" y="692" width="0.1345%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="3"/><text x="0.6534%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.13%)</title><rect x="0.4034%" y="708" width="0.1345%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="3"/><text x="0.6534%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.13%)</title><rect x="0.4034%" y="724" width="0.1345%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="3"/><text x="0.6534%" y="734.50"></text></g><g><title>&lt;module&gt; (z3/__init__.py:1) (3 samples, 0.13%)</title><rect x="0.4034%" y="740" width="0.1345%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="3"/><text x="0.6534%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.13%)</title><rect x="0.4034%" y="756" width="0.1345%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="3"/><text x="0.6534%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.13%)</title><rect x="0.4034%" y="772" width="0.1345%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="3"/><text x="0.6534%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.13%)</title><rect x="0.4034%" y="788" width="0.1345%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="3"/><text x="0.6534%" y="798.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:42) (3 samples, 0.13%)</title><rect x="0.6723%" y="836" width="0.1345%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="3"/><text x="0.9223%" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (3 samples, 0.13%)</title><rect x="0.6723%" y="852" width="0.1345%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="3"/><text x="0.9223%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.13%)</title><rect x="0.6723%" y="868" width="0.1345%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="3"/><text x="0.9223%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.13%)</title><rect x="0.6723%" y="884" width="0.1345%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="3"/><text x="0.9223%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.13%)</title><rect x="0.6723%" y="900" width="0.1345%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="3"/><text x="0.9223%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.13%)</title><rect x="0.6723%" y="916" width="0.1345%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="3"/><text x="0.9223%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.13%)</title><rect x="0.6723%" y="932" width="0.1345%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="3"/><text x="0.9223%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.13%)</title><rect x="0.6723%" y="948" width="0.1345%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="3"/><text x="0.9223%" y="958.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/shared/utils.py:6) (7 samples, 0.31%)</title><rect x="0.5379%" y="740" width="0.3138%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="7"/><text x="0.7879%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="0.5379%" y="756" width="0.3138%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="7"/><text x="0.7879%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="0.5379%" y="772" width="0.3138%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="7"/><text x="0.7879%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="0.5379%" y="788" width="0.3138%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="7"/><text x="0.7879%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="0.5379%" y="804" width="0.3138%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="7"/><text x="0.7879%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.5379%" y="820" width="0.3138%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="7"/><text x="0.7879%" y="830.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:56) (3 samples, 0.13%)</title><rect x="0.8516%" y="836" width="0.1345%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="3"/><text x="1.1016%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 0.13%)</title><rect x="0.8516%" y="852" width="0.1345%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="3"/><text x="1.1016%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 0.13%)</title><rect x="0.8516%" y="868" width="0.1345%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="3"/><text x="1.1016%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 0.13%)</title><rect x="0.8516%" y="884" width="0.1345%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="3"/><text x="1.1016%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 0.13%)</title><rect x="0.8516%" y="900" width="0.1345%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="3"/><text x="1.1016%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.13%)</title><rect x="0.8516%" y="916" width="0.1345%" height="15" fill="rgb(240,54,50)" fg:x="19" fg:w="3"/><text x="1.1016%" y="926.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/__init__.py:1) (4 samples, 0.18%)</title><rect x="0.9861%" y="1188" width="0.1793%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (4 samples, 0.18%)</title><rect x="0.9861%" y="1204" width="0.1793%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.18%)</title><rect x="0.9861%" y="1220" width="0.1793%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (4 samples, 0.18%)</title><rect x="0.9861%" y="1236" width="0.1793%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (4 samples, 0.18%)</title><rect x="0.9861%" y="1252" width="0.1793%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (4 samples, 0.18%)</title><rect x="0.9861%" y="1268" width="0.1793%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (4 samples, 0.18%)</title><rect x="0.9861%" y="1284" width="0.1793%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.18%)</title><rect x="0.9861%" y="1300" width="0.1793%" height="15" fill="rgb(253,215,40)" fg:x="22" fg:w="4"/><text x="1.2361%" y="1310.50"></text></g><g><title>&lt;module&gt; (matplotlib/projections/__init__.py:55) (5 samples, 0.22%)</title><rect x="0.9861%" y="1060" width="0.2241%" height="15" fill="rgb(211,81,21)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (5 samples, 0.22%)</title><rect x="0.9861%" y="1076" width="0.2241%" height="15" fill="rgb(208,190,38)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.22%)</title><rect x="0.9861%" y="1092" width="0.2241%" height="15" fill="rgb(235,213,38)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.22%)</title><rect x="0.9861%" y="1108" width="0.2241%" height="15" fill="rgb(237,122,38)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.22%)</title><rect x="0.9861%" y="1124" width="0.2241%" height="15" fill="rgb(244,218,35)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.22%)</title><rect x="0.9861%" y="1140" width="0.2241%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.22%)</title><rect x="0.9861%" y="1156" width="0.2241%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.22%)</title><rect x="0.9861%" y="1172" width="0.2241%" height="15" fill="rgb(235,124,12)" fg:x="22" fg:w="5"/><text x="1.2361%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (10 samples, 0.45%)</title><rect x="0.8516%" y="772" width="0.4482%" height="15" fill="rgb(224,169,11)" fg:x="19" fg:w="10"/><text x="1.1016%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (10 samples, 0.45%)</title><rect x="0.8516%" y="788" width="0.4482%" height="15" fill="rgb(250,166,2)" fg:x="19" fg:w="10"/><text x="1.1016%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (10 samples, 0.45%)</title><rect x="0.8516%" y="804" width="0.4482%" height="15" fill="rgb(242,216,29)" fg:x="19" fg:w="10"/><text x="1.1016%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (10 samples, 0.45%)</title><rect x="0.8516%" y="820" width="0.4482%" height="15" fill="rgb(230,116,27)" fg:x="19" fg:w="10"/><text x="1.1016%" y="830.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:66) (7 samples, 0.31%)</title><rect x="0.9861%" y="836" width="0.3138%" height="15" fill="rgb(228,99,48)" fg:x="22" fg:w="7"/><text x="1.2361%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="0.9861%" y="852" width="0.3138%" height="15" fill="rgb(253,11,6)" fg:x="22" fg:w="7"/><text x="1.2361%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="0.9861%" y="868" width="0.3138%" height="15" fill="rgb(247,143,39)" fg:x="22" fg:w="7"/><text x="1.2361%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="0.9861%" y="884" width="0.3138%" height="15" fill="rgb(236,97,10)" fg:x="22" fg:w="7"/><text x="1.2361%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="0.9861%" y="900" width="0.3138%" height="15" fill="rgb(233,208,19)" fg:x="22" fg:w="7"/><text x="1.2361%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.9861%" y="916" width="0.3138%" height="15" fill="rgb(216,164,2)" fg:x="22" fg:w="7"/><text x="1.2361%" y="926.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py:43) (7 samples, 0.31%)</title><rect x="0.9861%" y="932" width="0.3138%" height="15" fill="rgb(220,129,5)" fg:x="22" fg:w="7"/><text x="1.2361%" y="942.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (7 samples, 0.31%)</title><rect x="0.9861%" y="948" width="0.3138%" height="15" fill="rgb(242,17,10)" fg:x="22" fg:w="7"/><text x="1.2361%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.9861%" y="964" width="0.3138%" height="15" fill="rgb(242,107,0)" fg:x="22" fg:w="7"/><text x="1.2361%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="0.9861%" y="980" width="0.3138%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="7"/><text x="1.2361%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="0.9861%" y="996" width="0.3138%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="7"/><text x="1.2361%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="0.9861%" y="1012" width="0.3138%" height="15" fill="rgb(215,21,27)" fg:x="22" fg:w="7"/><text x="1.2361%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="0.9861%" y="1028" width="0.3138%" height="15" fill="rgb(232,23,21)" fg:x="22" fg:w="7"/><text x="1.2361%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="0.9861%" y="1044" width="0.3138%" height="15" fill="rgb(244,5,23)" fg:x="22" fg:w="7"/><text x="1.2361%" y="1054.50"></text></g><g><title>&lt;module&gt; (pyparsing/__init__.py:138) (5 samples, 0.22%)</title><rect x="1.4343%" y="1204" width="0.2241%" height="15" fill="rgb(226,81,46)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (5 samples, 0.22%)</title><rect x="1.4343%" y="1220" width="0.2241%" height="15" fill="rgb(247,70,30)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (5 samples, 0.22%)</title><rect x="1.4343%" y="1236" width="0.2241%" height="15" fill="rgb(212,68,19)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (5 samples, 0.22%)</title><rect x="1.4343%" y="1252" width="0.2241%" height="15" fill="rgb(240,187,13)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (5 samples, 0.22%)</title><rect x="1.4343%" y="1268" width="0.2241%" height="15" fill="rgb(223,113,26)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.22%)</title><rect x="1.4343%" y="1284" width="0.2241%" height="15" fill="rgb(206,192,2)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1294.50"></text></g><g><title>&lt;module&gt; (pyparsing/exceptions.py:15) (5 samples, 0.22%)</title><rect x="1.4343%" y="1300" width="0.2241%" height="15" fill="rgb(241,108,4)" fg:x="32" fg:w="5"/><text x="1.6843%" y="1310.50"></text></g><g><title>_collapse_string_to_ranges (pyparsing/util.py:210) (3 samples, 0.13%)</title><rect x="1.5240%" y="1316" width="0.1345%" height="15" fill="rgb(247,173,49)" fg:x="34" fg:w="3"/><text x="1.7740%" y="1326.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:161) (9 samples, 0.40%)</title><rect x="1.3447%" y="884" width="0.4034%" height="15" fill="rgb(224,114,35)" fg:x="30" fg:w="9"/><text x="1.5947%" y="894.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (9 samples, 0.40%)</title><rect x="1.3447%" y="900" width="0.4034%" height="15" fill="rgb(245,159,27)" fg:x="30" fg:w="9"/><text x="1.5947%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.40%)</title><rect x="1.3447%" y="916" width="0.4034%" height="15" fill="rgb(245,172,44)" fg:x="30" fg:w="9"/><text x="1.5947%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (9 samples, 0.40%)</title><rect x="1.3447%" y="932" width="0.4034%" height="15" fill="rgb(236,23,11)" fg:x="30" fg:w="9"/><text x="1.5947%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (9 samples, 0.40%)</title><rect x="1.3447%" y="948" width="0.4034%" height="15" fill="rgb(205,117,38)" fg:x="30" fg:w="9"/><text x="1.5947%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (9 samples, 0.40%)</title><rect x="1.3447%" y="964" width="0.4034%" height="15" fill="rgb(237,72,25)" fg:x="30" fg:w="9"/><text x="1.5947%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (9 samples, 0.40%)</title><rect x="1.3447%" y="980" width="0.4034%" height="15" fill="rgb(244,70,9)" fg:x="30" fg:w="9"/><text x="1.5947%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.40%)</title><rect x="1.3447%" y="996" width="0.4034%" height="15" fill="rgb(217,125,39)" fg:x="30" fg:w="9"/><text x="1.5947%" y="1006.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:28) (7 samples, 0.31%)</title><rect x="1.4343%" y="1012" width="0.3138%" height="15" fill="rgb(235,36,10)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="1.4343%" y="1028" width="0.3138%" height="15" fill="rgb(251,123,47)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="1.4343%" y="1044" width="0.3138%" height="15" fill="rgb(221,13,13)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="1.4343%" y="1060" width="0.3138%" height="15" fill="rgb(238,131,9)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="1.4343%" y="1076" width="0.3138%" height="15" fill="rgb(211,50,8)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="1.4343%" y="1092" width="0.3138%" height="15" fill="rgb(245,182,24)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1102.50"></text></g><g><title>&lt;module&gt; (matplotlib/_fontconfig_pattern.py:15) (7 samples, 0.31%)</title><rect x="1.4343%" y="1108" width="0.3138%" height="15" fill="rgb(242,14,37)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (7 samples, 0.31%)</title><rect x="1.4343%" y="1124" width="0.3138%" height="15" fill="rgb(246,228,12)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (7 samples, 0.31%)</title><rect x="1.4343%" y="1140" width="0.3138%" height="15" fill="rgb(213,55,15)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (7 samples, 0.31%)</title><rect x="1.4343%" y="1156" width="0.3138%" height="15" fill="rgb(209,9,3)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (7 samples, 0.31%)</title><rect x="1.4343%" y="1172" width="0.3138%" height="15" fill="rgb(230,59,30)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.31%)</title><rect x="1.4343%" y="1188" width="0.3138%" height="15" fill="rgb(209,121,21)" fg:x="32" fg:w="7"/><text x="1.6843%" y="1198.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/deterministic/experiments/__init__.py:1) (41 samples, 1.84%)</title><rect x="0.0000%" y="356" width="1.8377%" height="15" fill="rgb(220,109,13)" fg:x="0" fg:w="41"/><text x="0.2500%" y="366.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (41 samples, 1.84%)</title><rect x="0.0000%" y="372" width="1.8377%" height="15" fill="rgb(232,18,1)" fg:x="0" fg:w="41"/><text x="0.2500%" y="382.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (41 samples, 1.84%)</title><rect x="0.0000%" y="388" width="1.8377%" height="15" fill="rgb(215,41,42)" fg:x="0" fg:w="41"/><text x="0.2500%" y="398.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (41 samples, 1.84%)</title><rect x="0.0000%" y="404" width="1.8377%" height="15" fill="rgb(224,123,36)" fg:x="0" fg:w="41"/><text x="0.2500%" y="414.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (41 samples, 1.84%)</title><rect x="0.0000%" y="420" width="1.8377%" height="15" fill="rgb(240,125,3)" fg:x="0" fg:w="41"/><text x="0.2500%" y="430.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (41 samples, 1.84%)</title><rect x="0.0000%" y="436" width="1.8377%" height="15" fill="rgb(205,98,50)" fg:x="0" fg:w="41"/><text x="0.2500%" y="446.50">_..</text></g><g><title>&lt;module&gt; (bisimulation_learning/deterministic/experiments/clock_synchronization_experiments.py:6) (32 samples, 1.43%)</title><rect x="0.4034%" y="452" width="1.4343%" height="15" fill="rgb(205,185,37)" fg:x="9" fg:w="32"/><text x="0.6534%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (32 samples, 1.43%)</title><rect x="0.4034%" y="468" width="1.4343%" height="15" fill="rgb(238,207,15)" fg:x="9" fg:w="32"/><text x="0.6534%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (32 samples, 1.43%)</title><rect x="0.4034%" y="484" width="1.4343%" height="15" fill="rgb(213,199,42)" fg:x="9" fg:w="32"/><text x="0.6534%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (32 samples, 1.43%)</title><rect x="0.4034%" y="500" width="1.4343%" height="15" fill="rgb(235,201,11)" fg:x="9" fg:w="32"/><text x="0.6534%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (32 samples, 1.43%)</title><rect x="0.4034%" y="516" width="1.4343%" height="15" fill="rgb(207,46,11)" fg:x="9" fg:w="32"/><text x="0.6534%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (32 samples, 1.43%)</title><rect x="0.4034%" y="532" width="1.4343%" height="15" fill="rgb(241,35,35)" fg:x="9" fg:w="32"/><text x="0.6534%" y="542.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/shared/__init__.py:1) (32 samples, 1.43%)</title><rect x="0.4034%" y="548" width="1.4343%" height="15" fill="rgb(243,32,47)" fg:x="9" fg:w="32"/><text x="0.6534%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (32 samples, 1.43%)</title><rect x="0.4034%" y="564" width="1.4343%" height="15" fill="rgb(247,202,23)" fg:x="9" fg:w="32"/><text x="0.6534%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (32 samples, 1.43%)</title><rect x="0.4034%" y="580" width="1.4343%" height="15" fill="rgb(219,102,11)" fg:x="9" fg:w="32"/><text x="0.6534%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (32 samples, 1.43%)</title><rect x="0.4034%" y="596" width="1.4343%" height="15" fill="rgb(243,110,44)" fg:x="9" fg:w="32"/><text x="0.6534%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (32 samples, 1.43%)</title><rect x="0.4034%" y="612" width="1.4343%" height="15" fill="rgb(222,74,54)" fg:x="9" fg:w="32"/><text x="0.6534%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (32 samples, 1.43%)</title><rect x="0.4034%" y="628" width="1.4343%" height="15" fill="rgb(216,99,12)" fg:x="9" fg:w="32"/><text x="0.6534%" y="638.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/shared/binary_decision_trees.py:9) (29 samples, 1.30%)</title><rect x="0.5379%" y="644" width="1.2999%" height="15" fill="rgb(226,22,26)" fg:x="12" fg:w="29"/><text x="0.7879%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (29 samples, 1.30%)</title><rect x="0.5379%" y="660" width="1.2999%" height="15" fill="rgb(217,163,10)" fg:x="12" fg:w="29"/><text x="0.7879%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (29 samples, 1.30%)</title><rect x="0.5379%" y="676" width="1.2999%" height="15" fill="rgb(213,25,53)" fg:x="12" fg:w="29"/><text x="0.7879%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (29 samples, 1.30%)</title><rect x="0.5379%" y="692" width="1.2999%" height="15" fill="rgb(252,105,26)" fg:x="12" fg:w="29"/><text x="0.7879%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (29 samples, 1.30%)</title><rect x="0.5379%" y="708" width="1.2999%" height="15" fill="rgb(220,39,43)" fg:x="12" fg:w="29"/><text x="0.7879%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (29 samples, 1.30%)</title><rect x="0.5379%" y="724" width="1.2999%" height="15" fill="rgb(229,68,48)" fg:x="12" fg:w="29"/><text x="0.7879%" y="734.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/shared/utils.py:7) (22 samples, 0.99%)</title><rect x="0.8516%" y="740" width="0.9861%" height="15" fill="rgb(252,8,32)" fg:x="19" fg:w="22"/><text x="1.1016%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (22 samples, 0.99%)</title><rect x="0.8516%" y="756" width="0.9861%" height="15" fill="rgb(223,20,43)" fg:x="19" fg:w="22"/><text x="1.1016%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (12 samples, 0.54%)</title><rect x="1.2999%" y="772" width="0.5379%" height="15" fill="rgb(229,81,49)" fg:x="29" fg:w="12"/><text x="1.5499%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.54%)</title><rect x="1.2999%" y="788" width="0.5379%" height="15" fill="rgb(236,28,36)" fg:x="29" fg:w="12"/><text x="1.5499%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (12 samples, 0.54%)</title><rect x="1.2999%" y="804" width="0.5379%" height="15" fill="rgb(249,185,26)" fg:x="29" fg:w="12"/><text x="1.5499%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (12 samples, 0.54%)</title><rect x="1.2999%" y="820" width="0.5379%" height="15" fill="rgb(249,174,33)" fg:x="29" fg:w="12"/><text x="1.5499%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (12 samples, 0.54%)</title><rect x="1.2999%" y="836" width="0.5379%" height="15" fill="rgb(233,201,37)" fg:x="29" fg:w="12"/><text x="1.5499%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (12 samples, 0.54%)</title><rect x="1.2999%" y="852" width="0.5379%" height="15" fill="rgb(221,78,26)" fg:x="29" fg:w="12"/><text x="1.5499%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.54%)</title><rect x="1.2999%" y="868" width="0.5379%" height="15" fill="rgb(250,127,30)" fg:x="29" fg:w="12"/><text x="1.5499%" y="878.50"></text></g><g><title>&lt;module&gt; (bisimulation_learning/fintely_branching/experiments/__init__.py:1) (42 samples, 1.88%)</title><rect x="0.0000%" y="164" width="1.8826%" height="15" fill="rgb(230,49,44)" fg:x="0" fg:w="42"/><text x="0.2500%" y="174.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (42 samples, 1.88%)</title><rect x="0.0000%" y="180" width="1.8826%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="42"/><text x="0.2500%" y="190.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (42 samples, 1.88%)</title><rect x="0.0000%" y="196" width="1.8826%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="42"/><text x="0.2500%" y="206.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (42 samples, 1.88%)</title><rect x="0.0000%" y="212" width="1.8826%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="42"/><text x="0.2500%" y="222.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (42 samples, 1.88%)</title><rect x="0.0000%" y="228" width="1.8826%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="42"/><text x="0.2500%" y="238.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (42 samples, 1.88%)</title><rect x="0.0000%" y="244" width="1.8826%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="42"/><text x="0.2500%" y="254.50">_..</text></g><g><title>&lt;module&gt; (bisimulation_learning/fintely_branching/experiments/cond_term.py:2) (42 samples, 1.88%)</title><rect x="0.0000%" y="260" width="1.8826%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="42"/><text x="0.2500%" y="270.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (42 samples, 1.88%)</title><rect x="0.0000%" y="276" width="1.8826%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="42"/><text x="0.2500%" y="286.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (42 samples, 1.88%)</title><rect x="0.0000%" y="292" width="1.8826%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="42"/><text x="0.2500%" y="302.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (42 samples, 1.88%)</title><rect x="0.0000%" y="308" width="1.8826%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="42"/><text x="0.2500%" y="318.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (42 samples, 1.88%)</title><rect x="0.0000%" y="324" width="1.8826%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="42"/><text x="0.2500%" y="334.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (42 samples, 1.88%)</title><rect x="0.0000%" y="340" width="1.8826%" height="15" fill="rgb(235,168,5)" fg:x="0" fg:w="42"/><text x="0.2500%" y="350.50">_..</text></g><g><title>&lt;module&gt; (run_branching.py:1) (43 samples, 1.93%)</title><rect x="0.0000%" y="68" width="1.9274%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="43"/><text x="0.2500%" y="78.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (43 samples, 1.93%)</title><rect x="0.0000%" y="84" width="1.9274%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="43"/><text x="0.2500%" y="94.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (43 samples, 1.93%)</title><rect x="0.0000%" y="100" width="1.9274%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="43"/><text x="0.2500%" y="110.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (43 samples, 1.93%)</title><rect x="0.0000%" y="116" width="1.9274%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="43"/><text x="0.2500%" y="126.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (43 samples, 1.93%)</title><rect x="0.0000%" y="132" width="1.9274%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="43"/><text x="0.2500%" y="142.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (43 samples, 1.93%)</title><rect x="0.0000%" y="148" width="1.9274%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="43"/><text x="0.2500%" y="158.50">_..</text></g><g><title>&lt;module&gt; (run_branching.py:48) (10 samples, 0.45%)</title><rect x="1.9722%" y="68" width="0.4482%" height="15" fill="rgb(228,201,54)" fg:x="44" fg:w="10"/><text x="2.2222%" y="78.50"></text></g><g><title>term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:148) (10 samples, 0.45%)</title><rect x="1.9722%" y="84" width="0.4482%" height="15" fill="rgb(222,22,37)" fg:x="44" fg:w="10"/><text x="2.2222%" y="94.50"></text></g><g><title>__init__ (bisimulation_learning/shared/template.py:55) (9 samples, 0.40%)</title><rect x="2.0170%" y="100" width="0.4034%" height="15" fill="rgb(237,53,32)" fg:x="45" fg:w="9"/><text x="2.2670%" y="110.50"></text></g><g><title>setup_adjacency (bisimulation_learning/shared/template.py:101) (9 samples, 0.40%)</title><rect x="2.0170%" y="116" width="0.4034%" height="15" fill="rgb(233,25,53)" fg:x="45" fg:w="9"/><text x="2.2670%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/shared/template.py:101) (9 samples, 0.40%)</title><rect x="2.0170%" y="132" width="0.4034%" height="15" fill="rgb(210,40,34)" fg:x="45" fg:w="9"/><text x="2.2670%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/shared/template.py:101) (9 samples, 0.40%)</title><rect x="2.0170%" y="148" width="0.4034%" height="15" fill="rgb(241,220,44)" fg:x="45" fg:w="9"/><text x="2.2670%" y="158.50"></text></g><g><title>adjacency (bisimulation_learning/shared/template.py:104) (9 samples, 0.40%)</title><rect x="2.0170%" y="164" width="0.4034%" height="15" fill="rgb(235,28,35)" fg:x="45" fg:w="9"/><text x="2.2670%" y="174.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (9 samples, 0.40%)</title><rect x="2.0170%" y="180" width="0.4034%" height="15" fill="rgb(210,56,17)" fg:x="45" fg:w="9"/><text x="2.2670%" y="190.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (8 samples, 0.36%)</title><rect x="2.0619%" y="196" width="0.3586%" height="15" fill="rgb(224,130,29)" fg:x="46" fg:w="8"/><text x="2.3119%" y="206.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:112) (7 samples, 0.31%)</title><rect x="2.1067%" y="212" width="0.3138%" height="15" fill="rgb(235,212,8)" fg:x="47" fg:w="7"/><text x="2.3567%" y="222.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (7 samples, 0.31%)</title><rect x="2.1067%" y="228" width="0.3138%" height="15" fill="rgb(223,33,50)" fg:x="47" fg:w="7"/><text x="2.3567%" y="238.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (5 samples, 0.22%)</title><rect x="2.1963%" y="244" width="0.2241%" height="15" fill="rgb(219,149,13)" fg:x="49" fg:w="5"/><text x="2.4463%" y="254.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:112) (4 samples, 0.18%)</title><rect x="2.2411%" y="260" width="0.1793%" height="15" fill="rgb(250,156,29)" fg:x="50" fg:w="4"/><text x="2.4911%" y="270.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (4 samples, 0.18%)</title><rect x="2.2411%" y="276" width="0.1793%" height="15" fill="rgb(216,193,19)" fg:x="50" fg:w="4"/><text x="2.4911%" y="286.50"></text></g><g><title>generate_adjacency (bisimulation_learning/shared/template.py:110) (4 samples, 0.18%)</title><rect x="2.2411%" y="292" width="0.1793%" height="15" fill="rgb(216,135,14)" fg:x="50" fg:w="4"/><text x="2.4911%" y="302.50"></text></g><g><title>__del__ (z3/z3.py:6964) (8 samples, 0.36%)</title><rect x="2.4653%" y="132" width="0.3586%" height="15" fill="rgb(241,47,5)" fg:x="55" fg:w="8"/><text x="2.7153%" y="142.50"></text></g><g><title>Z3_solver_dec_ref (z3/z3core.py:4101) (8 samples, 0.36%)</title><rect x="2.4653%" y="148" width="0.3586%" height="15" fill="rgb(233,42,35)" fg:x="55" fg:w="8"/><text x="2.7153%" y="158.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="2.9583%" y="244" width="0.1345%" height="15" fill="rgb(231,13,6)" fg:x="66" fg:w="3"/><text x="3.2083%" y="254.50"></text></g><g><title>__add__ (z3/z3.py:2478) (8 samples, 0.36%)</title><rect x="2.9583%" y="228" width="0.3586%" height="15" fill="rgb(207,181,40)" fg:x="66" fg:w="8"/><text x="3.2083%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (5 samples, 0.22%)</title><rect x="3.0928%" y="244" width="0.2241%" height="15" fill="rgb(254,173,49)" fg:x="69" fg:w="5"/><text x="3.3428%" y="254.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="3.1376%" y="260" width="0.1793%" height="15" fill="rgb(221,1,38)" fg:x="70" fg:w="4"/><text x="3.3876%" y="270.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="3.1376%" y="276" width="0.1793%" height="15" fill="rgb(206,124,46)" fg:x="70" fg:w="4"/><text x="3.3876%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="3.4065%" y="244" width="0.1345%" height="15" fill="rgb(249,21,11)" fg:x="76" fg:w="3"/><text x="3.6565%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="3.5410%" y="244" width="0.2241%" height="15" fill="rgb(222,201,40)" fg:x="79" fg:w="5"/><text x="3.7910%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="3.5858%" y="260" width="0.1793%" height="15" fill="rgb(235,61,29)" fg:x="80" fg:w="4"/><text x="3.8358%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="3.5858%" y="276" width="0.1793%" height="15" fill="rgb(219,207,3)" fg:x="80" fg:w="4"/><text x="3.8358%" y="286.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="3.7651%" y="260" width="0.1345%" height="15" fill="rgb(222,56,46)" fg:x="84" fg:w="3"/><text x="4.0151%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="3.7651%" y="276" width="0.1345%" height="15" fill="rgb(239,76,54)" fg:x="84" fg:w="3"/><text x="4.0151%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="3.7651%" y="292" width="0.1345%" height="15" fill="rgb(231,124,27)" fg:x="84" fg:w="3"/><text x="4.0151%" y="302.50"></text></g><g><title>ToReal (z3/z3.py:3417) (4 samples, 0.18%)</title><rect x="3.9892%" y="276" width="0.1793%" height="15" fill="rgb(249,195,6)" fg:x="89" fg:w="4"/><text x="4.2392%" y="286.50"></text></g><g><title>is_int (z3/z3.py:2455) (4 samples, 0.18%)</title><rect x="3.9892%" y="292" width="0.1793%" height="15" fill="rgb(237,174,47)" fg:x="89" fg:w="4"/><text x="4.2392%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (22 samples, 0.99%)</title><rect x="3.3169%" y="228" width="0.9861%" height="15" fill="rgb(206,201,31)" fg:x="74" fg:w="22"/><text x="3.5669%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (12 samples, 0.54%)</title><rect x="3.7651%" y="244" width="0.5379%" height="15" fill="rgb(231,57,52)" fg:x="84" fg:w="12"/><text x="4.0151%" y="254.50"></text></g><g><title>cast (z3/z3.py:2397) (7 samples, 0.31%)</title><rect x="3.9892%" y="260" width="0.3138%" height="15" fill="rgb(248,177,22)" fg:x="89" fg:w="7"/><text x="4.2392%" y="270.50"></text></g><g><title>ToReal (z3/z3.py:3419) (3 samples, 0.13%)</title><rect x="4.1685%" y="276" width="0.1345%" height="15" fill="rgb(215,211,37)" fg:x="93" fg:w="3"/><text x="4.4185%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="4.1685%" y="292" width="0.1345%" height="15" fill="rgb(241,128,51)" fg:x="93" fg:w="3"/><text x="4.4185%" y="302.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (34 samples, 1.52%)</title><rect x="2.9135%" y="196" width="1.5240%" height="15" fill="rgb(227,165,31)" fg:x="65" fg:w="34"/><text x="3.1635%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (34 samples, 1.52%)</title><rect x="2.9135%" y="212" width="1.5240%" height="15" fill="rgb(228,167,24)" fg:x="65" fg:w="34"/><text x="3.1635%" y="222.50"></text></g><g><title>__mul__ (z3/z3.py:2504) (3 samples, 0.13%)</title><rect x="4.3030%" y="228" width="0.1345%" height="15" fill="rgb(228,143,12)" fg:x="96" fg:w="3"/><text x="4.5530%" y="238.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:131) (8 samples, 0.36%)</title><rect x="4.4375%" y="196" width="0.3586%" height="15" fill="rgb(249,149,8)" fg:x="99" fg:w="8"/><text x="4.6875%" y="206.50"></text></g><g><title>RealVal (z3/z3.py:3262) (8 samples, 0.36%)</title><rect x="4.4375%" y="212" width="0.3586%" height="15" fill="rgb(243,35,44)" fg:x="99" fg:w="8"/><text x="4.6875%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="4.9753%" y="244" width="0.1793%" height="15" fill="rgb(246,89,9)" fg:x="111" fg:w="4"/><text x="5.2253%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="5.1546%" y="260" width="0.1345%" height="15" fill="rgb(233,213,13)" fg:x="115" fg:w="3"/><text x="5.4046%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="5.1546%" y="276" width="0.1345%" height="15" fill="rgb(233,141,41)" fg:x="115" fg:w="3"/><text x="5.4046%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="5.1546%" y="292" width="0.1345%" height="15" fill="rgb(239,167,4)" fg:x="115" fg:w="3"/><text x="5.4046%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="5.1546%" y="308" width="0.1345%" height="15" fill="rgb(209,217,16)" fg:x="115" fg:w="3"/><text x="5.4046%" y="318.50"></text></g><g><title>__add__ (z3/z3.py:2478) (9 samples, 0.40%)</title><rect x="4.9753%" y="228" width="0.4034%" height="15" fill="rgb(219,88,35)" fg:x="111" fg:w="9"/><text x="5.2253%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (5 samples, 0.22%)</title><rect x="5.1546%" y="244" width="0.2241%" height="15" fill="rgb(220,193,23)" fg:x="115" fg:w="5"/><text x="5.4046%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="5.6477%" y="260" width="0.1345%" height="15" fill="rgb(230,90,52)" fg:x="126" fg:w="3"/><text x="5.8977%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="5.6477%" y="276" width="0.1345%" height="15" fill="rgb(252,106,19)" fg:x="126" fg:w="3"/><text x="5.8977%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (8 samples, 0.36%)</title><rect x="5.5132%" y="244" width="0.3586%" height="15" fill="rgb(206,74,20)" fg:x="123" fg:w="8"/><text x="5.7632%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="5.8718%" y="244" width="0.1793%" height="15" fill="rgb(230,138,44)" fg:x="131" fg:w="4"/><text x="6.1218%" y="254.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="5.9166%" y="260" width="0.1345%" height="15" fill="rgb(235,182,43)" fg:x="132" fg:w="3"/><text x="6.1666%" y="270.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="5.9166%" y="276" width="0.1345%" height="15" fill="rgb(242,16,51)" fg:x="132" fg:w="3"/><text x="6.1666%" y="286.50"></text></g><g><title>ToReal (z3/z3.py:3417) (3 samples, 0.13%)</title><rect x="6.2304%" y="276" width="0.1345%" height="15" fill="rgb(248,9,4)" fg:x="139" fg:w="3"/><text x="6.4804%" y="286.50"></text></g><g><title>is_int (z3/z3.py:2455) (3 samples, 0.13%)</title><rect x="6.2304%" y="292" width="0.1345%" height="15" fill="rgb(210,31,22)" fg:x="139" fg:w="3"/><text x="6.4804%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (21 samples, 0.94%)</title><rect x="5.4684%" y="228" width="0.9413%" height="15" fill="rgb(239,54,39)" fg:x="122" fg:w="21"/><text x="5.7184%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (8 samples, 0.36%)</title><rect x="6.0511%" y="244" width="0.3586%" height="15" fill="rgb(230,99,41)" fg:x="135" fg:w="8"/><text x="6.3011%" y="254.50"></text></g><g><title>cast (z3/z3.py:2397) (4 samples, 0.18%)</title><rect x="6.2304%" y="260" width="0.1793%" height="15" fill="rgb(253,106,12)" fg:x="139" fg:w="4"/><text x="6.4804%" y="270.50"></text></g><g><title>__mul__ (z3/z3.py:2504) (3 samples, 0.13%)</title><rect x="6.4097%" y="228" width="0.1345%" height="15" fill="rgb(213,46,41)" fg:x="143" fg:w="3"/><text x="6.6597%" y="238.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (41 samples, 1.84%)</title><rect x="4.7961%" y="196" width="1.8377%" height="15" fill="rgb(215,133,35)" fg:x="107" fg:w="41"/><text x="5.0461%" y="206.50">b..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (41 samples, 1.84%)</title><rect x="4.7961%" y="212" width="1.8377%" height="15" fill="rgb(213,28,5)" fg:x="107" fg:w="41"/><text x="5.0461%" y="222.50">_..</text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="6.6786%" y="228" width="0.1345%" height="15" fill="rgb(215,77,49)" fg:x="149" fg:w="3"/><text x="6.9286%" y="238.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="6.6786%" y="244" width="0.1345%" height="15" fill="rgb(248,100,22)" fg:x="149" fg:w="3"/><text x="6.9286%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="6.8579%" y="244" width="0.1345%" height="15" fill="rgb(208,67,9)" fg:x="153" fg:w="3"/><text x="7.1079%" y="254.50"></text></g><g><title>cast (z3/z3.py:2406) (3 samples, 0.13%)</title><rect x="6.8579%" y="260" width="0.1345%" height="15" fill="rgb(219,133,21)" fg:x="153" fg:w="3"/><text x="7.1079%" y="270.50"></text></g><g><title>IntVal (z3/z3.py:3243) (3 samples, 0.13%)</title><rect x="6.8579%" y="276" width="0.1345%" height="15" fill="rgb(246,46,29)" fg:x="153" fg:w="3"/><text x="7.1079%" y="286.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="6.9924%" y="260" width="0.1345%" height="15" fill="rgb(246,185,52)" fg:x="156" fg:w="3"/><text x="7.2424%" y="270.50"></text></g><g><title>Z3_dec_ref (z3/z3core.py:1626) (3 samples, 0.13%)</title><rect x="6.9924%" y="276" width="0.1345%" height="15" fill="rgb(252,136,11)" fg:x="156" fg:w="3"/><text x="7.2424%" y="286.50"></text></g><g><title>If (z3/z3.py:1416) (8 samples, 0.36%)</title><rect x="6.8131%" y="228" width="0.3586%" height="15" fill="rgb(219,138,53)" fg:x="152" fg:w="8"/><text x="7.0631%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="6.9924%" y="244" width="0.1793%" height="15" fill="rgb(211,51,23)" fg:x="156" fg:w="4"/><text x="7.2424%" y="254.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (5 samples, 0.22%)</title><rect x="7.2613%" y="228" width="0.2241%" height="15" fill="rgb(247,221,28)" fg:x="162" fg:w="5"/><text x="7.5113%" y="238.50"></text></g><g><title>If (z3/z3.py:1415) (5 samples, 0.22%)</title><rect x="7.5303%" y="244" width="0.2241%" height="15" fill="rgb(251,222,45)" fg:x="168" fg:w="5"/><text x="7.7803%" y="254.50"></text></g><g><title>cast (z3/z3.py:1554) (5 samples, 0.22%)</title><rect x="7.5303%" y="260" width="0.2241%" height="15" fill="rgb(217,162,53)" fg:x="168" fg:w="5"/><text x="7.7803%" y="270.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="7.5751%" y="276" width="0.1793%" height="15" fill="rgb(229,93,14)" fg:x="169" fg:w="4"/><text x="7.8251%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="7.6199%" y="292" width="0.1345%" height="15" fill="rgb(209,67,49)" fg:x="170" fg:w="3"/><text x="7.8699%" y="302.50"></text></g><g><title>IntSort (z3/z3.py:3202) (4 samples, 0.18%)</title><rect x="7.7544%" y="308" width="0.1793%" height="15" fill="rgb(213,87,29)" fg:x="173" fg:w="4"/><text x="8.0044%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1223) (5 samples, 0.22%)</title><rect x="7.7544%" y="260" width="0.2241%" height="15" fill="rgb(205,151,52)" fg:x="173" fg:w="5"/><text x="8.0044%" y="270.50"></text></g><g><title>_py2expr (z3/z3.py:3177) (5 samples, 0.22%)</title><rect x="7.7544%" y="276" width="0.2241%" height="15" fill="rgb(253,215,39)" fg:x="173" fg:w="5"/><text x="8.0044%" y="286.50"></text></g><g><title>IntVal (z3/z3.py:3243) (5 samples, 0.22%)</title><rect x="7.7544%" y="292" width="0.2241%" height="15" fill="rgb(221,220,41)" fg:x="173" fg:w="5"/><text x="8.0044%" y="302.50"></text></g><g><title>If (z3/z3.py:1416) (9 samples, 0.40%)</title><rect x="7.7544%" y="244" width="0.4034%" height="15" fill="rgb(218,133,21)" fg:x="173" fg:w="9"/><text x="8.0044%" y="254.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:23) (124 samples, 5.56%)</title><rect x="2.8687%" y="164" width="5.5580%" height="15" fill="rgb(221,193,43)" fg:x="64" fg:w="124"/><text x="3.1187%" y="174.50">cond_im..</text></g><g><title>f (bisimulation_learning/shared/template.py:116) (123 samples, 5.51%)</title><rect x="2.9135%" y="180" width="5.5132%" height="15" fill="rgb(240,128,52)" fg:x="65" fg:w="123"/><text x="3.1635%" y="190.50">f (bisi..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (40 samples, 1.79%)</title><rect x="6.6338%" y="196" width="1.7929%" height="15" fill="rgb(253,114,12)" fg:x="148" fg:w="40"/><text x="6.8838%" y="206.50">b..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (40 samples, 1.79%)</title><rect x="6.6338%" y="212" width="1.7929%" height="15" fill="rgb(215,223,47)" fg:x="148" fg:w="40"/><text x="6.8838%" y="222.50">f..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (21 samples, 0.94%)</title><rect x="7.4854%" y="228" width="0.9413%" height="15" fill="rgb(248,225,23)" fg:x="167" fg:w="21"/><text x="7.7354%" y="238.50"></text></g><g><title>__le__ (z3/z3.py:2672) (5 samples, 0.22%)</title><rect x="8.2026%" y="244" width="0.2241%" height="15" fill="rgb(250,108,0)" fg:x="183" fg:w="5"/><text x="8.4526%" y="254.50"></text></g><g><title>And (z3/z3.py:1917) (3 samples, 0.13%)</title><rect x="8.4267%" y="180" width="0.1345%" height="15" fill="rgb(228,208,7)" fg:x="188" fg:w="3"/><text x="8.6767%" y="190.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:24) (5 samples, 0.22%)</title><rect x="8.4267%" y="164" width="0.2241%" height="15" fill="rgb(244,45,10)" fg:x="188" fg:w="5"/><text x="8.6767%" y="174.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (3 samples, 0.13%)</title><rect x="8.6957%" y="180" width="0.1345%" height="15" fill="rgb(207,125,25)" fg:x="194" fg:w="3"/><text x="8.9457%" y="190.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="9.0542%" y="244" width="0.1345%" height="15" fill="rgb(210,195,18)" fg:x="202" fg:w="3"/><text x="9.3042%" y="254.50"></text></g><g><title>__add__ (z3/z3.py:2478) (5 samples, 0.22%)</title><rect x="9.0542%" y="228" width="0.2241%" height="15" fill="rgb(249,80,12)" fg:x="202" fg:w="5"/><text x="9.3042%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="9.3680%" y="244" width="0.2241%" height="15" fill="rgb(221,65,9)" fg:x="209" fg:w="5"/><text x="9.6180%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="9.7266%" y="260" width="0.1345%" height="15" fill="rgb(235,49,36)" fg:x="217" fg:w="3"/><text x="9.9766%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="9.7266%" y="276" width="0.1345%" height="15" fill="rgb(225,32,20)" fg:x="217" fg:w="3"/><text x="9.9766%" y="286.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (27 samples, 1.21%)</title><rect x="8.8749%" y="196" width="1.2102%" height="15" fill="rgb(215,141,46)" fg:x="198" fg:w="27"/><text x="9.1249%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (27 samples, 1.21%)</title><rect x="8.8749%" y="212" width="1.2102%" height="15" fill="rgb(250,160,47)" fg:x="198" fg:w="27"/><text x="9.1249%" y="222.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (16 samples, 0.72%)</title><rect x="9.3680%" y="228" width="0.7172%" height="15" fill="rgb(216,222,40)" fg:x="209" fg:w="16"/><text x="9.6180%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (11 samples, 0.49%)</title><rect x="9.5921%" y="244" width="0.4931%" height="15" fill="rgb(234,217,39)" fg:x="214" fg:w="11"/><text x="9.8421%" y="254.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:131) (3 samples, 0.13%)</title><rect x="10.0852%" y="196" width="0.1345%" height="15" fill="rgb(207,178,40)" fg:x="225" fg:w="3"/><text x="10.3352%" y="206.50"></text></g><g><title>RealVal (z3/z3.py:3262) (3 samples, 0.13%)</title><rect x="10.0852%" y="212" width="0.1345%" height="15" fill="rgb(221,136,13)" fg:x="225" fg:w="3"/><text x="10.3352%" y="222.50"></text></g><g><title>RealSort (z3/z3.py:3219) (3 samples, 0.13%)</title><rect x="10.0852%" y="228" width="0.1345%" height="15" fill="rgb(249,199,10)" fg:x="225" fg:w="3"/><text x="10.3352%" y="238.50"></text></g><g><title>__add__ (z3/z3.py:2478) (3 samples, 0.13%)</title><rect x="10.3093%" y="228" width="0.1345%" height="15" fill="rgb(249,222,13)" fg:x="230" fg:w="3"/><text x="10.5593%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="10.6230%" y="244" width="0.1793%" height="15" fill="rgb(244,185,38)" fg:x="237" fg:w="4"/><text x="10.8730%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="10.9368%" y="260" width="0.1345%" height="15" fill="rgb(236,202,9)" fg:x="244" fg:w="3"/><text x="11.1868%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="10.9368%" y="276" width="0.1345%" height="15" fill="rgb(250,229,37)" fg:x="244" fg:w="3"/><text x="11.1868%" y="286.50"></text></g><g><title>cast (z3/z3.py:2397) (3 samples, 0.13%)</title><rect x="11.0713%" y="260" width="0.1345%" height="15" fill="rgb(206,174,23)" fg:x="247" fg:w="3"/><text x="11.3213%" y="270.50"></text></g><g><title>ToReal (z3/z3.py:3417) (3 samples, 0.13%)</title><rect x="11.0713%" y="276" width="0.1345%" height="15" fill="rgb(211,33,43)" fg:x="247" fg:w="3"/><text x="11.3213%" y="286.50"></text></g><g><title>is_int (z3/z3.py:2455) (3 samples, 0.13%)</title><rect x="11.0713%" y="292" width="0.1345%" height="15" fill="rgb(245,58,50)" fg:x="247" fg:w="3"/><text x="11.3213%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (19 samples, 0.85%)</title><rect x="10.4886%" y="228" width="0.8516%" height="15" fill="rgb(244,68,36)" fg:x="234" fg:w="19"/><text x="10.7386%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (10 samples, 0.45%)</title><rect x="10.8920%" y="244" width="0.4482%" height="15" fill="rgb(232,229,15)" fg:x="243" fg:w="10"/><text x="11.1420%" y="254.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (27 samples, 1.21%)</title><rect x="10.2196%" y="196" width="1.2102%" height="15" fill="rgb(254,30,23)" fg:x="228" fg:w="27"/><text x="10.4696%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (27 samples, 1.21%)</title><rect x="10.2196%" y="212" width="1.2102%" height="15" fill="rgb(235,160,14)" fg:x="228" fg:w="27"/><text x="10.4696%" y="222.50"></text></g><g><title>If (z3/z3.py:1416) (5 samples, 0.22%)</title><rect x="11.4299%" y="228" width="0.2241%" height="15" fill="rgb(212,155,44)" fg:x="255" fg:w="5"/><text x="11.6799%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="11.4747%" y="244" width="0.1793%" height="15" fill="rgb(226,2,50)" fg:x="256" fg:w="4"/><text x="11.7247%" y="254.50"></text></g><g><title>__ge__ (z3/z3.py:2712) (3 samples, 0.13%)</title><rect x="11.7884%" y="228" width="0.1345%" height="15" fill="rgb(234,177,6)" fg:x="263" fg:w="3"/><text x="12.0384%" y="238.50"></text></g><g><title>Z3_mk_ge (z3/z3core.py:1985) (3 samples, 0.13%)</title><rect x="11.7884%" y="244" width="0.1345%" height="15" fill="rgb(217,24,9)" fg:x="263" fg:w="3"/><text x="12.0384%" y="254.50"></text></g><g><title>__le__ (z3/z3.py:2672) (8 samples, 0.36%)</title><rect x="12.1022%" y="244" width="0.3586%" height="15" fill="rgb(220,13,46)" fg:x="270" fg:w="8"/><text x="12.3522%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="12.2815%" y="260" width="0.1793%" height="15" fill="rgb(239,221,27)" fg:x="274" fg:w="4"/><text x="12.5315%" y="270.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:25) (87 samples, 3.90%)</title><rect x="8.6508%" y="164" width="3.8996%" height="15" fill="rgb(222,198,25)" fg:x="193" fg:w="87"/><text x="8.9008%" y="174.50">cond..</text></g><g><title>f (bisimulation_learning/shared/template.py:116) (82 samples, 3.68%)</title><rect x="8.8749%" y="180" width="3.6755%" height="15" fill="rgb(211,99,13)" fg:x="198" fg:w="82"/><text x="9.1249%" y="190.50">f (b..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (25 samples, 1.12%)</title><rect x="11.4299%" y="196" width="1.1206%" height="15" fill="rgb(232,111,31)" fg:x="255" fg:w="25"/><text x="11.6799%" y="206.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (25 samples, 1.12%)</title><rect x="11.4299%" y="212" width="1.1206%" height="15" fill="rgb(245,82,37)" fg:x="255" fg:w="25"/><text x="11.6799%" y="222.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (14 samples, 0.63%)</title><rect x="11.9229%" y="228" width="0.6275%" height="15" fill="rgb(227,149,46)" fg:x="266" fg:w="14"/><text x="12.1729%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (6 samples, 0.27%)</title><rect x="12.7297%" y="244" width="0.2689%" height="15" fill="rgb(218,36,50)" fg:x="284" fg:w="6"/><text x="12.9797%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (3 samples, 0.13%)</title><rect x="12.8642%" y="260" width="0.1345%" height="15" fill="rgb(226,80,48)" fg:x="287" fg:w="3"/><text x="13.1142%" y="270.50"></text></g><g><title>Z3_inc_ref (z3/z3core.py:1622) (3 samples, 0.13%)</title><rect x="13.2676%" y="308" width="0.1345%" height="15" fill="rgb(238,224,15)" fg:x="296" fg:w="3"/><text x="13.5176%" y="318.50"></text></g><g><title>cast (z3/z3.py:2393) (8 samples, 0.36%)</title><rect x="13.0883%" y="260" width="0.3586%" height="15" fill="rgb(241,136,10)" fg:x="292" fg:w="8"/><text x="13.3383%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (8 samples, 0.36%)</title><rect x="13.0883%" y="276" width="0.3586%" height="15" fill="rgb(208,32,45)" fg:x="292" fg:w="8"/><text x="13.3383%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="13.2676%" y="292" width="0.1793%" height="15" fill="rgb(207,135,9)" fg:x="296" fg:w="4"/><text x="13.5176%" y="302.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (20 samples, 0.90%)</title><rect x="12.5952%" y="228" width="0.8965%" height="15" fill="rgb(206,86,44)" fg:x="281" fg:w="20"/><text x="12.8452%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (10 samples, 0.45%)</title><rect x="13.0435%" y="244" width="0.4482%" height="15" fill="rgb(245,177,15)" fg:x="291" fg:w="10"/><text x="13.2935%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/shared/utils.py:173) (23 samples, 1.03%)</title><rect x="12.5504%" y="212" width="1.0309%" height="15" fill="rgb(206,64,50)" fg:x="280" fg:w="23"/><text x="12.8004%" y="222.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1256) (4 samples, 0.18%)</title><rect x="13.6262%" y="228" width="0.1793%" height="15" fill="rgb(234,36,40)" fg:x="304" fg:w="4"/><text x="13.8762%" y="238.50"></text></g><g><title>_reduce (z3/z3.py:1244) (4 samples, 0.18%)</title><rect x="13.6262%" y="244" width="0.1793%" height="15" fill="rgb(213,64,8)" fg:x="304" fg:w="4"/><text x="13.8762%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (3 samples, 0.13%)</title><rect x="13.6710%" y="260" width="0.1345%" height="15" fill="rgb(210,75,36)" fg:x="305" fg:w="3"/><text x="13.9210%" y="270.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="13.6710%" y="276" width="0.1345%" height="15" fill="rgb(229,88,21)" fg:x="305" fg:w="3"/><text x="13.9210%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="13.6710%" y="292" width="0.1345%" height="15" fill="rgb(252,204,47)" fg:x="305" fg:w="3"/><text x="13.9210%" y="302.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="13.8055%" y="276" width="0.1345%" height="15" fill="rgb(208,77,27)" fg:x="308" fg:w="3"/><text x="14.0555%" y="286.50"></text></g><g><title>And (z3/z3.py:1917) (10 samples, 0.45%)</title><rect x="13.6262%" y="212" width="0.4482%" height="15" fill="rgb(221,76,26)" fg:x="304" fg:w="10"/><text x="13.8762%" y="222.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1257) (6 samples, 0.27%)</title><rect x="13.8055%" y="228" width="0.2689%" height="15" fill="rgb(225,139,18)" fg:x="308" fg:w="6"/><text x="14.0555%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (z3/z3.py:1257) (6 samples, 0.27%)</title><rect x="13.8055%" y="244" width="0.2689%" height="15" fill="rgb(230,137,11)" fg:x="308" fg:w="6"/><text x="14.0555%" y="254.50"></text></g><g><title>cast (z3/z3.py:1554) (6 samples, 0.27%)</title><rect x="13.8055%" y="260" width="0.2689%" height="15" fill="rgb(212,28,1)" fg:x="308" fg:w="6"/><text x="14.0555%" y="270.50"></text></g><g><title>sort (z3/z3.py:1572) (3 samples, 0.13%)</title><rect x="13.9399%" y="276" width="0.1345%" height="15" fill="rgb(248,164,17)" fg:x="311" fg:w="3"/><text x="14.1899%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/conditions.py:26) (37 samples, 1.66%)</title><rect x="12.5504%" y="180" width="1.6584%" height="15" fill="rgb(222,171,42)" fg:x="280" fg:w="37"/><text x="12.8004%" y="190.50"></text></g><g><title>variables_equals (bisimulation_learning/shared/utils.py:173) (37 samples, 1.66%)</title><rect x="12.5504%" y="196" width="1.6584%" height="15" fill="rgb(243,84,45)" fg:x="280" fg:w="37"/><text x="12.8004%" y="206.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="14.2089%" y="196" width="0.1345%" height="15" fill="rgb(252,49,23)" fg:x="317" fg:w="3"/><text x="14.4589%" y="206.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="14.2089%" y="212" width="0.1345%" height="15" fill="rgb(215,19,7)" fg:x="317" fg:w="3"/><text x="14.4589%" y="222.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1256) (3 samples, 0.13%)</title><rect x="14.3433%" y="196" width="0.1345%" height="15" fill="rgb(238,81,41)" fg:x="320" fg:w="3"/><text x="14.5933%" y="206.50"></text></g><g><title>_reduce (z3/z3.py:1244) (3 samples, 0.13%)</title><rect x="14.3433%" y="212" width="0.1345%" height="15" fill="rgb(210,199,37)" fg:x="320" fg:w="3"/><text x="14.5933%" y="222.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="14.3433%" y="228" width="0.1345%" height="15" fill="rgb(244,192,49)" fg:x="320" fg:w="3"/><text x="14.5933%" y="238.50"></text></g><g><title>sort (z3/z3.py:1572) (3 samples, 0.13%)</title><rect x="14.3433%" y="244" width="0.1345%" height="15" fill="rgb(226,211,11)" fg:x="320" fg:w="3"/><text x="14.5933%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="14.3433%" y="260" width="0.1345%" height="15" fill="rgb(236,162,54)" fg:x="320" fg:w="3"/><text x="14.5933%" y="270.50"></text></g><g><title>Or (z3/z3.py:1950) (8 samples, 0.36%)</title><rect x="14.2089%" y="180" width="0.3586%" height="15" fill="rgb(220,229,9)" fg:x="317" fg:w="8"/><text x="14.4589%" y="190.50"></text></g><g><title>And (z3/z3.py:1917) (4 samples, 0.18%)</title><rect x="14.7019%" y="196" width="0.1793%" height="15" fill="rgb(250,87,22)" fg:x="328" fg:w="4"/><text x="14.9519%" y="206.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1257) (3 samples, 0.13%)</title><rect x="14.7468%" y="212" width="0.1345%" height="15" fill="rgb(239,43,17)" fg:x="329" fg:w="3"/><text x="14.9968%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (z3/z3.py:1257) (3 samples, 0.13%)</title><rect x="14.7468%" y="228" width="0.1345%" height="15" fill="rgb(231,177,25)" fg:x="329" fg:w="3"/><text x="14.9968%" y="238.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="14.7468%" y="244" width="0.1345%" height="15" fill="rgb(219,179,1)" fg:x="329" fg:w="3"/><text x="14.9968%" y="254.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:106) (7 samples, 0.31%)</title><rect x="14.7019%" y="180" width="0.3138%" height="15" fill="rgb(238,219,53)" fg:x="328" fg:w="7"/><text x="14.9519%" y="190.50"></text></g><g><title>If (z3/z3.py:1415) (4 samples, 0.18%)</title><rect x="15.0605%" y="196" width="0.1793%" height="15" fill="rgb(232,167,36)" fg:x="336" fg:w="4"/><text x="15.3105%" y="206.50"></text></g><g><title>cast (z3/z3.py:1554) (4 samples, 0.18%)</title><rect x="15.0605%" y="212" width="0.1793%" height="15" fill="rgb(244,19,51)" fg:x="336" fg:w="4"/><text x="15.3105%" y="222.50"></text></g><g><title>If (z3/z3.py:1416) (3 samples, 0.13%)</title><rect x="15.2398%" y="196" width="0.1345%" height="15" fill="rgb(224,6,22)" fg:x="340" fg:w="3"/><text x="15.4898%" y="206.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:109) (10 samples, 0.45%)</title><rect x="15.0157%" y="180" width="0.4482%" height="15" fill="rgb(224,145,5)" fg:x="335" fg:w="10"/><text x="15.2657%" y="190.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:111) (6 samples, 0.27%)</title><rect x="15.4639%" y="180" width="0.2689%" height="15" fill="rgb(234,130,49)" fg:x="345" fg:w="6"/><text x="15.7139%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (6 samples, 0.27%)</title><rect x="15.4639%" y="196" width="0.2689%" height="15" fill="rgb(254,6,2)" fg:x="345" fg:w="6"/><text x="15.7139%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="15.5984%" y="212" width="0.1345%" height="15" fill="rgb(208,96,46)" fg:x="348" fg:w="3"/><text x="15.8484%" y="222.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:116) (8 samples, 0.36%)</title><rect x="15.7329%" y="180" width="0.3586%" height="15" fill="rgb(239,3,39)" fg:x="351" fg:w="8"/><text x="15.9829%" y="190.50"></text></g><g><title>If (z3/z3.py:1416) (6 samples, 0.27%)</title><rect x="15.8225%" y="196" width="0.2689%" height="15" fill="rgb(233,210,1)" fg:x="353" fg:w="6"/><text x="16.0725%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="15.9570%" y="212" width="0.1345%" height="15" fill="rgb(244,137,37)" fg:x="356" fg:w="3"/><text x="16.2070%" y="222.50"></text></g><g><title>__add__ (z3/z3.py:2478) (6 samples, 0.27%)</title><rect x="16.3604%" y="196" width="0.2689%" height="15" fill="rgb(240,136,2)" fg:x="365" fg:w="6"/><text x="16.6104%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="16.4052%" y="212" width="0.2241%" height="15" fill="rgb(239,18,37)" fg:x="366" fg:w="5"/><text x="16.6552%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="16.8534%" y="212" width="0.1345%" height="15" fill="rgb(218,185,22)" fg:x="376" fg:w="3"/><text x="17.1034%" y="222.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (9 samples, 0.40%)</title><rect x="16.7638%" y="196" width="0.4034%" height="15" fill="rgb(225,218,4)" fg:x="374" fg:w="9"/><text x="17.0138%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="16.9879%" y="212" width="0.1793%" height="15" fill="rgb(230,182,32)" fg:x="379" fg:w="4"/><text x="17.2379%" y="222.50"></text></g><g><title>cast (z3/z3.py:2406) (4 samples, 0.18%)</title><rect x="16.9879%" y="228" width="0.1793%" height="15" fill="rgb(242,56,43)" fg:x="379" fg:w="4"/><text x="17.2379%" y="238.50"></text></g><g><title>IntVal (z3/z3.py:3243) (4 samples, 0.18%)</title><rect x="16.9879%" y="244" width="0.1793%" height="15" fill="rgb(233,99,24)" fg:x="379" fg:w="4"/><text x="17.2379%" y="254.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:26) (107 samples, 4.80%)</title><rect x="12.5504%" y="164" width="4.7961%" height="15" fill="rgb(234,209,42)" fg:x="280" fg:w="107"/><text x="12.8004%" y="174.50">cond_i..</text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:118) (28 samples, 1.26%)</title><rect x="16.0914%" y="180" width="1.2550%" height="15" fill="rgb(227,7,12)" fg:x="359" fg:w="28"/><text x="16.3414%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (4 samples, 0.18%)</title><rect x="17.1672%" y="196" width="0.1793%" height="15" fill="rgb(245,203,43)" fg:x="383" fg:w="4"/><text x="17.4172%" y="206.50"></text></g><g><title>Z3_is_eq_ast (z3/z3core.py:3055) (3 samples, 0.13%)</title><rect x="17.7051%" y="260" width="0.1345%" height="15" fill="rgb(238,205,33)" fg:x="395" fg:w="3"/><text x="17.9551%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (5 samples, 0.22%)</title><rect x="17.6602%" y="212" width="0.2241%" height="15" fill="rgb(231,56,7)" fg:x="394" fg:w="5"/><text x="17.9102%" y="222.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (4 samples, 0.18%)</title><rect x="17.7051%" y="228" width="0.1793%" height="15" fill="rgb(244,186,29)" fg:x="395" fg:w="4"/><text x="17.9551%" y="238.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="17.7051%" y="244" width="0.1793%" height="15" fill="rgb(234,111,31)" fg:x="395" fg:w="4"/><text x="17.9551%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="17.8844%" y="228" width="0.1345%" height="15" fill="rgb(241,149,10)" fg:x="399" fg:w="3"/><text x="18.1344%" y="238.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="17.8844%" y="244" width="0.1345%" height="15" fill="rgb(249,206,44)" fg:x="399" fg:w="3"/><text x="18.1344%" y="254.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (3 samples, 0.13%)</title><rect x="17.8844%" y="260" width="0.1345%" height="15" fill="rgb(251,153,30)" fg:x="399" fg:w="3"/><text x="18.1344%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="18.0188%" y="228" width="0.1345%" height="15" fill="rgb(239,152,38)" fg:x="402" fg:w="3"/><text x="18.2688%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="18.0188%" y="244" width="0.1345%" height="15" fill="rgb(249,139,47)" fg:x="402" fg:w="3"/><text x="18.2688%" y="254.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (16 samples, 0.72%)</title><rect x="17.6154%" y="196" width="0.7172%" height="15" fill="rgb(244,64,35)" fg:x="393" fg:w="16"/><text x="17.8654%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (10 samples, 0.45%)</title><rect x="17.8844%" y="212" width="0.4482%" height="15" fill="rgb(216,46,15)" fg:x="399" fg:w="10"/><text x="18.1344%" y="222.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="18.1533%" y="228" width="0.1793%" height="15" fill="rgb(250,74,19)" fg:x="405" fg:w="4"/><text x="18.4033%" y="238.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="18.1533%" y="244" width="0.1793%" height="15" fill="rgb(249,42,33)" fg:x="405" fg:w="4"/><text x="18.4033%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="18.6912%" y="260" width="0.1793%" height="15" fill="rgb(242,149,17)" fg:x="417" fg:w="4"/><text x="18.9412%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (3 samples, 0.13%)</title><rect x="18.9153%" y="260" width="0.1345%" height="15" fill="rgb(244,29,21)" fg:x="422" fg:w="3"/><text x="19.1653%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="18.9153%" y="276" width="0.1345%" height="15" fill="rgb(220,130,37)" fg:x="422" fg:w="3"/><text x="19.1653%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="18.9153%" y="292" width="0.1345%" height="15" fill="rgb(211,67,2)" fg:x="422" fg:w="3"/><text x="19.1653%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (7 samples, 0.31%)</title><rect x="19.0498%" y="260" width="0.3138%" height="15" fill="rgb(235,68,52)" fg:x="425" fg:w="7"/><text x="19.2998%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (3 samples, 0.13%)</title><rect x="19.2290%" y="276" width="0.1345%" height="15" fill="rgb(246,142,3)" fg:x="429" fg:w="3"/><text x="19.4790%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="19.5428%" y="308" width="0.1345%" height="15" fill="rgb(241,25,7)" fg:x="436" fg:w="3"/><text x="19.7928%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (8 samples, 0.36%)</title><rect x="19.3635%" y="260" width="0.3586%" height="15" fill="rgb(242,119,39)" fg:x="432" fg:w="8"/><text x="19.6135%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (6 samples, 0.27%)</title><rect x="19.4532%" y="276" width="0.2689%" height="15" fill="rgb(241,98,45)" fg:x="434" fg:w="6"/><text x="19.7032%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (6 samples, 0.27%)</title><rect x="19.4532%" y="292" width="0.2689%" height="15" fill="rgb(254,28,30)" fg:x="434" fg:w="6"/><text x="19.7032%" y="302.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="19.8117%" y="276" width="0.1345%" height="15" fill="rgb(241,142,54)" fg:x="442" fg:w="3"/><text x="20.0617%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="19.8117%" y="292" width="0.1345%" height="15" fill="rgb(222,85,15)" fg:x="442" fg:w="3"/><text x="20.0617%" y="302.50"></text></g><g><title>__add__ (z3/z3.py:2478) (30 samples, 1.34%)</title><rect x="18.6912%" y="244" width="1.3447%" height="15" fill="rgb(210,85,47)" fg:x="417" fg:w="30"/><text x="18.9412%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (7 samples, 0.31%)</title><rect x="19.7221%" y="260" width="0.3138%" height="15" fill="rgb(224,206,25)" fg:x="440" fg:w="7"/><text x="19.9721%" y="270.50"></text></g><g><title>Z3_dec_ref (z3/z3core.py:1626) (3 samples, 0.13%)</title><rect x="20.1703%" y="276" width="0.1345%" height="15" fill="rgb(243,201,19)" fg:x="450" fg:w="3"/><text x="20.4203%" y="286.50"></text></g><g><title>__del__ (z3/z3.py:352) (5 samples, 0.22%)</title><rect x="20.1703%" y="260" width="0.2241%" height="15" fill="rgb(236,59,4)" fg:x="450" fg:w="5"/><text x="20.4203%" y="270.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3070) (3 samples, 0.13%)</title><rect x="20.6186%" y="308" width="0.1345%" height="15" fill="rgb(254,179,45)" fg:x="460" fg:w="3"/><text x="20.8686%" y="318.50"></text></g><g><title>Check (z3/z3core.py:1553) (3 samples, 0.13%)</title><rect x="20.6186%" y="324" width="0.1345%" height="15" fill="rgb(226,14,10)" fg:x="460" fg:w="3"/><text x="20.8686%" y="334.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (6 samples, 0.27%)</title><rect x="20.5737%" y="276" width="0.2689%" height="15" fill="rgb(244,27,41)" fg:x="459" fg:w="6"/><text x="20.8237%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (6 samples, 0.27%)</title><rect x="20.5737%" y="292" width="0.2689%" height="15" fill="rgb(235,35,32)" fg:x="459" fg:w="6"/><text x="20.8237%" y="302.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (8 samples, 0.36%)</title><rect x="20.8427%" y="276" width="0.3586%" height="15" fill="rgb(218,68,31)" fg:x="465" fg:w="8"/><text x="21.0927%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (8 samples, 0.36%)</title><rect x="20.8427%" y="292" width="0.3586%" height="15" fill="rgb(207,120,37)" fg:x="465" fg:w="8"/><text x="21.0927%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="21.0220%" y="308" width="0.1793%" height="15" fill="rgb(227,98,0)" fg:x="469" fg:w="4"/><text x="21.2720%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (15 samples, 0.67%)</title><rect x="20.5737%" y="260" width="0.6723%" height="15" fill="rgb(207,7,3)" fg:x="459" fg:w="15"/><text x="20.8237%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (6 samples, 0.27%)</title><rect x="21.3357%" y="276" width="0.2689%" height="15" fill="rgb(206,98,19)" fg:x="476" fg:w="6"/><text x="21.5857%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (6 samples, 0.27%)</title><rect x="21.3357%" y="292" width="0.2689%" height="15" fill="rgb(217,5,26)" fg:x="476" fg:w="6"/><text x="21.5857%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (12 samples, 0.54%)</title><rect x="21.2461%" y="260" width="0.5379%" height="15" fill="rgb(235,190,38)" fg:x="474" fg:w="12"/><text x="21.4961%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="21.6047%" y="276" width="0.1793%" height="15" fill="rgb(247,86,24)" fg:x="482" fg:w="4"/><text x="21.8547%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="21.6047%" y="292" width="0.1793%" height="15" fill="rgb(205,101,16)" fg:x="482" fg:w="4"/><text x="21.8547%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="21.6047%" y="308" width="0.1793%" height="15" fill="rgb(246,168,33)" fg:x="482" fg:w="4"/><text x="21.8547%" y="318.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="21.8736%" y="276" width="0.1793%" height="15" fill="rgb(231,114,1)" fg:x="488" fg:w="4"/><text x="22.1236%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="21.8736%" y="292" width="0.1793%" height="15" fill="rgb(207,184,53)" fg:x="488" fg:w="4"/><text x="22.1236%" y="302.50"></text></g><g><title>Z3_get_sort_kind (z3/z3core.py:2834) (3 samples, 0.13%)</title><rect x="22.1425%" y="340" width="0.1345%" height="15" fill="rgb(224,95,51)" fg:x="494" fg:w="3"/><text x="22.3925%" y="350.50"></text></g><g><title>cast (z3/z3.py:2396) (6 samples, 0.27%)</title><rect x="22.0529%" y="276" width="0.2689%" height="15" fill="rgb(212,188,45)" fg:x="492" fg:w="6"/><text x="22.3029%" y="286.50"></text></g><g><title>is_int (z3/z3.py:2367) (4 samples, 0.18%)</title><rect x="22.1425%" y="292" width="0.1793%" height="15" fill="rgb(223,154,38)" fg:x="494" fg:w="4"/><text x="22.3925%" y="302.50"></text></g><g><title>kind (z3/z3.py:583) (4 samples, 0.18%)</title><rect x="22.1425%" y="308" width="0.1793%" height="15" fill="rgb(251,22,52)" fg:x="494" fg:w="4"/><text x="22.3925%" y="318.50"></text></g><g><title>_sort_kind (z3/z3.py:556) (4 samples, 0.18%)</title><rect x="22.1425%" y="324" width="0.1793%" height="15" fill="rgb(229,209,22)" fg:x="494" fg:w="4"/><text x="22.3925%" y="334.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="22.4115%" y="324" width="0.1345%" height="15" fill="rgb(234,138,34)" fg:x="500" fg:w="3"/><text x="22.6615%" y="334.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="22.4115%" y="340" width="0.1345%" height="15" fill="rgb(212,95,11)" fg:x="500" fg:w="3"/><text x="22.6615%" y="350.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="22.4115%" y="356" width="0.1345%" height="15" fill="rgb(240,179,47)" fg:x="500" fg:w="3"/><text x="22.6615%" y="366.50"></text></g><g><title>is_int (z3/z3.py:2367) (3 samples, 0.13%)</title><rect x="22.5459%" y="324" width="0.1345%" height="15" fill="rgb(240,163,11)" fg:x="503" fg:w="3"/><text x="22.7959%" y="334.50"></text></g><g><title>kind (z3/z3.py:583) (3 samples, 0.13%)</title><rect x="22.5459%" y="340" width="0.1345%" height="15" fill="rgb(236,37,12)" fg:x="503" fg:w="3"/><text x="22.7959%" y="350.50"></text></g><g><title>_sort_kind (z3/z3.py:556) (3 samples, 0.13%)</title><rect x="22.5459%" y="356" width="0.1345%" height="15" fill="rgb(232,164,16)" fg:x="503" fg:w="3"/><text x="22.7959%" y="366.50"></text></g><g><title>ToReal (z3/z3.py:3417) (12 samples, 0.54%)</title><rect x="22.3218%" y="292" width="0.5379%" height="15" fill="rgb(244,205,15)" fg:x="498" fg:w="12"/><text x="22.5718%" y="302.50"></text></g><g><title>is_int (z3/z3.py:2455) (12 samples, 0.54%)</title><rect x="22.3218%" y="308" width="0.5379%" height="15" fill="rgb(223,117,47)" fg:x="498" fg:w="12"/><text x="22.5718%" y="318.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="22.6804%" y="324" width="0.1793%" height="15" fill="rgb(244,107,35)" fg:x="506" fg:w="4"/><text x="22.9304%" y="334.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="22.7252%" y="340" width="0.1345%" height="15" fill="rgb(205,140,8)" fg:x="507" fg:w="3"/><text x="22.9752%" y="350.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (29 samples, 1.30%)</title><rect x="21.7840%" y="260" width="1.2999%" height="15" fill="rgb(228,84,46)" fg:x="486" fg:w="29"/><text x="22.0340%" y="270.50"></text></g><g><title>cast (z3/z3.py:2397) (17 samples, 0.76%)</title><rect x="22.3218%" y="276" width="0.7620%" height="15" fill="rgb(254,188,9)" fg:x="498" fg:w="17"/><text x="22.5718%" y="286.50"></text></g><g><title>ToReal (z3/z3.py:3419) (5 samples, 0.22%)</title><rect x="22.8597%" y="292" width="0.2241%" height="15" fill="rgb(206,112,54)" fg:x="510" fg:w="5"/><text x="23.1097%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (66 samples, 2.96%)</title><rect x="20.1703%" y="244" width="2.9583%" height="15" fill="rgb(216,84,49)" fg:x="450" fg:w="66"/><text x="20.4203%" y="254.50">__m..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (112 samples, 5.02%)</title><rect x="18.3774%" y="212" width="5.0202%" height="15" fill="rgb(214,194,35)" fg:x="410" fg:w="112"/><text x="18.6274%" y="222.50">bdt_te..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (111 samples, 4.98%)</title><rect x="18.4222%" y="228" width="4.9753%" height="15" fill="rgb(249,28,3)" fg:x="411" fg:w="111"/><text x="18.6722%" y="238.50">__init..</text></g><g><title>__mul__ (z3/z3.py:2504) (6 samples, 0.27%)</title><rect x="23.1286%" y="244" width="0.2689%" height="15" fill="rgb(222,56,52)" fg:x="516" fg:w="6"/><text x="23.3786%" y="254.50"></text></g><g><title>RealSort (z3/z3.py:3219) (8 samples, 0.36%)</title><rect x="23.3976%" y="244" width="0.3586%" height="15" fill="rgb(245,217,50)" fg:x="522" fg:w="8"/><text x="23.6476%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (6 samples, 0.27%)</title><rect x="23.4872%" y="260" width="0.2689%" height="15" fill="rgb(213,201,24)" fg:x="524" fg:w="6"/><text x="23.7372%" y="270.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="23.5320%" y="276" width="0.2241%" height="15" fill="rgb(248,116,28)" fg:x="525" fg:w="5"/><text x="23.7820%" y="286.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:131) (14 samples, 0.63%)</title><rect x="23.3976%" y="212" width="0.6275%" height="15" fill="rgb(219,72,43)" fg:x="522" fg:w="14"/><text x="23.6476%" y="222.50"></text></g><g><title>RealVal (z3/z3.py:3262) (14 samples, 0.63%)</title><rect x="23.3976%" y="228" width="0.6275%" height="15" fill="rgb(209,138,14)" fg:x="522" fg:w="14"/><text x="23.6476%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (4 samples, 0.18%)</title><rect x="24.4733%" y="260" width="0.1793%" height="15" fill="rgb(222,18,33)" fg:x="546" fg:w="4"/><text x="24.7233%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="24.5182%" y="276" width="0.1345%" height="15" fill="rgb(213,199,7)" fg:x="547" fg:w="3"/><text x="24.7682%" y="286.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (4 samples, 0.18%)</title><rect x="24.6974%" y="276" width="0.1793%" height="15" fill="rgb(250,110,10)" fg:x="551" fg:w="4"/><text x="24.9474%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="24.6974%" y="292" width="0.1793%" height="15" fill="rgb(248,123,6)" fg:x="551" fg:w="4"/><text x="24.9474%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="24.7423%" y="308" width="0.1345%" height="15" fill="rgb(206,91,31)" fg:x="552" fg:w="3"/><text x="24.9923%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (6 samples, 0.27%)</title><rect x="24.6526%" y="260" width="0.2689%" height="15" fill="rgb(211,154,13)" fg:x="550" fg:w="6"/><text x="24.9026%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="25.0560%" y="276" width="0.1793%" height="15" fill="rgb(225,148,7)" fg:x="559" fg:w="4"/><text x="25.3060%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="25.0560%" y="292" width="0.1793%" height="15" fill="rgb(220,160,43)" fg:x="559" fg:w="4"/><text x="25.3060%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="25.1009%" y="308" width="0.1345%" height="15" fill="rgb(213,52,39)" fg:x="560" fg:w="3"/><text x="25.3509%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (12 samples, 0.54%)</title><rect x="24.9216%" y="260" width="0.5379%" height="15" fill="rgb(243,137,7)" fg:x="556" fg:w="12"/><text x="25.1716%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (5 samples, 0.22%)</title><rect x="25.2353%" y="276" width="0.2241%" height="15" fill="rgb(230,79,13)" fg:x="563" fg:w="5"/><text x="25.4853%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="25.2801%" y="292" width="0.1793%" height="15" fill="rgb(247,105,23)" fg:x="564" fg:w="4"/><text x="25.5301%" y="302.50"></text></g><g><title>__add__ (z3/z3.py:2478) (30 samples, 1.34%)</title><rect x="24.4285%" y="244" width="1.3447%" height="15" fill="rgb(223,179,41)" fg:x="545" fg:w="30"/><text x="24.6785%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (7 samples, 0.31%)</title><rect x="25.4594%" y="260" width="0.3138%" height="15" fill="rgb(218,9,34)" fg:x="568" fg:w="7"/><text x="25.7094%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="25.5939%" y="276" width="0.1793%" height="15" fill="rgb(222,106,8)" fg:x="571" fg:w="4"/><text x="25.8439%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="25.5939%" y="292" width="0.1793%" height="15" fill="rgb(211,220,0)" fg:x="571" fg:w="4"/><text x="25.8439%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="25.6387%" y="308" width="0.1345%" height="15" fill="rgb(229,52,16)" fg:x="572" fg:w="3"/><text x="25.8887%" y="318.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (3 samples, 0.13%)</title><rect x="25.6387%" y="324" width="0.1345%" height="15" fill="rgb(212,155,18)" fg:x="572" fg:w="3"/><text x="25.8887%" y="334.50"></text></g><g><title>__del__ (z3/z3.py:351) (5 samples, 0.22%)</title><rect x="25.8180%" y="244" width="0.2241%" height="15" fill="rgb(242,21,14)" fg:x="576" fg:w="5"/><text x="26.0680%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="26.1766%" y="260" width="0.2241%" height="15" fill="rgb(222,19,48)" fg:x="584" fg:w="5"/><text x="26.4266%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="26.2662%" y="276" width="0.1345%" height="15" fill="rgb(232,45,27)" fg:x="586" fg:w="3"/><text x="26.5162%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="26.2662%" y="292" width="0.1345%" height="15" fill="rgb(249,103,42)" fg:x="586" fg:w="3"/><text x="26.5162%" y="302.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="26.4455%" y="276" width="0.1345%" height="15" fill="rgb(246,81,33)" fg:x="590" fg:w="3"/><text x="26.6955%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="26.4455%" y="292" width="0.1345%" height="15" fill="rgb(252,33,42)" fg:x="590" fg:w="3"/><text x="26.6955%" y="302.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="26.5800%" y="276" width="0.1345%" height="15" fill="rgb(209,212,41)" fg:x="593" fg:w="3"/><text x="26.8300%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="26.5800%" y="292" width="0.1345%" height="15" fill="rgb(207,154,6)" fg:x="593" fg:w="3"/><text x="26.8300%" y="302.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (4 samples, 0.18%)</title><rect x="26.7145%" y="276" width="0.1793%" height="15" fill="rgb(223,64,47)" fg:x="596" fg:w="4"/><text x="26.9645%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="26.7593%" y="292" width="0.1345%" height="15" fill="rgb(211,161,38)" fg:x="597" fg:w="3"/><text x="27.0093%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (15 samples, 0.67%)</title><rect x="26.4007%" y="260" width="0.6723%" height="15" fill="rgb(219,138,40)" fg:x="589" fg:w="15"/><text x="26.6507%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1210) (3 samples, 0.13%)</title><rect x="26.9386%" y="276" width="0.1345%" height="15" fill="rgb(241,228,46)" fg:x="601" fg:w="3"/><text x="27.1886%" y="286.50"></text></g><g><title>subsort (z3/z3.py:2374) (3 samples, 0.13%)</title><rect x="26.9386%" y="292" width="0.1345%" height="15" fill="rgb(223,209,38)" fg:x="601" fg:w="3"/><text x="27.1886%" y="302.50"></text></g><g><title>__del__ (z3/z3.py:352) (5 samples, 0.22%)</title><rect x="27.1627%" y="276" width="0.2241%" height="15" fill="rgb(236,164,45)" fg:x="606" fg:w="5"/><text x="27.4127%" y="286.50"></text></g><g><title>cast (z3/z3.py:2393) (8 samples, 0.36%)</title><rect x="27.3868%" y="276" width="0.3586%" height="15" fill="rgb(231,15,5)" fg:x="611" fg:w="8"/><text x="27.6368%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (8 samples, 0.36%)</title><rect x="27.3868%" y="292" width="0.3586%" height="15" fill="rgb(252,35,15)" fg:x="611" fg:w="8"/><text x="27.6368%" y="302.50"></text></g><g><title>ctx_ref (z3/z3.py:402) (3 samples, 0.13%)</title><rect x="27.6109%" y="308" width="0.1345%" height="15" fill="rgb(248,181,18)" fg:x="616" fg:w="3"/><text x="27.8609%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (20 samples, 0.90%)</title><rect x="27.0731%" y="260" width="0.8965%" height="15" fill="rgb(233,39,42)" fg:x="604" fg:w="20"/><text x="27.3231%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (5 samples, 0.22%)</title><rect x="27.7454%" y="276" width="0.2241%" height="15" fill="rgb(238,110,33)" fg:x="619" fg:w="5"/><text x="27.9954%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (5 samples, 0.22%)</title><rect x="27.7454%" y="292" width="0.2241%" height="15" fill="rgb(233,195,10)" fg:x="619" fg:w="5"/><text x="27.9954%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="27.7902%" y="308" width="0.1793%" height="15" fill="rgb(254,105,3)" fg:x="620" fg:w="4"/><text x="28.0402%" y="318.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="27.8351%" y="324" width="0.1345%" height="15" fill="rgb(221,225,9)" fg:x="621" fg:w="3"/><text x="28.0851%" y="334.50"></text></g><g><title>Check (z3/z3core.py:1552) (3 samples, 0.13%)</title><rect x="27.8351%" y="340" width="0.1345%" height="15" fill="rgb(224,227,45)" fg:x="621" fg:w="3"/><text x="28.0851%" y="350.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="28.0143%" y="276" width="0.1345%" height="15" fill="rgb(229,198,43)" fg:x="625" fg:w="3"/><text x="28.2643%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="28.0143%" y="292" width="0.1345%" height="15" fill="rgb(206,209,35)" fg:x="625" fg:w="3"/><text x="28.2643%" y="302.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="28.1936%" y="324" width="0.1345%" height="15" fill="rgb(245,195,53)" fg:x="629" fg:w="3"/><text x="28.4436%" y="334.50"></text></g><g><title>cast (z3/z3.py:2394) (5 samples, 0.22%)</title><rect x="28.1488%" y="276" width="0.2241%" height="15" fill="rgb(240,92,26)" fg:x="628" fg:w="5"/><text x="28.3988%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (5 samples, 0.22%)</title><rect x="28.1488%" y="292" width="0.2241%" height="15" fill="rgb(207,40,23)" fg:x="628" fg:w="5"/><text x="28.3988%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="28.1488%" y="308" width="0.2241%" height="15" fill="rgb(223,111,35)" fg:x="628" fg:w="5"/><text x="28.3988%" y="318.50"></text></g><g><title>cast (z3/z3.py:2396) (7 samples, 0.31%)</title><rect x="28.3729%" y="276" width="0.3138%" height="15" fill="rgb(229,147,28)" fg:x="633" fg:w="7"/><text x="28.6229%" y="286.50"></text></g><g><title>is_real (z3/z3.py:2353) (5 samples, 0.22%)</title><rect x="28.4626%" y="292" width="0.2241%" height="15" fill="rgb(211,29,28)" fg:x="635" fg:w="5"/><text x="28.7126%" y="302.50"></text></g><g><title>kind (z3/z3.py:583) (5 samples, 0.22%)</title><rect x="28.4626%" y="308" width="0.2241%" height="15" fill="rgb(228,72,33)" fg:x="635" fg:w="5"/><text x="28.7126%" y="318.50"></text></g><g><title>_sort_kind (z3/z3.py:556) (5 samples, 0.22%)</title><rect x="28.4626%" y="324" width="0.2241%" height="15" fill="rgb(205,214,31)" fg:x="635" fg:w="5"/><text x="28.7126%" y="334.50"></text></g><g><title>Z3_get_sort_kind (z3/z3core.py:2835) (3 samples, 0.13%)</title><rect x="28.5522%" y="340" width="0.1345%" height="15" fill="rgb(224,111,15)" fg:x="637" fg:w="3"/><text x="28.8022%" y="350.50"></text></g><g><title>is_int (z3/z3.py:2367) (3 samples, 0.13%)</title><rect x="28.7763%" y="324" width="0.1345%" height="15" fill="rgb(253,21,26)" fg:x="642" fg:w="3"/><text x="29.0263%" y="334.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="29.0004%" y="340" width="0.1793%" height="15" fill="rgb(245,139,43)" fg:x="647" fg:w="4"/><text x="29.2504%" y="350.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="29.0453%" y="356" width="0.1345%" height="15" fill="rgb(252,170,7)" fg:x="648" fg:w="3"/><text x="29.2953%" y="366.50"></text></g><g><title>ToReal (z3/z3.py:3417) (12 samples, 0.54%)</title><rect x="28.6867%" y="292" width="0.5379%" height="15" fill="rgb(231,118,14)" fg:x="640" fg:w="12"/><text x="28.9367%" y="302.50"></text></g><g><title>is_int (z3/z3.py:2455) (12 samples, 0.54%)</title><rect x="28.6867%" y="308" width="0.5379%" height="15" fill="rgb(238,83,0)" fg:x="640" fg:w="12"/><text x="28.9367%" y="318.50"></text></g><g><title>sort (z3/z3.py:2441) (7 samples, 0.31%)</title><rect x="28.9108%" y="324" width="0.3138%" height="15" fill="rgb(221,39,39)" fg:x="645" fg:w="7"/><text x="29.1608%" y="334.50"></text></g><g><title>cast (z3/z3.py:2397) (16 samples, 0.72%)</title><rect x="28.6867%" y="276" width="0.7172%" height="15" fill="rgb(222,119,46)" fg:x="640" fg:w="16"/><text x="28.9367%" y="286.50"></text></g><g><title>ToReal (z3/z3.py:3419) (4 samples, 0.18%)</title><rect x="29.2246%" y="292" width="0.1793%" height="15" fill="rgb(222,165,49)" fg:x="652" fg:w="4"/><text x="29.4746%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (75 samples, 3.36%)</title><rect x="26.0870%" y="244" width="3.3617%" height="15" fill="rgb(219,113,52)" fg:x="582" fg:w="75"/><text x="26.3370%" y="254.50">__m..</text></g><g><title>_coerce_exprs (z3/z3.py:1237) (33 samples, 1.48%)</title><rect x="27.9695%" y="260" width="1.4792%" height="15" fill="rgb(214,7,15)" fg:x="624" fg:w="33"/><text x="28.2195%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="29.4935%" y="260" width="0.1345%" height="15" fill="rgb(235,32,4)" fg:x="658" fg:w="3"/><text x="29.7435%" y="270.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (130 samples, 5.83%)</title><rect x="24.0251%" y="212" width="5.8270%" height="15" fill="rgb(238,90,54)" fg:x="536" fg:w="130"/><text x="24.2751%" y="222.50">bdt_ter..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (130 samples, 5.83%)</title><rect x="24.0251%" y="228" width="5.8270%" height="15" fill="rgb(213,208,19)" fg:x="536" fg:w="130"/><text x="24.2751%" y="238.50">__init_..</text></g><g><title>__mul__ (z3/z3.py:2504) (9 samples, 0.40%)</title><rect x="29.4487%" y="244" width="0.4034%" height="15" fill="rgb(233,156,4)" fg:x="657" fg:w="9"/><text x="29.6987%" y="254.50"></text></g><g><title>_mk_bin (z3/z3.py:1452) (4 samples, 0.18%)</title><rect x="29.6728%" y="260" width="0.1793%" height="15" fill="rgb(207,194,5)" fg:x="662" fg:w="4"/><text x="29.9228%" y="270.50"></text></g><g><title>Z3_mk_mul (z3/z3core.py:1936) (3 samples, 0.13%)</title><rect x="29.7176%" y="276" width="0.1345%" height="15" fill="rgb(206,111,30)" fg:x="663" fg:w="3"/><text x="29.9676%" y="286.50"></text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="30.0762%" y="244" width="0.1345%" height="15" fill="rgb(243,70,54)" fg:x="671" fg:w="3"/><text x="30.3262%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="30.3451%" y="260" width="0.1793%" height="15" fill="rgb(242,28,8)" fg:x="677" fg:w="4"/><text x="30.5951%" y="270.50"></text></g><g><title>cast (z3/z3.py:2406) (3 samples, 0.13%)</title><rect x="30.3900%" y="276" width="0.1345%" height="15" fill="rgb(219,106,18)" fg:x="678" fg:w="3"/><text x="30.6400%" y="286.50"></text></g><g><title>IntVal (z3/z3.py:3243) (3 samples, 0.13%)</title><rect x="30.3900%" y="292" width="0.1345%" height="15" fill="rgb(244,222,10)" fg:x="678" fg:w="3"/><text x="30.6400%" y="302.50"></text></g><g><title>If (z3/z3.py:1416) (9 samples, 0.40%)</title><rect x="30.2107%" y="244" width="0.4034%" height="15" fill="rgb(236,179,52)" fg:x="674" fg:w="9"/><text x="30.4607%" y="254.50"></text></g><g><title>Z3_mk_ite (z3/z3core.py:1900) (3 samples, 0.13%)</title><rect x="30.7037%" y="260" width="0.1345%" height="15" fill="rgb(213,23,39)" fg:x="685" fg:w="3"/><text x="30.9537%" y="270.50"></text></g><g><title>If (z3/z3.py:1419) (9 samples, 0.40%)</title><rect x="30.6141%" y="244" width="0.4034%" height="15" fill="rgb(238,48,10)" fg:x="683" fg:w="9"/><text x="30.8641%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (3 samples, 0.13%)</title><rect x="31.0623%" y="260" width="0.1345%" height="15" fill="rgb(251,196,23)" fg:x="693" fg:w="3"/><text x="31.3123%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="31.2864%" y="276" width="0.1345%" height="15" fill="rgb(250,152,24)" fg:x="698" fg:w="3"/><text x="31.5364%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="31.2864%" y="292" width="0.1345%" height="15" fill="rgb(209,150,17)" fg:x="698" fg:w="3"/><text x="31.5364%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (8 samples, 0.36%)</title><rect x="31.1968%" y="260" width="0.3586%" height="15" fill="rgb(234,202,34)" fg:x="696" fg:w="8"/><text x="31.4468%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (3 samples, 0.13%)</title><rect x="31.4209%" y="276" width="0.1345%" height="15" fill="rgb(253,148,53)" fg:x="701" fg:w="3"/><text x="31.6709%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="31.4209%" y="292" width="0.1345%" height="15" fill="rgb(218,129,16)" fg:x="701" fg:w="3"/><text x="31.6709%" y="302.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (3 samples, 0.13%)</title><rect x="31.6450%" y="324" width="0.1345%" height="15" fill="rgb(216,85,19)" fg:x="706" fg:w="3"/><text x="31.8950%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (6 samples, 0.27%)</title><rect x="31.5554%" y="260" width="0.2689%" height="15" fill="rgb(235,228,7)" fg:x="704" fg:w="6"/><text x="31.8054%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (5 samples, 0.22%)</title><rect x="31.6002%" y="276" width="0.2241%" height="15" fill="rgb(245,175,0)" fg:x="705" fg:w="5"/><text x="31.8502%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="31.6450%" y="292" width="0.1793%" height="15" fill="rgb(208,168,36)" fg:x="706" fg:w="4"/><text x="31.8950%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="31.6450%" y="308" width="0.1793%" height="15" fill="rgb(246,171,24)" fg:x="706" fg:w="4"/><text x="31.8950%" y="318.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (24 samples, 1.08%)</title><rect x="31.0175%" y="244" width="1.0758%" height="15" fill="rgb(215,142,24)" fg:x="692" fg:w="24"/><text x="31.2675%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (6 samples, 0.27%)</title><rect x="31.8243%" y="260" width="0.2689%" height="15" fill="rgb(250,187,7)" fg:x="710" fg:w="6"/><text x="32.0743%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (5 samples, 0.22%)</title><rect x="31.8691%" y="276" width="0.2241%" height="15" fill="rgb(228,66,33)" fg:x="711" fg:w="5"/><text x="32.1191%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="31.8691%" y="292" width="0.2241%" height="15" fill="rgb(234,215,21)" fg:x="711" fg:w="5"/><text x="32.1191%" y="302.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3069) (4 samples, 0.18%)</title><rect x="31.9139%" y="308" width="0.1793%" height="15" fill="rgb(222,191,20)" fg:x="712" fg:w="4"/><text x="32.1639%" y="318.50"></text></g><g><title>from_param (z3/z3types.py:65) (4 samples, 0.18%)</title><rect x="31.9139%" y="324" width="0.1793%" height="15" fill="rgb(245,79,54)" fg:x="712" fg:w="4"/><text x="32.1639%" y="334.50"></text></g><g><title>__ge__ (z3/z3.py:2712) (3 samples, 0.13%)</title><rect x="32.0932%" y="244" width="0.1345%" height="15" fill="rgb(240,10,37)" fg:x="716" fg:w="3"/><text x="32.3432%" y="254.50"></text></g><g><title>If (z3/z3.py:1414) (4 samples, 0.18%)</title><rect x="32.2277%" y="260" width="0.1793%" height="15" fill="rgb(214,192,32)" fg:x="719" fg:w="4"/><text x="32.4777%" y="270.50"></text></g><g><title>BoolSort (z3/z3.py:1746) (4 samples, 0.18%)</title><rect x="32.2277%" y="276" width="0.1793%" height="15" fill="rgb(209,36,54)" fg:x="719" fg:w="4"/><text x="32.4777%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="32.2725%" y="292" width="0.1345%" height="15" fill="rgb(220,10,11)" fg:x="720" fg:w="3"/><text x="32.5225%" y="302.50"></text></g><g><title>Z3_inc_ref (z3/z3core.py:1623) (3 samples, 0.13%)</title><rect x="32.2725%" y="308" width="0.1345%" height="15" fill="rgb(221,106,17)" fg:x="720" fg:w="3"/><text x="32.5225%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1222) (6 samples, 0.27%)</title><rect x="32.6311%" y="276" width="0.2689%" height="15" fill="rgb(251,142,44)" fg:x="728" fg:w="6"/><text x="32.8811%" y="286.50"></text></g><g><title>_py2expr (z3/z3.py:3177) (5 samples, 0.22%)</title><rect x="32.6759%" y="292" width="0.2241%" height="15" fill="rgb(238,13,15)" fg:x="729" fg:w="5"/><text x="32.9259%" y="302.50"></text></g><g><title>IntVal (z3/z3.py:3243) (5 samples, 0.22%)</title><rect x="32.6759%" y="308" width="0.2241%" height="15" fill="rgb(208,107,27)" fg:x="729" fg:w="5"/><text x="32.9259%" y="318.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="32.9000%" y="340" width="0.1345%" height="15" fill="rgb(205,136,37)" fg:x="734" fg:w="3"/><text x="33.1500%" y="350.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="32.9000%" y="356" width="0.1345%" height="15" fill="rgb(250,205,27)" fg:x="734" fg:w="3"/><text x="33.1500%" y="366.50"></text></g><g><title>IntSort (z3/z3.py:3202) (4 samples, 0.18%)</title><rect x="32.9000%" y="324" width="0.1793%" height="15" fill="rgb(210,80,43)" fg:x="734" fg:w="4"/><text x="33.1500%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1223) (6 samples, 0.27%)</title><rect x="32.9000%" y="276" width="0.2689%" height="15" fill="rgb(247,160,36)" fg:x="734" fg:w="6"/><text x="33.1500%" y="286.50"></text></g><g><title>_py2expr (z3/z3.py:3177) (6 samples, 0.27%)</title><rect x="32.9000%" y="292" width="0.2689%" height="15" fill="rgb(234,13,49)" fg:x="734" fg:w="6"/><text x="33.1500%" y="302.50"></text></g><g><title>IntVal (z3/z3.py:3243) (6 samples, 0.27%)</title><rect x="32.9000%" y="308" width="0.2689%" height="15" fill="rgb(234,122,0)" fg:x="734" fg:w="6"/><text x="33.1500%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="33.3035%" y="276" width="0.1345%" height="15" fill="rgb(207,146,38)" fg:x="743" fg:w="3"/><text x="33.5535%" y="286.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="33.3035%" y="292" width="0.1345%" height="15" fill="rgb(207,177,25)" fg:x="743" fg:w="3"/><text x="33.5535%" y="302.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="33.3035%" y="308" width="0.1345%" height="15" fill="rgb(211,178,42)" fg:x="743" fg:w="3"/><text x="33.5535%" y="318.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="33.3035%" y="324" width="0.1345%" height="15" fill="rgb(230,69,54)" fg:x="743" fg:w="3"/><text x="33.5535%" y="334.50"></text></g><g><title>If (z3/z3.py:1416) (28 samples, 1.26%)</title><rect x="32.4966%" y="260" width="1.2550%" height="15" fill="rgb(214,135,41)" fg:x="725" fg:w="28"/><text x="32.7466%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (7 samples, 0.31%)</title><rect x="33.4379%" y="276" width="0.3138%" height="15" fill="rgb(237,67,25)" fg:x="746" fg:w="7"/><text x="33.6879%" y="286.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="33.5724%" y="292" width="0.1793%" height="15" fill="rgb(222,189,50)" fg:x="749" fg:w="4"/><text x="33.8224%" y="302.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="33.6172%" y="308" width="0.1345%" height="15" fill="rgb(245,148,34)" fg:x="750" fg:w="3"/><text x="33.8672%" y="318.50"></text></g><g><title>If (z3/z3.py:1419) (4 samples, 0.18%)</title><rect x="33.7517%" y="260" width="0.1793%" height="15" fill="rgb(222,29,6)" fg:x="753" fg:w="4"/><text x="34.0017%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="34.1103%" y="276" width="0.2241%" height="15" fill="rgb(221,189,43)" fg:x="761" fg:w="5"/><text x="34.3603%" y="286.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (4 samples, 0.18%)</title><rect x="34.1551%" y="292" width="0.1793%" height="15" fill="rgb(207,36,27)" fg:x="762" fg:w="4"/><text x="34.4051%" y="302.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="34.1551%" y="308" width="0.1793%" height="15" fill="rgb(217,90,24)" fg:x="762" fg:w="4"/><text x="34.4051%" y="318.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="34.1551%" y="324" width="0.1793%" height="15" fill="rgb(224,66,35)" fg:x="762" fg:w="4"/><text x="34.4051%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (9 samples, 0.40%)</title><rect x="34.3792%" y="276" width="0.4034%" height="15" fill="rgb(221,13,50)" fg:x="767" fg:w="9"/><text x="34.6292%" y="286.50"></text></g><g><title>cast (z3/z3.py:2394) (7 samples, 0.31%)</title><rect x="34.4688%" y="292" width="0.3138%" height="15" fill="rgb(236,68,49)" fg:x="769" fg:w="7"/><text x="34.7188%" y="302.50"></text></g><g><title>eq (z3/z3.py:419) (7 samples, 0.31%)</title><rect x="34.4688%" y="308" width="0.3138%" height="15" fill="rgb(229,146,28)" fg:x="769" fg:w="7"/><text x="34.7188%" y="318.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="34.5585%" y="324" width="0.2241%" height="15" fill="rgb(225,31,38)" fg:x="771" fg:w="5"/><text x="34.8085%" y="334.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="34.6481%" y="340" width="0.1345%" height="15" fill="rgb(250,208,3)" fg:x="773" fg:w="3"/><text x="34.8981%" y="350.50"></text></g><g><title>Check (z3/z3core.py:1552) (3 samples, 0.13%)</title><rect x="34.6481%" y="356" width="0.1345%" height="15" fill="rgb(246,54,23)" fg:x="773" fg:w="3"/><text x="34.8981%" y="366.50"></text></g><g><title>__le__ (z3/z3.py:2672) (21 samples, 0.94%)</title><rect x="34.0206%" y="260" width="0.9413%" height="15" fill="rgb(243,76,11)" fg:x="759" fg:w="21"/><text x="34.2706%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="34.7826%" y="276" width="0.1793%" height="15" fill="rgb(245,21,50)" fg:x="776" fg:w="4"/><text x="35.0326%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/conditions.py:28) (395 samples, 17.71%)</title><rect x="17.3465%" y="180" width="17.7051%" height="15" fill="rgb(228,9,43)" fg:x="387" fg:w="395"/><text x="17.5965%" y="190.50">&lt;listcomp&gt; (bisimulation_lea..</text></g><g><title>f (bisimulation_learning/shared/template.py:116) (373 samples, 16.72%)</title><rect x="18.3326%" y="196" width="16.7190%" height="15" fill="rgb(208,100,47)" fg:x="409" fg:w="373"/><text x="18.5826%" y="206.50">f (bisimulation_learning/s..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (116 samples, 5.20%)</title><rect x="29.8521%" y="212" width="5.1995%" height="15" fill="rgb(232,26,8)" fg:x="666" fg:w="116"/><text x="30.1021%" y="222.50">bdt_te..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (116 samples, 5.20%)</title><rect x="29.8521%" y="228" width="5.1995%" height="15" fill="rgb(216,166,38)" fg:x="666" fg:w="116"/><text x="30.1021%" y="238.50">formul..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (63 samples, 2.82%)</title><rect x="32.2277%" y="244" width="2.8238%" height="15" fill="rgb(251,202,51)" fg:x="719" fg:w="63"/><text x="32.4777%" y="254.50">fo..</text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:106) (6 samples, 0.27%)</title><rect x="35.0964%" y="180" width="0.2689%" height="15" fill="rgb(254,216,34)" fg:x="783" fg:w="6"/><text x="35.3464%" y="190.50"></text></g><g><title>__le__ (z3/z3.py:2672) (4 samples, 0.18%)</title><rect x="35.1860%" y="196" width="0.1793%" height="15" fill="rgb(251,32,27)" fg:x="785" fg:w="4"/><text x="35.4360%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="35.2308%" y="212" width="0.1345%" height="15" fill="rgb(208,127,28)" fg:x="786" fg:w="3"/><text x="35.4808%" y="222.50"></text></g><g><title>cast (z3/z3.py:2406) (3 samples, 0.13%)</title><rect x="35.2308%" y="228" width="0.1345%" height="15" fill="rgb(224,137,22)" fg:x="786" fg:w="3"/><text x="35.4808%" y="238.50"></text></g><g><title>IntVal (z3/z3.py:3243) (3 samples, 0.13%)</title><rect x="35.2308%" y="244" width="0.1345%" height="15" fill="rgb(254,70,32)" fg:x="786" fg:w="3"/><text x="35.4808%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="35.4550%" y="228" width="0.1345%" height="15" fill="rgb(229,75,37)" fg:x="791" fg:w="3"/><text x="35.7050%" y="238.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="35.4550%" y="244" width="0.1345%" height="15" fill="rgb(252,64,23)" fg:x="791" fg:w="3"/><text x="35.7050%" y="254.50"></text></g><g><title>If (z3/z3.py:1415) (4 samples, 0.18%)</title><rect x="35.4550%" y="196" width="0.1793%" height="15" fill="rgb(232,162,48)" fg:x="791" fg:w="4"/><text x="35.7050%" y="206.50"></text></g><g><title>cast (z3/z3.py:1554) (4 samples, 0.18%)</title><rect x="35.4550%" y="212" width="0.1793%" height="15" fill="rgb(246,160,12)" fg:x="791" fg:w="4"/><text x="35.7050%" y="222.50"></text></g><g><title>If (z3/z3.py:1416) (6 samples, 0.27%)</title><rect x="35.6342%" y="196" width="0.2689%" height="15" fill="rgb(247,166,0)" fg:x="795" fg:w="6"/><text x="35.8842%" y="206.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:109) (14 samples, 0.63%)</title><rect x="35.3653%" y="180" width="0.6275%" height="15" fill="rgb(249,219,21)" fg:x="789" fg:w="14"/><text x="35.6153%" y="190.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:111) (6 samples, 0.27%)</title><rect x="35.9928%" y="180" width="0.2689%" height="15" fill="rgb(205,209,3)" fg:x="803" fg:w="6"/><text x="36.2428%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (6 samples, 0.27%)</title><rect x="35.9928%" y="196" width="0.2689%" height="15" fill="rgb(243,44,1)" fg:x="803" fg:w="6"/><text x="36.2428%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="36.0825%" y="212" width="0.1793%" height="15" fill="rgb(206,159,16)" fg:x="805" fg:w="4"/><text x="36.3325%" y="222.50"></text></g><g><title>cast (z3/z3.py:2406) (4 samples, 0.18%)</title><rect x="36.0825%" y="228" width="0.1793%" height="15" fill="rgb(244,77,30)" fg:x="805" fg:w="4"/><text x="36.3325%" y="238.50"></text></g><g><title>IntVal (z3/z3.py:3243) (4 samples, 0.18%)</title><rect x="36.0825%" y="244" width="0.1793%" height="15" fill="rgb(218,69,12)" fg:x="805" fg:w="4"/><text x="36.3325%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="36.4859%" y="212" width="0.1345%" height="15" fill="rgb(212,87,7)" fg:x="814" fg:w="3"/><text x="36.7359%" y="222.50"></text></g><g><title>If (z3/z3.py:1416) (10 samples, 0.45%)</title><rect x="36.3514%" y="196" width="0.4482%" height="15" fill="rgb(245,114,25)" fg:x="811" fg:w="10"/><text x="36.6014%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="36.6203%" y="212" width="0.1793%" height="15" fill="rgb(210,61,42)" fg:x="817" fg:w="4"/><text x="36.8703%" y="222.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:116) (16 samples, 0.72%)</title><rect x="36.2618%" y="180" width="0.7172%" height="15" fill="rgb(211,52,33)" fg:x="809" fg:w="16"/><text x="36.5118%" y="190.50"></text></g><g><title>If (z3/z3.py:1419) (4 samples, 0.18%)</title><rect x="36.7996%" y="196" width="0.1793%" height="15" fill="rgb(234,58,33)" fg:x="821" fg:w="4"/><text x="37.0496%" y="206.50"></text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="36.9789%" y="196" width="0.1345%" height="15" fill="rgb(220,115,36)" fg:x="825" fg:w="3"/><text x="37.2289%" y="206.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="36.9789%" y="212" width="0.1345%" height="15" fill="rgb(243,153,54)" fg:x="825" fg:w="3"/><text x="37.2289%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="37.1582%" y="212" width="0.1793%" height="15" fill="rgb(251,47,18)" fg:x="829" fg:w="4"/><text x="37.4082%" y="222.50"></text></g><g><title>__add__ (z3/z3.py:2478) (7 samples, 0.31%)</title><rect x="37.1582%" y="196" width="0.3138%" height="15" fill="rgb(242,102,42)" fg:x="829" fg:w="7"/><text x="37.4082%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="37.3375%" y="212" width="0.1345%" height="15" fill="rgb(234,31,38)" fg:x="833" fg:w="3"/><text x="37.5875%" y="222.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (6 samples, 0.27%)</title><rect x="37.5168%" y="196" width="0.2689%" height="15" fill="rgb(221,117,51)" fg:x="837" fg:w="6"/><text x="37.7668%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="37.6065%" y="212" width="0.1793%" height="15" fill="rgb(212,20,18)" fg:x="839" fg:w="4"/><text x="37.8565%" y="222.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (5 samples, 0.22%)</title><rect x="37.7857%" y="196" width="0.2241%" height="15" fill="rgb(245,133,36)" fg:x="843" fg:w="5"/><text x="38.0357%" y="206.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:28) (463 samples, 20.75%)</title><rect x="17.3465%" y="164" width="20.7530%" height="15" fill="rgb(212,6,19)" fg:x="387" fg:w="463"/><text x="17.5965%" y="174.50">cond_implicit_partiton (bisimulat..</text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:118) (25 samples, 1.12%)</title><rect x="36.9789%" y="180" width="1.1206%" height="15" fill="rgb(218,1,36)" fg:x="825" fg:w="25"/><text x="37.2289%" y="190.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:29) (5 samples, 0.22%)</title><rect x="38.0995%" y="164" width="0.2241%" height="15" fill="rgb(246,84,54)" fg:x="850" fg:w="5"/><text x="38.3495%" y="174.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (4 samples, 0.18%)</title><rect x="38.4133%" y="180" width="0.1793%" height="15" fill="rgb(242,110,6)" fg:x="857" fg:w="4"/><text x="38.6633%" y="190.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3069) (3 samples, 0.13%)</title><rect x="38.9511%" y="292" width="0.1345%" height="15" fill="rgb(214,47,5)" fg:x="869" fg:w="3"/><text x="39.2011%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="38.9511%" y="244" width="0.2241%" height="15" fill="rgb(218,159,25)" fg:x="869" fg:w="5"/><text x="39.2011%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (5 samples, 0.22%)</title><rect x="38.9511%" y="260" width="0.2241%" height="15" fill="rgb(215,211,28)" fg:x="869" fg:w="5"/><text x="39.2011%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="38.9511%" y="276" width="0.2241%" height="15" fill="rgb(238,59,32)" fg:x="869" fg:w="5"/><text x="39.2011%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="39.1753%" y="244" width="0.1345%" height="15" fill="rgb(226,82,3)" fg:x="874" fg:w="3"/><text x="39.4253%" y="254.50"></text></g><g><title>__add__ (z3/z3.py:2478) (12 samples, 0.54%)</title><rect x="38.9063%" y="228" width="0.5379%" height="15" fill="rgb(240,164,32)" fg:x="868" fg:w="12"/><text x="39.1563%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="39.4890%" y="244" width="0.2241%" height="15" fill="rgb(232,46,7)" fg:x="881" fg:w="5"/><text x="39.7390%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (5 samples, 0.22%)</title><rect x="39.4890%" y="260" width="0.2241%" height="15" fill="rgb(229,129,53)" fg:x="881" fg:w="5"/><text x="39.7390%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="39.5787%" y="276" width="0.1345%" height="15" fill="rgb(234,188,29)" fg:x="883" fg:w="3"/><text x="39.8287%" y="286.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="39.7580%" y="260" width="0.1345%" height="15" fill="rgb(246,141,4)" fg:x="887" fg:w="3"/><text x="40.0080%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="39.7580%" y="276" width="0.1345%" height="15" fill="rgb(229,23,39)" fg:x="887" fg:w="3"/><text x="40.0080%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (5 samples, 0.22%)</title><rect x="39.7131%" y="244" width="0.2241%" height="15" fill="rgb(206,12,3)" fg:x="886" fg:w="5"/><text x="39.9631%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (5 samples, 0.22%)</title><rect x="39.9821%" y="260" width="0.2241%" height="15" fill="rgb(252,226,20)" fg:x="892" fg:w="5"/><text x="40.2321%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="39.9821%" y="276" width="0.2241%" height="15" fill="rgb(216,123,35)" fg:x="892" fg:w="5"/><text x="40.2321%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="40.0717%" y="292" width="0.1345%" height="15" fill="rgb(212,68,40)" fg:x="894" fg:w="3"/><text x="40.3217%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (8 samples, 0.36%)</title><rect x="39.9372%" y="244" width="0.3586%" height="15" fill="rgb(254,125,32)" fg:x="891" fg:w="8"/><text x="40.1872%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (6 samples, 0.27%)</title><rect x="40.3407%" y="260" width="0.2689%" height="15" fill="rgb(253,97,22)" fg:x="900" fg:w="6"/><text x="40.5907%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (6 samples, 0.27%)</title><rect x="40.3407%" y="276" width="0.2689%" height="15" fill="rgb(241,101,14)" fg:x="900" fg:w="6"/><text x="40.5907%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="40.4751%" y="292" width="0.1345%" height="15" fill="rgb(238,103,29)" fg:x="903" fg:w="3"/><text x="40.7251%" y="302.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (32 samples, 1.43%)</title><rect x="39.4890%" y="228" width="1.4343%" height="15" fill="rgb(233,195,47)" fg:x="881" fg:w="32"/><text x="39.7390%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (14 samples, 0.63%)</title><rect x="40.2958%" y="244" width="0.6275%" height="15" fill="rgb(246,218,30)" fg:x="899" fg:w="14"/><text x="40.5458%" y="254.50"></text></g><g><title>cast (z3/z3.py:2397) (6 samples, 0.27%)</title><rect x="40.6544%" y="260" width="0.2689%" height="15" fill="rgb(219,145,47)" fg:x="907" fg:w="6"/><text x="40.9044%" y="270.50"></text></g><g><title>ToReal (z3/z3.py:3417) (6 samples, 0.27%)</title><rect x="40.6544%" y="276" width="0.2689%" height="15" fill="rgb(243,12,26)" fg:x="907" fg:w="6"/><text x="40.9044%" y="286.50"></text></g><g><title>is_int (z3/z3.py:2455) (6 samples, 0.27%)</title><rect x="40.6544%" y="292" width="0.2689%" height="15" fill="rgb(214,87,16)" fg:x="907" fg:w="6"/><text x="40.9044%" y="302.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="40.7441%" y="308" width="0.1793%" height="15" fill="rgb(208,99,42)" fg:x="909" fg:w="4"/><text x="40.9941%" y="318.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="40.7441%" y="324" width="0.1793%" height="15" fill="rgb(253,99,2)" fg:x="909" fg:w="4"/><text x="40.9941%" y="334.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="40.7441%" y="340" width="0.1793%" height="15" fill="rgb(220,168,23)" fg:x="909" fg:w="4"/><text x="40.9941%" y="350.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (4 samples, 0.18%)</title><rect x="40.7441%" y="356" width="0.1793%" height="15" fill="rgb(242,38,24)" fg:x="909" fg:w="4"/><text x="40.9941%" y="366.50"></text></g><g><title>from_param (z3/z3types.py:25) (4 samples, 0.18%)</title><rect x="40.7441%" y="372" width="0.1793%" height="15" fill="rgb(225,182,9)" fg:x="909" fg:w="4"/><text x="40.9941%" y="382.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (54 samples, 2.42%)</title><rect x="38.6822%" y="196" width="2.4204%" height="15" fill="rgb(243,178,37)" fg:x="863" fg:w="54"/><text x="38.9322%" y="206.50">bd..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (54 samples, 2.42%)</title><rect x="38.6822%" y="212" width="2.4204%" height="15" fill="rgb(232,139,19)" fg:x="863" fg:w="54"/><text x="38.9322%" y="222.50">__..</text></g><g><title>__mul__ (z3/z3.py:2504) (4 samples, 0.18%)</title><rect x="40.9234%" y="228" width="0.1793%" height="15" fill="rgb(225,201,24)" fg:x="913" fg:w="4"/><text x="41.1734%" y="238.50"></text></g><g><title>RealSort (z3/z3.py:3219) (6 samples, 0.27%)</title><rect x="41.1026%" y="228" width="0.2689%" height="15" fill="rgb(221,47,46)" fg:x="917" fg:w="6"/><text x="41.3526%" y="238.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="41.2371%" y="244" width="0.1345%" height="15" fill="rgb(249,23,13)" fg:x="920" fg:w="3"/><text x="41.4871%" y="254.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="41.4612%" y="260" width="0.1345%" height="15" fill="rgb(219,9,5)" fg:x="925" fg:w="3"/><text x="41.7112%" y="270.50"></text></g><g><title>Check (z3/z3core.py:1552) (3 samples, 0.13%)</title><rect x="41.4612%" y="276" width="0.1345%" height="15" fill="rgb(254,171,16)" fg:x="925" fg:w="3"/><text x="41.7112%" y="286.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:131) (12 samples, 0.54%)</title><rect x="41.1026%" y="196" width="0.5379%" height="15" fill="rgb(230,171,20)" fg:x="917" fg:w="12"/><text x="41.3526%" y="206.50"></text></g><g><title>RealVal (z3/z3.py:3262) (12 samples, 0.54%)</title><rect x="41.1026%" y="212" width="0.5379%" height="15" fill="rgb(210,71,41)" fg:x="917" fg:w="12"/><text x="41.3526%" y="222.50"></text></g><g><title>__del__ (z3/z3.py:352) (6 samples, 0.27%)</title><rect x="41.3716%" y="228" width="0.2689%" height="15" fill="rgb(206,173,20)" fg:x="923" fg:w="6"/><text x="41.6216%" y="238.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="41.4164%" y="244" width="0.2241%" height="15" fill="rgb(233,88,34)" fg:x="924" fg:w="5"/><text x="41.6664%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="41.9991%" y="260" width="0.1345%" height="15" fill="rgb(223,209,46)" fg:x="937" fg:w="3"/><text x="42.2491%" y="270.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="41.9991%" y="276" width="0.1345%" height="15" fill="rgb(250,43,18)" fg:x="937" fg:w="3"/><text x="42.2491%" y="286.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (3 samples, 0.13%)</title><rect x="41.9991%" y="292" width="0.1345%" height="15" fill="rgb(208,13,10)" fg:x="937" fg:w="3"/><text x="42.2491%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (5 samples, 0.22%)</title><rect x="41.9991%" y="244" width="0.2241%" height="15" fill="rgb(212,200,36)" fg:x="937" fg:w="5"/><text x="42.2491%" y="254.50"></text></g><g><title>__add__ (z3/z3.py:2478) (7 samples, 0.31%)</title><rect x="41.9543%" y="228" width="0.3138%" height="15" fill="rgb(225,90,30)" fg:x="936" fg:w="7"/><text x="42.2043%" y="238.50"></text></g><g><title>__add__ (z3/z3.py:2479) (3 samples, 0.13%)</title><rect x="42.2680%" y="228" width="0.1345%" height="15" fill="rgb(236,182,39)" fg:x="943" fg:w="3"/><text x="42.5180%" y="238.50"></text></g><g><title>_mk_bin (z3/z3.py:1452) (3 samples, 0.13%)</title><rect x="42.2680%" y="244" width="0.1345%" height="15" fill="rgb(212,144,35)" fg:x="943" fg:w="3"/><text x="42.5180%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="42.5370%" y="244" width="0.2241%" height="15" fill="rgb(228,63,44)" fg:x="949" fg:w="5"/><text x="42.7870%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (5 samples, 0.22%)</title><rect x="42.5370%" y="260" width="0.2241%" height="15" fill="rgb(228,109,6)" fg:x="949" fg:w="5"/><text x="42.7870%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="42.5370%" y="276" width="0.2241%" height="15" fill="rgb(238,117,24)" fg:x="949" fg:w="5"/><text x="42.7870%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="42.7611%" y="244" width="0.1793%" height="15" fill="rgb(242,26,26)" fg:x="954" fg:w="4"/><text x="43.0111%" y="254.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="43.0749%" y="260" width="0.1793%" height="15" fill="rgb(221,92,48)" fg:x="961" fg:w="4"/><text x="43.3249%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="43.0749%" y="276" width="0.1793%" height="15" fill="rgb(209,209,32)" fg:x="961" fg:w="4"/><text x="43.3249%" y="286.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="43.2541%" y="260" width="0.1345%" height="15" fill="rgb(221,70,22)" fg:x="965" fg:w="3"/><text x="43.5041%" y="270.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="43.2541%" y="276" width="0.1345%" height="15" fill="rgb(248,145,5)" fg:x="965" fg:w="3"/><text x="43.5041%" y="286.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (25 samples, 1.12%)</title><rect x="42.4473%" y="228" width="1.1206%" height="15" fill="rgb(226,116,26)" fg:x="947" fg:w="25"/><text x="42.6973%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (12 samples, 0.54%)</title><rect x="43.0300%" y="244" width="0.5379%" height="15" fill="rgb(244,5,17)" fg:x="960" fg:w="12"/><text x="43.2800%" y="254.50"></text></g><g><title>cast (z3/z3.py:2397) (3 samples, 0.13%)</title><rect x="43.4334%" y="260" width="0.1345%" height="15" fill="rgb(252,159,33)" fg:x="969" fg:w="3"/><text x="43.6834%" y="270.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (44 samples, 1.97%)</title><rect x="41.6405%" y="196" width="1.9722%" height="15" fill="rgb(206,71,0)" fg:x="929" fg:w="44"/><text x="41.8905%" y="206.50">b..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (44 samples, 1.97%)</title><rect x="41.6405%" y="212" width="1.9722%" height="15" fill="rgb(233,118,54)" fg:x="929" fg:w="44"/><text x="41.8905%" y="222.50">_..</text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="43.6127%" y="228" width="0.1345%" height="15" fill="rgb(234,83,48)" fg:x="973" fg:w="3"/><text x="43.8627%" y="238.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="43.6127%" y="244" width="0.1345%" height="15" fill="rgb(228,3,54)" fg:x="973" fg:w="3"/><text x="43.8627%" y="254.50"></text></g><g><title>If (z3/z3.py:1416) (7 samples, 0.31%)</title><rect x="43.7472%" y="228" width="0.3138%" height="15" fill="rgb(226,155,13)" fg:x="976" fg:w="7"/><text x="43.9972%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="43.9265%" y="244" width="0.1345%" height="15" fill="rgb(241,28,37)" fg:x="980" fg:w="3"/><text x="44.1765%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="44.1506%" y="260" width="0.1345%" height="15" fill="rgb(233,93,10)" fg:x="985" fg:w="3"/><text x="44.4006%" y="270.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="44.1506%" y="276" width="0.1345%" height="15" fill="rgb(225,113,19)" fg:x="985" fg:w="3"/><text x="44.4006%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="44.1506%" y="244" width="0.1793%" height="15" fill="rgb(241,2,18)" fg:x="985" fg:w="4"/><text x="44.4006%" y="254.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (12 samples, 0.54%)</title><rect x="44.1506%" y="228" width="0.5379%" height="15" fill="rgb(228,207,21)" fg:x="985" fg:w="12"/><text x="44.4006%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (7 samples, 0.31%)</title><rect x="44.3747%" y="244" width="0.3138%" height="15" fill="rgb(213,211,35)" fg:x="990" fg:w="7"/><text x="44.6247%" y="254.50"></text></g><g><title>cast (z3/z3.py:2394) (5 samples, 0.22%)</title><rect x="44.4644%" y="260" width="0.2241%" height="15" fill="rgb(209,83,10)" fg:x="992" fg:w="5"/><text x="44.7144%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1222) (4 samples, 0.18%)</title><rect x="44.8229%" y="260" width="0.1793%" height="15" fill="rgb(209,164,1)" fg:x="1000" fg:w="4"/><text x="45.0729%" y="270.50"></text></g><g><title>_py2expr (z3/z3.py:3177) (3 samples, 0.13%)</title><rect x="44.8678%" y="276" width="0.1345%" height="15" fill="rgb(213,184,43)" fg:x="1001" fg:w="3"/><text x="45.1178%" y="286.50"></text></g><g><title>IntVal (z3/z3.py:3243) (3 samples, 0.13%)</title><rect x="44.8678%" y="292" width="0.1345%" height="15" fill="rgb(231,61,34)" fg:x="1001" fg:w="3"/><text x="45.1178%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (4 samples, 0.18%)</title><rect x="45.0919%" y="260" width="0.1793%" height="15" fill="rgb(235,75,3)" fg:x="1006" fg:w="4"/><text x="45.3419%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (4 samples, 0.18%)</title><rect x="45.0919%" y="276" width="0.1793%" height="15" fill="rgb(220,106,47)" fg:x="1006" fg:w="4"/><text x="45.3419%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="45.0919%" y="292" width="0.1793%" height="15" fill="rgb(210,196,33)" fg:x="1006" fg:w="4"/><text x="45.3419%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="45.2712%" y="260" width="0.1793%" height="15" fill="rgb(229,154,42)" fg:x="1010" fg:w="4"/><text x="45.5212%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="45.4505%" y="260" width="0.1345%" height="15" fill="rgb(228,114,26)" fg:x="1014" fg:w="3"/><text x="45.7005%" y="270.50"></text></g><g><title>If (z3/z3.py:1416) (18 samples, 0.81%)</title><rect x="44.8229%" y="244" width="0.8068%" height="15" fill="rgb(208,144,1)" fg:x="1000" fg:w="18"/><text x="45.0729%" y="254.50"></text></g><g><title>Z3_mk_ite (z3/z3core.py:1900) (3 samples, 0.13%)</title><rect x="45.6298%" y="260" width="0.1345%" height="15" fill="rgb(239,112,37)" fg:x="1018" fg:w="3"/><text x="45.8798%" y="270.50"></text></g><g><title>If (z3/z3.py:1419) (5 samples, 0.22%)</title><rect x="45.6298%" y="244" width="0.2241%" height="15" fill="rgb(210,96,50)" fg:x="1018" fg:w="5"/><text x="45.8798%" y="254.50"></text></g><g><title>__le__ (z3/z3.py:2672) (8 samples, 0.36%)</title><rect x="45.8987%" y="244" width="0.3586%" height="15" fill="rgb(222,178,2)" fg:x="1024" fg:w="8"/><text x="46.1487%" y="254.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:30) (178 samples, 7.98%)</title><rect x="38.3236%" y="164" width="7.9785%" height="15" fill="rgb(226,74,18)" fg:x="855" fg:w="178"/><text x="38.5736%" y="174.50">cond_implic..</text></g><g><title>f (bisimulation_learning/shared/template.py:116) (170 samples, 7.62%)</title><rect x="38.6822%" y="180" width="7.6199%" height="15" fill="rgb(225,67,54)" fg:x="863" fg:w="170"/><text x="38.9322%" y="190.50">f (bisimul..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (60 samples, 2.69%)</title><rect x="43.6127%" y="196" width="2.6894%" height="15" fill="rgb(251,92,32)" fg:x="973" fg:w="60"/><text x="43.8627%" y="206.50">bd..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (60 samples, 2.69%)</title><rect x="43.6127%" y="212" width="2.6894%" height="15" fill="rgb(228,149,22)" fg:x="973" fg:w="60"/><text x="43.8627%" y="222.50">fo..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (36 samples, 1.61%)</title><rect x="44.6885%" y="228" width="1.6136%" height="15" fill="rgb(243,54,13)" fg:x="997" fg:w="36"/><text x="44.9385%" y="238.50"></text></g><g><title>__lt__ (z3/z3.py:2685) (3 samples, 0.13%)</title><rect x="46.3021%" y="180" width="0.1345%" height="15" fill="rgb(243,180,28)" fg:x="1033" fg:w="3"/><text x="46.5521%" y="190.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (4 samples, 0.18%)</title><rect x="46.7055%" y="212" width="0.1793%" height="15" fill="rgb(208,167,24)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="222.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (4 samples, 0.18%)</title><rect x="46.7055%" y="228" width="0.1793%" height="15" fill="rgb(245,73,45)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="46.7055%" y="244" width="0.1793%" height="15" fill="rgb(237,203,48)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="46.7055%" y="260" width="0.1793%" height="15" fill="rgb(211,197,16)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="270.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="46.7055%" y="276" width="0.1793%" height="15" fill="rgb(243,99,51)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="286.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (4 samples, 0.18%)</title><rect x="46.7055%" y="292" width="0.1793%" height="15" fill="rgb(215,123,29)" fg:x="1042" fg:w="4"/><text x="46.9555%" y="302.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="46.8848%" y="228" width="0.1345%" height="15" fill="rgb(239,186,37)" fg:x="1046" fg:w="3"/><text x="47.1348%" y="238.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="47.0193%" y="228" width="0.1345%" height="15" fill="rgb(252,136,39)" fg:x="1049" fg:w="3"/><text x="47.2693%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="47.0193%" y="244" width="0.1345%" height="15" fill="rgb(223,213,32)" fg:x="1049" fg:w="3"/><text x="47.2693%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (11 samples, 0.49%)</title><rect x="46.8848%" y="212" width="0.4931%" height="15" fill="rgb(233,115,5)" fg:x="1046" fg:w="11"/><text x="47.1348%" y="222.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (5 samples, 0.22%)</title><rect x="47.1537%" y="228" width="0.2241%" height="15" fill="rgb(207,226,44)" fg:x="1052" fg:w="5"/><text x="47.4037%" y="238.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="47.1986%" y="244" width="0.1793%" height="15" fill="rgb(208,126,0)" fg:x="1053" fg:w="4"/><text x="47.4486%" y="254.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="47.1986%" y="260" width="0.1793%" height="15" fill="rgb(244,66,21)" fg:x="1053" fg:w="4"/><text x="47.4486%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="47.3779%" y="212" width="0.1793%" height="15" fill="rgb(222,97,12)" fg:x="1057" fg:w="4"/><text x="47.6279%" y="222.50"></text></g><g><title>__add__ (z3/z3.py:2478) (29 samples, 1.30%)</title><rect x="46.6159%" y="196" width="1.2999%" height="15" fill="rgb(219,213,19)" fg:x="1040" fg:w="29"/><text x="46.8659%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (8 samples, 0.36%)</title><rect x="47.5571%" y="212" width="0.3586%" height="15" fill="rgb(252,169,30)" fg:x="1061" fg:w="8"/><text x="47.8071%" y="222.50"></text></g><g><title>cast (z3/z3.py:2394) (4 samples, 0.18%)</title><rect x="47.7364%" y="228" width="0.1793%" height="15" fill="rgb(206,32,51)" fg:x="1065" fg:w="4"/><text x="47.9864%" y="238.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="47.7364%" y="244" width="0.1793%" height="15" fill="rgb(250,172,42)" fg:x="1065" fg:w="4"/><text x="47.9864%" y="254.50"></text></g><g><title>__add__ (z3/z3.py:2479) (3 samples, 0.13%)</title><rect x="47.9157%" y="196" width="0.1345%" height="15" fill="rgb(209,34,43)" fg:x="1069" fg:w="3"/><text x="48.1657%" y="206.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="48.0502%" y="212" width="0.1345%" height="15" fill="rgb(223,11,35)" fg:x="1072" fg:w="3"/><text x="48.3002%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="48.1847%" y="212" width="0.2241%" height="15" fill="rgb(251,219,26)" fg:x="1075" fg:w="5"/><text x="48.4347%" y="222.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (5 samples, 0.22%)</title><rect x="48.1847%" y="228" width="0.2241%" height="15" fill="rgb(231,119,3)" fg:x="1075" fg:w="5"/><text x="48.4347%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="48.1847%" y="244" width="0.2241%" height="15" fill="rgb(216,97,11)" fg:x="1075" fg:w="5"/><text x="48.4347%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="48.2743%" y="260" width="0.1345%" height="15" fill="rgb(223,59,9)" fg:x="1077" fg:w="3"/><text x="48.5243%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (9 samples, 0.40%)</title><rect x="48.4088%" y="212" width="0.4034%" height="15" fill="rgb(233,93,31)" fg:x="1080" fg:w="9"/><text x="48.6588%" y="222.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="49.0363%" y="228" width="0.1793%" height="15" fill="rgb(239,81,33)" fg:x="1094" fg:w="4"/><text x="49.2863%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="49.0363%" y="244" width="0.1793%" height="15" fill="rgb(213,120,34)" fg:x="1094" fg:w="4"/><text x="49.2863%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="49.0363%" y="260" width="0.1793%" height="15" fill="rgb(243,49,53)" fg:x="1094" fg:w="4"/><text x="49.2863%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (12 samples, 0.54%)</title><rect x="48.8122%" y="212" width="0.5379%" height="15" fill="rgb(247,216,33)" fg:x="1089" fg:w="12"/><text x="49.0622%" y="222.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="49.2156%" y="228" width="0.1345%" height="15" fill="rgb(226,26,14)" fg:x="1098" fg:w="3"/><text x="49.4656%" y="238.50"></text></g><g><title>cast (z3/z3.py:2393) (6 samples, 0.27%)</title><rect x="49.4397%" y="228" width="0.2689%" height="15" fill="rgb(215,49,53)" fg:x="1103" fg:w="6"/><text x="49.6897%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (6 samples, 0.27%)</title><rect x="49.4397%" y="244" width="0.2689%" height="15" fill="rgb(245,162,40)" fg:x="1103" fg:w="6"/><text x="49.6897%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="49.5742%" y="260" width="0.1345%" height="15" fill="rgb(229,68,17)" fg:x="1106" fg:w="3"/><text x="49.8242%" y="270.50"></text></g><g><title>ToReal (z3/z3.py:3417) (5 samples, 0.22%)</title><rect x="49.8431%" y="244" width="0.2241%" height="15" fill="rgb(213,182,10)" fg:x="1112" fg:w="5"/><text x="50.0931%" y="254.50"></text></g><g><title>is_int (z3/z3.py:2455) (5 samples, 0.22%)</title><rect x="49.8431%" y="260" width="0.2241%" height="15" fill="rgb(245,125,30)" fg:x="1112" fg:w="5"/><text x="50.0931%" y="270.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (47 samples, 2.11%)</title><rect x="48.0502%" y="196" width="2.1067%" height="15" fill="rgb(232,202,2)" fg:x="1072" fg:w="47"/><text x="48.3002%" y="206.50">_..</text></g><g><title>_coerce_exprs (z3/z3.py:1237) (18 samples, 0.81%)</title><rect x="49.3501%" y="212" width="0.8068%" height="15" fill="rgb(237,140,51)" fg:x="1101" fg:w="18"/><text x="49.6001%" y="222.50"></text></g><g><title>cast (z3/z3.py:2397) (7 samples, 0.31%)</title><rect x="49.8431%" y="228" width="0.3138%" height="15" fill="rgb(236,157,25)" fg:x="1112" fg:w="7"/><text x="50.0931%" y="238.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:31) (88 samples, 3.94%)</title><rect x="46.3021%" y="164" width="3.9444%" height="15" fill="rgb(219,209,0)" fg:x="1033" fg:w="88"/><text x="46.5521%" y="174.50">cond..</text></g><g><title>h_brn_impl (bisimulation_learning/shared/template.py:126) (85 samples, 3.81%)</title><rect x="46.4366%" y="180" width="3.8100%" height="15" fill="rgb(240,116,54)" fg:x="1036" fg:w="85"/><text x="46.6866%" y="190.50">h_br..</text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="50.4706%" y="260" width="0.1345%" height="15" fill="rgb(216,10,36)" fg:x="1126" fg:w="3"/><text x="50.7206%" y="270.50"></text></g><g><title>And (z3/z3.py:1917) (9 samples, 0.40%)</title><rect x="50.2913%" y="196" width="0.4034%" height="15" fill="rgb(222,72,44)" fg:x="1122" fg:w="9"/><text x="50.5413%" y="206.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1257) (6 samples, 0.27%)</title><rect x="50.4258%" y="212" width="0.2689%" height="15" fill="rgb(232,159,9)" fg:x="1125" fg:w="6"/><text x="50.6758%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (z3/z3.py:1257) (6 samples, 0.27%)</title><rect x="50.4258%" y="228" width="0.2689%" height="15" fill="rgb(210,39,32)" fg:x="1125" fg:w="6"/><text x="50.6758%" y="238.50"></text></g><g><title>cast (z3/z3.py:1554) (6 samples, 0.27%)</title><rect x="50.4258%" y="244" width="0.2689%" height="15" fill="rgb(216,194,45)" fg:x="1125" fg:w="6"/><text x="50.6758%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="50.7844%" y="196" width="0.1793%" height="15" fill="rgb(218,18,35)" fg:x="1133" fg:w="4"/><text x="51.0344%" y="206.50"></text></g><g><title>Z3_dec_ref (z3/z3core.py:1626) (3 samples, 0.13%)</title><rect x="50.8292%" y="212" width="0.1345%" height="15" fill="rgb(207,83,51)" fg:x="1134" fg:w="3"/><text x="51.0792%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="51.0085%" y="212" width="0.1345%" height="15" fill="rgb(225,63,43)" fg:x="1138" fg:w="3"/><text x="51.2585%" y="222.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="51.2326%" y="228" width="0.1345%" height="15" fill="rgb(207,57,36)" fg:x="1143" fg:w="3"/><text x="51.4826%" y="238.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (10 samples, 0.45%)</title><rect x="50.9637%" y="196" width="0.4482%" height="15" fill="rgb(216,99,33)" fg:x="1137" fg:w="10"/><text x="51.2137%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="51.2326%" y="212" width="0.1793%" height="15" fill="rgb(225,42,16)" fg:x="1143" fg:w="4"/><text x="51.4826%" y="222.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="51.5912%" y="228" width="0.1345%" height="15" fill="rgb(220,201,45)" fg:x="1151" fg:w="3"/><text x="51.8412%" y="238.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="51.5912%" y="244" width="0.1345%" height="15" fill="rgb(225,33,4)" fg:x="1151" fg:w="3"/><text x="51.8412%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="51.5912%" y="212" width="0.2241%" height="15" fill="rgb(224,33,50)" fg:x="1151" fg:w="5"/><text x="51.8412%" y="222.50"></text></g><g><title>__lt__ (z3/z3.py:2685) (11 samples, 0.49%)</title><rect x="51.4119%" y="196" width="0.4931%" height="15" fill="rgb(246,198,51)" fg:x="1147" fg:w="11"/><text x="51.6619%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="52.0394%" y="260" width="0.1345%" height="15" fill="rgb(205,22,4)" fg:x="1161" fg:w="3"/><text x="52.2894%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="52.2187%" y="308" width="0.1345%" height="15" fill="rgb(206,3,8)" fg:x="1165" fg:w="3"/><text x="52.4687%" y="318.50"></text></g><g><title>cast (z3/z3.py:2393) (6 samples, 0.27%)</title><rect x="52.1739%" y="276" width="0.2689%" height="15" fill="rgb(251,23,15)" fg:x="1164" fg:w="6"/><text x="52.4239%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (6 samples, 0.27%)</title><rect x="52.1739%" y="292" width="0.2689%" height="15" fill="rgb(252,88,28)" fg:x="1164" fg:w="6"/><text x="52.4239%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (8 samples, 0.36%)</title><rect x="52.1739%" y="260" width="0.3586%" height="15" fill="rgb(212,127,14)" fg:x="1164" fg:w="8"/><text x="52.4239%" y="270.50"></text></g><g><title>__add__ (z3/z3.py:2478) (12 samples, 0.54%)</title><rect x="52.0394%" y="244" width="0.5379%" height="15" fill="rgb(247,145,37)" fg:x="1161" fg:w="12"/><text x="52.2894%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="52.7566%" y="276" width="0.1793%" height="15" fill="rgb(209,117,53)" fg:x="1177" fg:w="4"/><text x="53.0066%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="52.8014%" y="292" width="0.1345%" height="15" fill="rgb(212,90,42)" fg:x="1178" fg:w="3"/><text x="53.0514%" y="302.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1208) (3 samples, 0.13%)</title><rect x="53.1152%" y="276" width="0.1345%" height="15" fill="rgb(218,164,37)" fg:x="1185" fg:w="3"/><text x="53.3652%" y="286.50"></text></g><g><title>subsort (z3/z3.py:2374) (3 samples, 0.13%)</title><rect x="53.1152%" y="292" width="0.1345%" height="15" fill="rgb(246,65,34)" fg:x="1185" fg:w="3"/><text x="53.3652%" y="302.50"></text></g><g><title>is_int (z3/z3.py:2367) (3 samples, 0.13%)</title><rect x="53.1152%" y="308" width="0.1345%" height="15" fill="rgb(231,100,33)" fg:x="1185" fg:w="3"/><text x="53.3652%" y="318.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (12 samples, 0.54%)</title><rect x="52.7566%" y="260" width="0.5379%" height="15" fill="rgb(228,126,14)" fg:x="1177" fg:w="12"/><text x="53.0066%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="53.4290%" y="276" width="0.1345%" height="15" fill="rgb(215,173,21)" fg:x="1192" fg:w="3"/><text x="53.6790%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="53.4290%" y="292" width="0.1345%" height="15" fill="rgb(210,6,40)" fg:x="1192" fg:w="3"/><text x="53.6790%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="53.4290%" y="308" width="0.1345%" height="15" fill="rgb(212,48,18)" fg:x="1192" fg:w="3"/><text x="53.6790%" y="318.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (4 samples, 0.18%)</title><rect x="53.7427%" y="324" width="0.1793%" height="15" fill="rgb(230,214,11)" fg:x="1199" fg:w="4"/><text x="53.9927%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (16 samples, 0.72%)</title><rect x="53.2945%" y="260" width="0.7172%" height="15" fill="rgb(254,105,39)" fg:x="1189" fg:w="16"/><text x="53.5445%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (10 samples, 0.45%)</title><rect x="53.5634%" y="276" width="0.4482%" height="15" fill="rgb(245,158,5)" fg:x="1195" fg:w="10"/><text x="53.8134%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (10 samples, 0.45%)</title><rect x="53.5634%" y="292" width="0.4482%" height="15" fill="rgb(249,208,11)" fg:x="1195" fg:w="10"/><text x="53.8134%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (7 samples, 0.31%)</title><rect x="53.6979%" y="308" width="0.3138%" height="15" fill="rgb(210,39,28)" fg:x="1198" fg:w="7"/><text x="53.9479%" y="318.50"></text></g><g><title>cast (z3/z3.py:2397) (4 samples, 0.18%)</title><rect x="54.1013%" y="276" width="0.1793%" height="15" fill="rgb(211,56,53)" fg:x="1207" fg:w="4"/><text x="54.3513%" y="286.50"></text></g><g><title>ToReal (z3/z3.py:3419) (4 samples, 0.18%)</title><rect x="54.1013%" y="292" width="0.1793%" height="15" fill="rgb(226,201,30)" fg:x="1207" fg:w="4"/><text x="54.3513%" y="302.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (55 samples, 2.47%)</title><rect x="51.9498%" y="212" width="2.4653%" height="15" fill="rgb(239,101,34)" fg:x="1159" fg:w="55"/><text x="52.1998%" y="222.50">bd..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (55 samples, 2.47%)</title><rect x="51.9498%" y="228" width="2.4653%" height="15" fill="rgb(226,209,5)" fg:x="1159" fg:w="55"/><text x="52.1998%" y="238.50">__..</text></g><g><title>__mul__ (z3/z3.py:2503) (40 samples, 1.79%)</title><rect x="52.6221%" y="244" width="1.7929%" height="15" fill="rgb(250,105,47)" fg:x="1174" fg:w="40"/><text x="52.8721%" y="254.50">_..</text></g><g><title>_coerce_exprs (z3/z3.py:1237) (9 samples, 0.40%)</title><rect x="54.0117%" y="260" width="0.4034%" height="15" fill="rgb(230,72,3)" fg:x="1205" fg:w="9"/><text x="54.2617%" y="270.50"></text></g><g><title>cast (z3/z3.py:2408) (3 samples, 0.13%)</title><rect x="54.2806%" y="276" width="0.1345%" height="15" fill="rgb(232,218,39)" fg:x="1211" fg:w="3"/><text x="54.5306%" y="286.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:131) (7 samples, 0.31%)</title><rect x="54.4151%" y="212" width="0.3138%" height="15" fill="rgb(248,166,6)" fg:x="1214" fg:w="7"/><text x="54.6651%" y="222.50"></text></g><g><title>RealVal (z3/z3.py:3262) (7 samples, 0.31%)</title><rect x="54.4151%" y="228" width="0.3138%" height="15" fill="rgb(247,89,20)" fg:x="1214" fg:w="7"/><text x="54.6651%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (3 samples, 0.13%)</title><rect x="54.9978%" y="260" width="0.1345%" height="15" fill="rgb(248,130,54)" fg:x="1227" fg:w="3"/><text x="55.2478%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="54.9978%" y="276" width="0.1345%" height="15" fill="rgb(234,196,4)" fg:x="1227" fg:w="3"/><text x="55.2478%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="54.9978%" y="292" width="0.1345%" height="15" fill="rgb(250,143,31)" fg:x="1227" fg:w="3"/><text x="55.2478%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="55.1322%" y="260" width="0.1793%" height="15" fill="rgb(211,110,34)" fg:x="1230" fg:w="4"/><text x="55.3822%" y="270.50"></text></g><g><title>__add__ (z3/z3.py:2478) (13 samples, 0.58%)</title><rect x="54.9529%" y="244" width="0.5827%" height="15" fill="rgb(215,124,48)" fg:x="1226" fg:w="13"/><text x="55.2029%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="55.4012%" y="260" width="0.1345%" height="15" fill="rgb(216,46,13)" fg:x="1236" fg:w="3"/><text x="55.6512%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="55.4012%" y="276" width="0.1345%" height="15" fill="rgb(205,184,25)" fg:x="1236" fg:w="3"/><text x="55.6512%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="55.4012%" y="292" width="0.1345%" height="15" fill="rgb(228,1,10)" fg:x="1236" fg:w="3"/><text x="55.6512%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (5 samples, 0.22%)</title><rect x="55.8494%" y="260" width="0.2241%" height="15" fill="rgb(213,116,27)" fg:x="1246" fg:w="5"/><text x="56.0994%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (5 samples, 0.22%)</title><rect x="55.8494%" y="276" width="0.2241%" height="15" fill="rgb(241,95,50)" fg:x="1246" fg:w="5"/><text x="56.0994%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (5 samples, 0.22%)</title><rect x="55.8494%" y="292" width="0.2241%" height="15" fill="rgb(238,48,32)" fg:x="1246" fg:w="5"/><text x="56.0994%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="55.8942%" y="308" width="0.1793%" height="15" fill="rgb(235,113,49)" fg:x="1247" fg:w="4"/><text x="56.1442%" y="318.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="55.8942%" y="324" width="0.1793%" height="15" fill="rgb(205,127,43)" fg:x="1247" fg:w="4"/><text x="56.1442%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (8 samples, 0.36%)</title><rect x="56.0735%" y="260" width="0.3586%" height="15" fill="rgb(250,162,2)" fg:x="1251" fg:w="8"/><text x="56.3235%" y="270.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (4 samples, 0.18%)</title><rect x="56.2528%" y="276" width="0.1793%" height="15" fill="rgb(220,13,41)" fg:x="1255" fg:w="4"/><text x="56.5028%" y="286.50"></text></g><g><title>eq (z3/z3.py:419) (4 samples, 0.18%)</title><rect x="56.2528%" y="292" width="0.1793%" height="15" fill="rgb(249,221,25)" fg:x="1255" fg:w="4"/><text x="56.5028%" y="302.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="56.4769%" y="276" width="0.1793%" height="15" fill="rgb(215,208,19)" fg:x="1260" fg:w="4"/><text x="56.7269%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="56.4769%" y="292" width="0.1793%" height="15" fill="rgb(236,175,2)" fg:x="1260" fg:w="4"/><text x="56.7269%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="56.5217%" y="308" width="0.1345%" height="15" fill="rgb(241,52,2)" fg:x="1261" fg:w="3"/><text x="56.7717%" y="318.50"></text></g><g><title>ToReal (z3/z3.py:3417) (5 samples, 0.22%)</title><rect x="56.7459%" y="292" width="0.2241%" height="15" fill="rgb(248,140,14)" fg:x="1266" fg:w="5"/><text x="56.9959%" y="302.50"></text></g><g><title>is_int (z3/z3.py:2455) (5 samples, 0.22%)</title><rect x="56.7459%" y="308" width="0.2241%" height="15" fill="rgb(253,22,42)" fg:x="1266" fg:w="5"/><text x="56.9959%" y="318.50"></text></g><g><title>cast (z3/z3.py:2397) (12 samples, 0.54%)</title><rect x="56.7459%" y="276" width="0.5379%" height="15" fill="rgb(234,61,47)" fg:x="1266" fg:w="12"/><text x="56.9959%" y="286.50"></text></g><g><title>ToReal (z3/z3.py:3419) (7 samples, 0.31%)</title><rect x="56.9700%" y="292" width="0.3138%" height="15" fill="rgb(208,226,15)" fg:x="1271" fg:w="7"/><text x="57.2200%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="57.1044%" y="308" width="0.1793%" height="15" fill="rgb(217,221,4)" fg:x="1274" fg:w="4"/><text x="57.3544%" y="318.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (34 samples, 1.52%)</title><rect x="55.8046%" y="244" width="1.5240%" height="15" fill="rgb(212,174,34)" fg:x="1245" fg:w="34"/><text x="56.0546%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (19 samples, 0.85%)</title><rect x="56.4769%" y="260" width="0.8516%" height="15" fill="rgb(253,83,4)" fg:x="1260" fg:w="19"/><text x="56.7269%" y="270.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (59 samples, 2.64%)</title><rect x="54.7288%" y="212" width="2.6446%" height="15" fill="rgb(250,195,49)" fg:x="1221" fg:w="59"/><text x="54.9788%" y="222.50">bd..</text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (58 samples, 2.60%)</title><rect x="54.7736%" y="228" width="2.5997%" height="15" fill="rgb(241,192,25)" fg:x="1222" fg:w="58"/><text x="55.0236%" y="238.50">__..</text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="57.4630%" y="244" width="0.1345%" height="15" fill="rgb(208,124,10)" fg:x="1282" fg:w="3"/><text x="57.7130%" y="254.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="57.4630%" y="260" width="0.1345%" height="15" fill="rgb(222,33,0)" fg:x="1282" fg:w="3"/><text x="57.7130%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="57.5975%" y="260" width="0.2241%" height="15" fill="rgb(234,209,28)" fg:x="1285" fg:w="5"/><text x="57.8475%" y="270.50"></text></g><g><title>cast (z3/z3.py:2406) (5 samples, 0.22%)</title><rect x="57.5975%" y="276" width="0.2241%" height="15" fill="rgb(224,11,23)" fg:x="1285" fg:w="5"/><text x="57.8475%" y="286.50"></text></g><g><title>IntVal (z3/z3.py:3243) (5 samples, 0.22%)</title><rect x="57.5975%" y="292" width="0.2241%" height="15" fill="rgb(232,99,1)" fg:x="1285" fg:w="5"/><text x="57.8475%" y="302.50"></text></g><g><title>If (z3/z3.py:1416) (10 samples, 0.45%)</title><rect x="57.5975%" y="244" width="0.4482%" height="15" fill="rgb(237,95,45)" fg:x="1285" fg:w="10"/><text x="57.8475%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (5 samples, 0.22%)</title><rect x="57.8216%" y="260" width="0.2241%" height="15" fill="rgb(208,109,11)" fg:x="1290" fg:w="5"/><text x="58.0716%" y="270.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="57.9113%" y="276" width="0.1345%" height="15" fill="rgb(216,190,48)" fg:x="1292" fg:w="3"/><text x="58.1613%" y="286.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="58.1802%" y="276" width="0.1345%" height="15" fill="rgb(251,171,36)" fg:x="1298" fg:w="3"/><text x="58.4302%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="58.1802%" y="292" width="0.1345%" height="15" fill="rgb(230,62,22)" fg:x="1298" fg:w="3"/><text x="58.4302%" y="302.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (4 samples, 0.18%)</title><rect x="58.1802%" y="260" width="0.1793%" height="15" fill="rgb(225,114,35)" fg:x="1298" fg:w="4"/><text x="58.4302%" y="270.50"></text></g><g><title>__ge__ (z3/z3.py:2711) (9 samples, 0.40%)</title><rect x="58.1354%" y="244" width="0.4034%" height="15" fill="rgb(215,118,42)" fg:x="1297" fg:w="9"/><text x="58.3854%" y="254.50"></text></g><g><title>__ge__ (z3/z3.py:2712) (4 samples, 0.18%)</title><rect x="58.5388%" y="244" width="0.1793%" height="15" fill="rgb(243,119,21)" fg:x="1306" fg:w="4"/><text x="58.7888%" y="254.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="58.5836%" y="260" width="0.1345%" height="15" fill="rgb(252,177,53)" fg:x="1307" fg:w="3"/><text x="58.8336%" y="270.50"></text></g><g><title>If (z3/z3.py:1414) (3 samples, 0.13%)</title><rect x="58.7181%" y="260" width="0.1345%" height="15" fill="rgb(237,209,29)" fg:x="1310" fg:w="3"/><text x="58.9681%" y="270.50"></text></g><g><title>BoolSort (z3/z3.py:1746) (3 samples, 0.13%)</title><rect x="58.7181%" y="276" width="0.1345%" height="15" fill="rgb(212,65,23)" fg:x="1310" fg:w="3"/><text x="58.9681%" y="286.50"></text></g><g><title>Z3_mk_int_sort (z3/z3core.py:1755) (3 samples, 0.13%)</title><rect x="58.9870%" y="340" width="0.1345%" height="15" fill="rgb(230,222,46)" fg:x="1316" fg:w="3"/><text x="59.2370%" y="350.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1223) (5 samples, 0.22%)</title><rect x="58.9870%" y="276" width="0.2241%" height="15" fill="rgb(215,135,32)" fg:x="1316" fg:w="5"/><text x="59.2370%" y="286.50"></text></g><g><title>_py2expr (z3/z3.py:3177) (5 samples, 0.22%)</title><rect x="58.9870%" y="292" width="0.2241%" height="15" fill="rgb(246,101,22)" fg:x="1316" fg:w="5"/><text x="59.2370%" y="302.50"></text></g><g><title>IntVal (z3/z3.py:3243) (5 samples, 0.22%)</title><rect x="58.9870%" y="308" width="0.2241%" height="15" fill="rgb(206,107,13)" fg:x="1316" fg:w="5"/><text x="59.2370%" y="318.50"></text></g><g><title>IntSort (z3/z3.py:3202) (5 samples, 0.22%)</title><rect x="58.9870%" y="324" width="0.2241%" height="15" fill="rgb(250,100,44)" fg:x="1316" fg:w="5"/><text x="59.2370%" y="334.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="59.2111%" y="276" width="0.1345%" height="15" fill="rgb(231,147,38)" fg:x="1321" fg:w="3"/><text x="59.4611%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="59.3456%" y="276" width="0.1345%" height="15" fill="rgb(229,8,40)" fg:x="1324" fg:w="3"/><text x="59.5956%" y="286.50"></text></g><g><title>If (z3/z3.py:1416) (15 samples, 0.67%)</title><rect x="58.8974%" y="260" width="0.6723%" height="15" fill="rgb(221,135,30)" fg:x="1314" fg:w="15"/><text x="59.1474%" y="270.50"></text></g><g><title>If (z3/z3.py:1419) (3 samples, 0.13%)</title><rect x="59.5697%" y="260" width="0.1345%" height="15" fill="rgb(249,193,18)" fg:x="1329" fg:w="3"/><text x="59.8197%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (5 samples, 0.22%)</title><rect x="59.9731%" y="276" width="0.2241%" height="15" fill="rgb(209,133,39)" fg:x="1338" fg:w="5"/><text x="60.2231%" y="286.50"></text></g><g><title>cast (z3/z3.py:2393) (3 samples, 0.13%)</title><rect x="60.0628%" y="292" width="0.1345%" height="15" fill="rgb(232,100,14)" fg:x="1340" fg:w="3"/><text x="60.3128%" y="302.50"></text></g><g><title>sort (z3/z3.py:2441) (3 samples, 0.13%)</title><rect x="60.0628%" y="308" width="0.1345%" height="15" fill="rgb(224,185,1)" fg:x="1340" fg:w="3"/><text x="60.3128%" y="318.50"></text></g><g><title>__init__ (z3/z3.py:348) (3 samples, 0.13%)</title><rect x="60.0628%" y="324" width="0.1345%" height="15" fill="rgb(223,139,8)" fg:x="1340" fg:w="3"/><text x="60.3128%" y="334.50"></text></g><g><title>__le__ (z3/z3.py:2672) (11 samples, 0.49%)</title><rect x="59.7938%" y="260" width="0.4931%" height="15" fill="rgb(232,213,38)" fg:x="1334" fg:w="11"/><text x="60.0438%" y="270.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (188 samples, 8.43%)</title><rect x="51.9498%" y="196" width="8.4267%" height="15" fill="rgb(207,94,22)" fg:x="1159" fg:w="188"/><text x="52.1998%" y="206.50">f (bisimulat..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (67 samples, 3.00%)</title><rect x="57.3734%" y="212" width="3.0031%" height="15" fill="rgb(219,183,54)" fg:x="1280" fg:w="67"/><text x="57.6234%" y="222.50">bdt..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (67 samples, 3.00%)</title><rect x="57.3734%" y="228" width="3.0031%" height="15" fill="rgb(216,185,54)" fg:x="1280" fg:w="67"/><text x="57.6234%" y="238.50">for..</text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (37 samples, 1.66%)</title><rect x="58.7181%" y="244" width="1.6584%" height="15" fill="rgb(254,217,39)" fg:x="1310" fg:w="37"/><text x="58.9681%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="60.9592%" y="228" width="0.1345%" height="15" fill="rgb(240,178,23)" fg:x="1360" fg:w="3"/><text x="61.2092%" y="238.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="60.9592%" y="244" width="0.1345%" height="15" fill="rgb(218,11,47)" fg:x="1360" fg:w="3"/><text x="61.2092%" y="254.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3070) (3 samples, 0.13%)</title><rect x="61.1385%" y="276" width="0.1345%" height="15" fill="rgb(218,51,51)" fg:x="1364" fg:w="3"/><text x="61.3885%" y="286.50"></text></g><g><title>__init__ (z3/z3.py:348) (5 samples, 0.22%)</title><rect x="61.2730%" y="276" width="0.2241%" height="15" fill="rgb(238,126,27)" fg:x="1367" fg:w="5"/><text x="61.5230%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (10 samples, 0.45%)</title><rect x="61.0937%" y="228" width="0.4482%" height="15" fill="rgb(249,202,22)" fg:x="1363" fg:w="10"/><text x="61.3437%" y="238.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (10 samples, 0.45%)</title><rect x="61.0937%" y="244" width="0.4482%" height="15" fill="rgb(254,195,49)" fg:x="1363" fg:w="10"/><text x="61.3437%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (10 samples, 0.45%)</title><rect x="61.0937%" y="260" width="0.4482%" height="15" fill="rgb(208,123,14)" fg:x="1363" fg:w="10"/><text x="61.3437%" y="270.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="61.6316%" y="244" width="0.1793%" height="15" fill="rgb(224,200,8)" fg:x="1375" fg:w="4"/><text x="61.8816%" y="254.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (8 samples, 0.36%)</title><rect x="61.9005%" y="244" width="0.3586%" height="15" fill="rgb(217,61,36)" fg:x="1381" fg:w="8"/><text x="62.1505%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (8 samples, 0.36%)</title><rect x="61.9005%" y="260" width="0.3586%" height="15" fill="rgb(206,35,45)" fg:x="1381" fg:w="8"/><text x="62.1505%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="62.0798%" y="276" width="0.1793%" height="15" fill="rgb(217,65,33)" fg:x="1385" fg:w="4"/><text x="62.3298%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (21 samples, 0.94%)</title><rect x="61.5419%" y="228" width="0.9413%" height="15" fill="rgb(222,158,48)" fg:x="1373" fg:w="21"/><text x="61.7919%" y="238.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (5 samples, 0.22%)</title><rect x="62.2591%" y="244" width="0.2241%" height="15" fill="rgb(254,2,54)" fg:x="1389" fg:w="5"/><text x="62.5091%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (5 samples, 0.22%)</title><rect x="62.2591%" y="260" width="0.2241%" height="15" fill="rgb(250,143,38)" fg:x="1389" fg:w="5"/><text x="62.5091%" y="270.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="62.4832%" y="244" width="0.1793%" height="15" fill="rgb(248,25,0)" fg:x="1394" fg:w="4"/><text x="62.7332%" y="254.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="62.5280%" y="260" width="0.1345%" height="15" fill="rgb(206,152,27)" fg:x="1395" fg:w="3"/><text x="62.7780%" y="270.50"></text></g><g><title>Z3_inc_ref (z3/z3core.py:1622) (4 samples, 0.18%)</title><rect x="62.7970%" y="292" width="0.1793%" height="15" fill="rgb(240,77,30)" fg:x="1401" fg:w="4"/><text x="63.0470%" y="302.50"></text></g><g><title>cast (z3/z3.py:2393) (9 samples, 0.40%)</title><rect x="62.7073%" y="244" width="0.4034%" height="15" fill="rgb(231,5,3)" fg:x="1399" fg:w="9"/><text x="62.9573%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (9 samples, 0.40%)</title><rect x="62.7073%" y="260" width="0.4034%" height="15" fill="rgb(207,226,32)" fg:x="1399" fg:w="9"/><text x="62.9573%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (8 samples, 0.36%)</title><rect x="62.7521%" y="276" width="0.3586%" height="15" fill="rgb(222,207,47)" fg:x="1400" fg:w="8"/><text x="63.0021%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (22 samples, 0.99%)</title><rect x="62.4832%" y="228" width="0.9861%" height="15" fill="rgb(229,115,45)" fg:x="1394" fg:w="22"/><text x="62.7332%" y="238.50"></text></g><g><title>cast (z3/z3.py:2394) (8 samples, 0.36%)</title><rect x="63.1107%" y="244" width="0.3586%" height="15" fill="rgb(224,191,6)" fg:x="1408" fg:w="8"/><text x="63.3607%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="63.3348%" y="260" width="0.1345%" height="15" fill="rgb(230,227,24)" fg:x="1413" fg:w="3"/><text x="63.5848%" y="270.50"></text></g><g><title>cast (z3/z3.py:2393) (4 samples, 0.18%)</title><rect x="63.6038%" y="244" width="0.1793%" height="15" fill="rgb(228,80,19)" fg:x="1419" fg:w="4"/><text x="63.8538%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (4 samples, 0.18%)</title><rect x="63.6038%" y="260" width="0.1793%" height="15" fill="rgb(247,229,0)" fg:x="1419" fg:w="4"/><text x="63.8538%" y="270.50"></text></g><g><title>__add__ (z3/z3.py:2478) (66 samples, 2.96%)</title><rect x="60.8696%" y="212" width="2.9583%" height="15" fill="rgb(237,194,15)" fg:x="1358" fg:w="66"/><text x="61.1196%" y="222.50">__a..</text></g><g><title>_coerce_exprs (z3/z3.py:1237) (8 samples, 0.36%)</title><rect x="63.4693%" y="228" width="0.3586%" height="15" fill="rgb(219,203,20)" fg:x="1416" fg:w="8"/><text x="63.7193%" y="238.50"></text></g><g><title>__add__ (z3/z3.py:2479) (7 samples, 0.31%)</title><rect x="63.8279%" y="212" width="0.3138%" height="15" fill="rgb(234,128,8)" fg:x="1424" fg:w="7"/><text x="64.0779%" y="222.50"></text></g><g><title>_mk_bin (z3/z3.py:1452) (3 samples, 0.13%)</title><rect x="64.0072%" y="228" width="0.1345%" height="15" fill="rgb(248,202,8)" fg:x="1428" fg:w="3"/><text x="64.2572%" y="238.50"></text></g><g><title>__del__ (z3/z3.py:351) (3 samples, 0.13%)</title><rect x="64.1416%" y="212" width="0.1345%" height="15" fill="rgb(206,104,37)" fg:x="1431" fg:w="3"/><text x="64.3916%" y="222.50"></text></g><g><title>Z3_dec_ref (z3/z3core.py:1626) (3 samples, 0.13%)</title><rect x="64.3658%" y="228" width="0.1345%" height="15" fill="rgb(223,8,27)" fg:x="1436" fg:w="3"/><text x="64.6158%" y="238.50"></text></g><g><title>__del__ (z3/z3.py:352) (6 samples, 0.27%)</title><rect x="64.2761%" y="212" width="0.2689%" height="15" fill="rgb(216,217,28)" fg:x="1434" fg:w="6"/><text x="64.5261%" y="222.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="64.5450%" y="228" width="0.1793%" height="15" fill="rgb(249,199,1)" fg:x="1440" fg:w="4"/><text x="64.7950%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1234) (7 samples, 0.31%)</title><rect x="64.7692%" y="228" width="0.3138%" height="15" fill="rgb(240,85,17)" fg:x="1445" fg:w="7"/><text x="65.0192%" y="238.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (7 samples, 0.31%)</title><rect x="64.7692%" y="244" width="0.3138%" height="15" fill="rgb(206,108,45)" fg:x="1445" fg:w="7"/><text x="65.0192%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (7 samples, 0.31%)</title><rect x="64.7692%" y="260" width="0.3138%" height="15" fill="rgb(245,210,41)" fg:x="1445" fg:w="7"/><text x="65.0192%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (4 samples, 0.18%)</title><rect x="64.9036%" y="276" width="0.1793%" height="15" fill="rgb(206,13,37)" fg:x="1448" fg:w="4"/><text x="65.1536%" y="286.50"></text></g><g><title>__del__ (z3/z3.py:352) (4 samples, 0.18%)</title><rect x="65.0829%" y="244" width="0.1793%" height="15" fill="rgb(250,61,18)" fg:x="1452" fg:w="4"/><text x="65.3329%" y="254.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3070) (3 samples, 0.13%)</title><rect x="65.3519%" y="276" width="0.1345%" height="15" fill="rgb(235,172,48)" fg:x="1458" fg:w="3"/><text x="65.6019%" y="286.50"></text></g><g><title>Z3_inc_ref (z3/z3core.py:1623) (4 samples, 0.18%)</title><rect x="65.6208%" y="292" width="0.1793%" height="15" fill="rgb(249,201,17)" fg:x="1464" fg:w="4"/><text x="65.8708%" y="302.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (13 samples, 0.58%)</title><rect x="65.3070%" y="244" width="0.5827%" height="15" fill="rgb(219,208,6)" fg:x="1457" fg:w="13"/><text x="65.5570%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (13 samples, 0.58%)</title><rect x="65.3070%" y="260" width="0.5827%" height="15" fill="rgb(248,31,23)" fg:x="1457" fg:w="13"/><text x="65.5570%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (9 samples, 0.40%)</title><rect x="65.4863%" y="276" width="0.4034%" height="15" fill="rgb(245,15,42)" fg:x="1461" fg:w="9"/><text x="65.7363%" y="286.50"></text></g><g><title>Z3_is_eq_ast (z3/z3core.py:3054) (4 samples, 0.18%)</title><rect x="65.9794%" y="276" width="0.1793%" height="15" fill="rgb(222,217,39)" fg:x="1472" fg:w="4"/><text x="66.2294%" y="286.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1206) (12 samples, 0.54%)</title><rect x="65.8897%" y="244" width="0.5379%" height="15" fill="rgb(210,219,27)" fg:x="1470" fg:w="12"/><text x="66.1397%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (10 samples, 0.45%)</title><rect x="65.9794%" y="260" width="0.4482%" height="15" fill="rgb(252,166,36)" fg:x="1472" fg:w="10"/><text x="66.2294%" y="270.50"></text></g><g><title>as_ast (z3/z3.py:563) (6 samples, 0.27%)</title><rect x="66.1587%" y="276" width="0.2689%" height="15" fill="rgb(245,132,34)" fg:x="1476" fg:w="6"/><text x="66.4087%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (36 samples, 1.61%)</title><rect x="65.0829%" y="228" width="1.6136%" height="15" fill="rgb(236,54,3)" fg:x="1452" fg:w="36"/><text x="65.3329%" y="238.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1210) (6 samples, 0.27%)</title><rect x="66.4276%" y="244" width="0.2689%" height="15" fill="rgb(241,173,43)" fg:x="1482" fg:w="6"/><text x="66.6776%" y="254.50"></text></g><g><title>subsort (z3/z3.py:2374) (5 samples, 0.22%)</title><rect x="66.4724%" y="260" width="0.2241%" height="15" fill="rgb(215,190,9)" fg:x="1483" fg:w="5"/><text x="66.7224%" y="270.50"></text></g><g><title>is_real (z3/z3.py:2353) (3 samples, 0.13%)</title><rect x="66.5621%" y="276" width="0.1345%" height="15" fill="rgb(242,101,16)" fg:x="1485" fg:w="3"/><text x="66.8121%" y="286.50"></text></g><g><title>kind (z3/z3.py:583) (3 samples, 0.13%)</title><rect x="66.5621%" y="292" width="0.1345%" height="15" fill="rgb(223,190,21)" fg:x="1485" fg:w="3"/><text x="66.8121%" y="302.50"></text></g><g><title>_sort_kind (z3/z3.py:556) (3 samples, 0.13%)</title><rect x="66.5621%" y="308" width="0.1345%" height="15" fill="rgb(215,228,25)" fg:x="1485" fg:w="3"/><text x="66.8121%" y="318.50"></text></g><g><title>__del__ (z3/z3.py:352) (5 samples, 0.22%)</title><rect x="66.7414%" y="244" width="0.2241%" height="15" fill="rgb(225,36,22)" fg:x="1489" fg:w="5"/><text x="66.9914%" y="254.50"></text></g><g><title>as_ast (z3/z3.py:563) (4 samples, 0.18%)</title><rect x="66.7862%" y="260" width="0.1793%" height="15" fill="rgb(251,106,46)" fg:x="1490" fg:w="4"/><text x="67.0362%" y="270.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (4 samples, 0.18%)</title><rect x="66.7862%" y="276" width="0.1793%" height="15" fill="rgb(208,90,1)" fg:x="1490" fg:w="4"/><text x="67.0362%" y="286.50"></text></g><g><title>Check (z3/z3core.py:1552) (4 samples, 0.18%)</title><rect x="66.7862%" y="292" width="0.1793%" height="15" fill="rgb(243,10,4)" fg:x="1490" fg:w="4"/><text x="67.0362%" y="302.50"></text></g><g><title>Z3_get_sort (z3/z3core.py:3070) (3 samples, 0.13%)</title><rect x="67.1896%" y="276" width="0.1345%" height="15" fill="rgb(212,137,27)" fg:x="1499" fg:w="3"/><text x="67.4396%" y="286.50"></text></g><g><title>Check (z3/z3core.py:1552) (3 samples, 0.13%)</title><rect x="67.1896%" y="292" width="0.1345%" height="15" fill="rgb(231,220,49)" fg:x="1499" fg:w="3"/><text x="67.4396%" y="302.50"></text></g><g><title>Z3_inc_ref (z3/z3core.py:1623) (3 samples, 0.13%)</title><rect x="67.4137%" y="292" width="0.1345%" height="15" fill="rgb(237,96,20)" fg:x="1504" fg:w="3"/><text x="67.6637%" y="302.50"></text></g><g><title>cast (z3/z3.py:2393) (14 samples, 0.63%)</title><rect x="66.9655%" y="244" width="0.6275%" height="15" fill="rgb(239,229,30)" fg:x="1494" fg:w="14"/><text x="67.2155%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (14 samples, 0.63%)</title><rect x="66.9655%" y="260" width="0.6275%" height="15" fill="rgb(219,65,33)" fg:x="1494" fg:w="14"/><text x="67.2155%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (6 samples, 0.27%)</title><rect x="67.3241%" y="276" width="0.2689%" height="15" fill="rgb(243,134,7)" fg:x="1502" fg:w="6"/><text x="67.5741%" y="286.50"></text></g><g><title>Z3_is_eq_ast (z3/z3core.py:3054) (3 samples, 0.13%)</title><rect x="67.6827%" y="276" width="0.1345%" height="15" fill="rgb(216,177,54)" fg:x="1510" fg:w="3"/><text x="67.9327%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (27 samples, 1.21%)</title><rect x="66.6965%" y="228" width="1.2102%" height="15" fill="rgb(211,160,20)" fg:x="1488" fg:w="27"/><text x="66.9465%" y="238.50"></text></g><g><title>cast (z3/z3.py:2394) (7 samples, 0.31%)</title><rect x="67.5930%" y="244" width="0.3138%" height="15" fill="rgb(239,85,39)" fg:x="1508" fg:w="7"/><text x="67.8430%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (5 samples, 0.22%)</title><rect x="67.6827%" y="260" width="0.2241%" height="15" fill="rgb(232,125,22)" fg:x="1510" fg:w="5"/><text x="67.9327%" y="270.50"></text></g><g><title>__del__ (z3/z3.py:352) (6 samples, 0.27%)</title><rect x="67.9068%" y="244" width="0.2689%" height="15" fill="rgb(244,57,34)" fg:x="1515" fg:w="6"/><text x="68.1568%" y="254.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="67.9516%" y="260" width="0.2241%" height="15" fill="rgb(214,203,32)" fg:x="1516" fg:w="5"/><text x="68.2016%" y="270.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (4 samples, 0.18%)</title><rect x="67.9964%" y="276" width="0.1793%" height="15" fill="rgb(207,58,43)" fg:x="1517" fg:w="4"/><text x="68.2464%" y="286.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (4 samples, 0.18%)</title><rect x="68.4895%" y="308" width="0.1793%" height="15" fill="rgb(215,193,15)" fg:x="1528" fg:w="4"/><text x="68.7395%" y="318.50"></text></g><g><title>cast (z3/z3.py:2393) (12 samples, 0.54%)</title><rect x="68.1757%" y="244" width="0.5379%" height="15" fill="rgb(232,15,44)" fg:x="1521" fg:w="12"/><text x="68.4257%" y="254.50"></text></g><g><title>sort (z3/z3.py:2441) (12 samples, 0.54%)</title><rect x="68.1757%" y="260" width="0.5379%" height="15" fill="rgb(212,3,48)" fg:x="1521" fg:w="12"/><text x="68.4257%" y="270.50"></text></g><g><title>__init__ (z3/z3.py:348) (9 samples, 0.40%)</title><rect x="68.3102%" y="276" width="0.4034%" height="15" fill="rgb(218,128,7)" fg:x="1524" fg:w="9"/><text x="68.5602%" y="286.50"></text></g><g><title>as_ast (z3/z3.py:563) (6 samples, 0.27%)</title><rect x="68.4446%" y="292" width="0.2689%" height="15" fill="rgb(226,216,39)" fg:x="1527" fg:w="6"/><text x="68.6946%" y="302.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2825) (3 samples, 0.13%)</title><rect x="68.9377%" y="292" width="0.1345%" height="15" fill="rgb(243,47,51)" fg:x="1538" fg:w="3"/><text x="69.1877%" y="302.50"></text></g><g><title>cast (z3/z3.py:2394) (9 samples, 0.40%)</title><rect x="68.7136%" y="244" width="0.4034%" height="15" fill="rgb(241,183,40)" fg:x="1533" fg:w="9"/><text x="68.9636%" y="254.50"></text></g><g><title>eq (z3/z3.py:419) (7 samples, 0.31%)</title><rect x="68.8032%" y="260" width="0.3138%" height="15" fill="rgb(231,217,32)" fg:x="1535" fg:w="7"/><text x="69.0532%" y="270.50"></text></g><g><title>as_ast (z3/z3.py:563) (5 samples, 0.22%)</title><rect x="68.8929%" y="276" width="0.2241%" height="15" fill="rgb(229,61,38)" fg:x="1537" fg:w="5"/><text x="69.1429%" y="286.50"></text></g><g><title>cast (z3/z3.py:2396) (4 samples, 0.18%)</title><rect x="69.1170%" y="244" width="0.1793%" height="15" fill="rgb(225,210,5)" fg:x="1542" fg:w="4"/><text x="69.3670%" y="254.50"></text></g><g><title>__del__ (z3/z3.py:352) (5 samples, 0.22%)</title><rect x="69.4756%" y="292" width="0.2241%" height="15" fill="rgb(231,79,45)" fg:x="1550" fg:w="5"/><text x="69.7256%" y="302.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="69.5652%" y="308" width="0.1345%" height="15" fill="rgb(224,100,7)" fg:x="1552" fg:w="3"/><text x="69.8152%" y="318.50"></text></g><g><title>Z3_sort_to_ast (z3/z3core.py:2824) (3 samples, 0.13%)</title><rect x="69.5652%" y="324" width="0.1345%" height="15" fill="rgb(241,198,18)" fg:x="1552" fg:w="3"/><text x="69.8152%" y="334.50"></text></g><g><title>is_int (z3/z3.py:2367) (3 samples, 0.13%)</title><rect x="69.6997%" y="292" width="0.1345%" height="15" fill="rgb(252,97,53)" fg:x="1555" fg:w="3"/><text x="69.9497%" y="302.50"></text></g><g><title>kind (z3/z3.py:583) (3 samples, 0.13%)</title><rect x="69.6997%" y="308" width="0.1345%" height="15" fill="rgb(220,88,7)" fg:x="1555" fg:w="3"/><text x="69.9497%" y="318.50"></text></g><g><title>_sort_kind (z3/z3.py:556) (3 samples, 0.13%)</title><rect x="69.6997%" y="324" width="0.1345%" height="15" fill="rgb(213,176,14)" fg:x="1555" fg:w="3"/><text x="69.9497%" y="334.50"></text></g><g><title>ToReal (z3/z3.py:3417) (20 samples, 0.90%)</title><rect x="69.2963%" y="260" width="0.8965%" height="15" fill="rgb(246,73,7)" fg:x="1546" fg:w="20"/><text x="69.5463%" y="270.50"></text></g><g><title>is_int (z3/z3.py:2455) (16 samples, 0.72%)</title><rect x="69.4756%" y="276" width="0.7172%" height="15" fill="rgb(245,64,36)" fg:x="1550" fg:w="16"/><text x="69.7256%" y="286.50"></text></g><g><title>sort (z3/z3.py:2441) (8 samples, 0.36%)</title><rect x="69.8342%" y="292" width="0.3586%" height="15" fill="rgb(245,80,10)" fg:x="1558" fg:w="8"/><text x="70.0842%" y="302.50"></text></g><g><title>__init__ (z3/z3.py:348) (7 samples, 0.31%)</title><rect x="69.8790%" y="308" width="0.3138%" height="15" fill="rgb(232,107,50)" fg:x="1559" fg:w="7"/><text x="70.1290%" y="318.50"></text></g><g><title>as_ast (z3/z3.py:563) (3 samples, 0.13%)</title><rect x="70.0583%" y="324" width="0.1345%" height="15" fill="rgb(253,3,0)" fg:x="1563" fg:w="3"/><text x="70.3083%" y="334.50"></text></g><g><title>cast (z3/z3.py:2397) (24 samples, 1.08%)</title><rect x="69.2963%" y="244" width="1.0758%" height="15" fill="rgb(212,99,53)" fg:x="1546" fg:w="24"/><text x="69.5463%" y="254.50"></text></g><g><title>ToReal (z3/z3.py:3419) (4 samples, 0.18%)</title><rect x="70.1927%" y="260" width="0.1793%" height="15" fill="rgb(249,111,54)" fg:x="1566" fg:w="4"/><text x="70.4427%" y="270.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (131 samples, 5.87%)</title><rect x="64.5450%" y="212" width="5.8718%" height="15" fill="rgb(249,55,30)" fg:x="1440" fg:w="131"/><text x="64.7950%" y="222.50">__mul__..</text></g><g><title>_coerce_exprs (z3/z3.py:1237) (56 samples, 2.51%)</title><rect x="67.9068%" y="228" width="2.5101%" height="15" fill="rgb(237,47,42)" fg:x="1515" fg:w="56"/><text x="68.1568%" y="238.50">_c..</text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:34) (455 samples, 20.39%)</title><rect x="50.2465%" y="164" width="20.3944%" height="15" fill="rgb(211,20,18)" fg:x="1121" fg:w="455"/><text x="50.4965%" y="174.50">cond_implicit_partiton (bisimula..</text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/conditions.py:35) (455 samples, 20.39%)</title><rect x="50.2465%" y="180" width="20.3944%" height="15" fill="rgb(231,203,46)" fg:x="1121" fg:w="455"/><text x="50.4965%" y="190.50">&lt;listcomp&gt; (bisimulation_learnin..</text></g><g><title>h_brn_impl (bisimulation_learning/shared/template.py:126) (229 samples, 10.26%)</title><rect x="60.3765%" y="196" width="10.2645%" height="15" fill="rgb(237,142,3)" fg:x="1347" fg:w="229"/><text x="60.6265%" y="206.50">h_brn_impl (bis..</text></g><g><title>__mul__ (z3/z3.py:2504) (5 samples, 0.22%)</title><rect x="70.4169%" y="212" width="0.2241%" height="15" fill="rgb(241,107,1)" fg:x="1571" fg:w="5"/><text x="70.6669%" y="222.50"></text></g><g><title>And (z3/z3.py:1917) (5 samples, 0.22%)</title><rect x="70.6858%" y="196" width="0.2241%" height="15" fill="rgb(229,83,13)" fg:x="1577" fg:w="5"/><text x="70.9358%" y="206.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1257) (5 samples, 0.22%)</title><rect x="70.6858%" y="212" width="0.2241%" height="15" fill="rgb(241,91,40)" fg:x="1577" fg:w="5"/><text x="70.9358%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (z3/z3.py:1257) (5 samples, 0.22%)</title><rect x="70.6858%" y="228" width="0.2241%" height="15" fill="rgb(225,3,45)" fg:x="1577" fg:w="5"/><text x="70.9358%" y="238.50"></text></g><g><title>cast (z3/z3.py:1554) (5 samples, 0.22%)</title><rect x="70.6858%" y="244" width="0.2241%" height="15" fill="rgb(244,223,14)" fg:x="1577" fg:w="5"/><text x="70.9358%" y="254.50"></text></g><g><title>sort (z3/z3.py:1572) (3 samples, 0.13%)</title><rect x="70.7754%" y="260" width="0.1345%" height="15" fill="rgb(224,124,37)" fg:x="1579" fg:w="3"/><text x="71.0254%" y="270.50"></text></g><g><title>__le__ (z3/z3.py:2672) (7 samples, 0.31%)</title><rect x="70.9996%" y="196" width="0.3138%" height="15" fill="rgb(251,171,30)" fg:x="1584" fg:w="7"/><text x="71.2496%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="71.1788%" y="212" width="0.1345%" height="15" fill="rgb(236,46,54)" fg:x="1588" fg:w="3"/><text x="71.4288%" y="222.50"></text></g><g><title>cast (z3/z3.py:2406) (3 samples, 0.13%)</title><rect x="71.1788%" y="228" width="0.1345%" height="15" fill="rgb(245,213,5)" fg:x="1588" fg:w="3"/><text x="71.4288%" y="238.50"></text></g><g><title>IntVal (z3/z3.py:3243) (3 samples, 0.13%)</title><rect x="71.1788%" y="244" width="0.1345%" height="15" fill="rgb(230,144,27)" fg:x="1588" fg:w="3"/><text x="71.4288%" y="254.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:106) (15 samples, 0.67%)</title><rect x="70.6858%" y="180" width="0.6723%" height="15" fill="rgb(220,86,6)" fg:x="1577" fg:w="15"/><text x="70.9358%" y="190.50"></text></g><g><title>If (z3/z3.py:1416) (8 samples, 0.36%)</title><rect x="71.4926%" y="196" width="0.3586%" height="15" fill="rgb(240,20,13)" fg:x="1595" fg:w="8"/><text x="71.7426%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="71.6719%" y="212" width="0.1793%" height="15" fill="rgb(217,89,34)" fg:x="1599" fg:w="4"/><text x="71.9219%" y="222.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:109) (16 samples, 0.72%)</title><rect x="71.3581%" y="180" width="0.7172%" height="15" fill="rgb(229,13,5)" fg:x="1592" fg:w="16"/><text x="71.6081%" y="190.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="71.9408%" y="196" width="0.1345%" height="15" fill="rgb(244,67,35)" fg:x="1605" fg:w="3"/><text x="72.1908%" y="206.50"></text></g><g><title>Z3_mk_numeral (z3/z3core.py:2360) (3 samples, 0.13%)</title><rect x="72.0753%" y="260" width="0.1345%" height="15" fill="rgb(221,40,2)" fg:x="1608" fg:w="3"/><text x="72.3253%" y="270.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:111) (5 samples, 0.22%)</title><rect x="72.0753%" y="180" width="0.2241%" height="15" fill="rgb(237,157,21)" fg:x="1608" fg:w="5"/><text x="72.3253%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (5 samples, 0.22%)</title><rect x="72.0753%" y="196" width="0.2241%" height="15" fill="rgb(222,94,11)" fg:x="1608" fg:w="5"/><text x="72.3253%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (5 samples, 0.22%)</title><rect x="72.0753%" y="212" width="0.2241%" height="15" fill="rgb(249,113,6)" fg:x="1608" fg:w="5"/><text x="72.3253%" y="222.50"></text></g><g><title>cast (z3/z3.py:2406) (5 samples, 0.22%)</title><rect x="72.0753%" y="228" width="0.2241%" height="15" fill="rgb(238,137,36)" fg:x="1608" fg:w="5"/><text x="72.3253%" y="238.50"></text></g><g><title>IntVal (z3/z3.py:3243) (5 samples, 0.22%)</title><rect x="72.0753%" y="244" width="0.2241%" height="15" fill="rgb(210,102,26)" fg:x="1608" fg:w="5"/><text x="72.3253%" y="254.50"></text></g><g><title>If (z3/z3.py:1416) (4 samples, 0.18%)</title><rect x="72.4339%" y="196" width="0.1793%" height="15" fill="rgb(218,30,30)" fg:x="1616" fg:w="4"/><text x="72.6839%" y="206.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:116) (9 samples, 0.40%)</title><rect x="72.2994%" y="180" width="0.4034%" height="15" fill="rgb(214,67,26)" fg:x="1613" fg:w="9"/><text x="72.5494%" y="190.50"></text></g><g><title>If (z3/z3.py:1415) (3 samples, 0.13%)</title><rect x="72.7476%" y="196" width="0.1345%" height="15" fill="rgb(251,9,53)" fg:x="1623" fg:w="3"/><text x="72.9976%" y="206.50"></text></g><g><title>cast (z3/z3.py:1554) (3 samples, 0.13%)</title><rect x="72.7476%" y="212" width="0.1345%" height="15" fill="rgb(228,204,25)" fg:x="1623" fg:w="3"/><text x="72.9976%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (3 samples, 0.13%)</title><rect x="72.9718%" y="212" width="0.1345%" height="15" fill="rgb(207,153,8)" fg:x="1628" fg:w="3"/><text x="73.2218%" y="222.50"></text></g><g><title>If (z3/z3.py:1416) (8 samples, 0.36%)</title><rect x="72.8821%" y="196" width="0.3586%" height="15" fill="rgb(242,9,16)" fg:x="1626" fg:w="8"/><text x="73.1321%" y="206.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="73.1062%" y="212" width="0.1345%" height="15" fill="rgb(217,211,10)" fg:x="1631" fg:w="3"/><text x="73.3562%" y="222.50"></text></g><g><title>cast (z3/z3.py:2394) (3 samples, 0.13%)</title><rect x="73.1062%" y="228" width="0.1345%" height="15" fill="rgb(219,228,52)" fg:x="1631" fg:w="3"/><text x="73.3562%" y="238.50"></text></g><g><title>eq (z3/z3.py:419) (3 samples, 0.13%)</title><rect x="73.1062%" y="244" width="0.1345%" height="15" fill="rgb(231,92,29)" fg:x="1631" fg:w="3"/><text x="73.3562%" y="254.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:36) (67 samples, 3.00%)</title><rect x="70.6410%" y="164" width="3.0031%" height="15" fill="rgb(232,8,23)" fg:x="1576" fg:w="67"/><text x="70.8910%" y="174.50">con..</text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:118) (21 samples, 0.94%)</title><rect x="72.7028%" y="180" width="0.9413%" height="15" fill="rgb(216,211,34)" fg:x="1622" fg:w="21"/><text x="72.9528%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (4 samples, 0.18%)</title><rect x="73.4648%" y="196" width="0.1793%" height="15" fill="rgb(236,151,0)" fg:x="1639" fg:w="4"/><text x="73.7148%" y="206.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:37) (6 samples, 0.27%)</title><rect x="73.6441%" y="164" width="0.2689%" height="15" fill="rgb(209,168,3)" fg:x="1643" fg:w="6"/><text x="73.8941%" y="174.50"></text></g><g><title>_coerce_expr_merge (z3/z3.py:1203) (3 samples, 0.13%)</title><rect x="74.0475%" y="228" width="0.1345%" height="15" fill="rgb(208,129,28)" fg:x="1652" fg:w="3"/><text x="74.2975%" y="238.50"></text></g><g><title>sort (z3/z3.py:1572) (3 samples, 0.13%)</title><rect x="74.0475%" y="244" width="0.1345%" height="15" fill="rgb(229,78,22)" fg:x="1652" fg:w="3"/><text x="74.2975%" y="254.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1256) (6 samples, 0.27%)</title><rect x="73.9579%" y="196" width="0.2689%" height="15" fill="rgb(228,187,13)" fg:x="1650" fg:w="6"/><text x="74.2079%" y="206.50"></text></g><g><title>_reduce (z3/z3.py:1244) (6 samples, 0.27%)</title><rect x="73.9579%" y="212" width="0.2689%" height="15" fill="rgb(240,119,24)" fg:x="1650" fg:w="6"/><text x="74.2079%" y="222.50"></text></g><g><title>Or (z3/z3.py:1950) (11 samples, 0.49%)</title><rect x="73.9579%" y="180" width="0.4931%" height="15" fill="rgb(209,194,42)" fg:x="1650" fg:w="11"/><text x="74.2079%" y="190.50"></text></g><g><title>_coerce_expr_list (z3/z3.py:1257) (5 samples, 0.22%)</title><rect x="74.2268%" y="196" width="0.2241%" height="15" fill="rgb(247,200,46)" fg:x="1656" fg:w="5"/><text x="74.4768%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (z3/z3.py:1257) (5 samples, 0.22%)</title><rect x="74.2268%" y="212" width="0.2241%" height="15" fill="rgb(218,76,16)" fg:x="1656" fg:w="5"/><text x="74.4768%" y="222.50"></text></g><g><title>cast (z3/z3.py:1554) (5 samples, 0.22%)</title><rect x="74.2268%" y="228" width="0.2241%" height="15" fill="rgb(225,21,48)" fg:x="1656" fg:w="5"/><text x="74.4768%" y="238.50"></text></g><g><title>guess (bisimulation_learning/fintely_branching/cegis_solver.py:59) (1,599 samples, 71.67%)</title><rect x="2.8238%" y="132" width="71.6719%" height="15" fill="rgb(239,223,50)" fg:x="63" fg:w="1599"/><text x="3.0738%" y="142.50">guess (bisimulation_learning/fintely_branching/cegis_solver.py:59)</text></g><g><title>encode_classification_branching (bisimulation_learning/fintely_branching/conditions.py:95) (1,598 samples, 71.63%)</title><rect x="2.8687%" y="148" width="71.6271%" height="15" fill="rgb(244,45,21)" fg:x="64" fg:w="1598"/><text x="3.1187%" y="158.50">encode_classification_branching (bisimulation_learning/fintely_branching/conditions.py:95)</text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:39) (13 samples, 0.58%)</title><rect x="73.9130%" y="164" width="0.5827%" height="15" fill="rgb(232,33,43)" fg:x="1649" fg:w="13"/><text x="74.1630%" y="174.50"></text></g><g><title>guess (bisimulation_learning/fintely_branching/cegis_solver.py:70) (4 samples, 0.18%)</title><rect x="74.4957%" y="132" width="0.1793%" height="15" fill="rgb(209,8,3)" fg:x="1662" fg:w="4"/><text x="74.7457%" y="142.50"></text></g><g><title>__init__ (z3/z3.py:6955) (4 samples, 0.18%)</title><rect x="74.4957%" y="148" width="0.1793%" height="15" fill="rgb(214,25,53)" fg:x="1662" fg:w="4"/><text x="74.7457%" y="158.50"></text></g><g><title>Z3_mk_solver (z3/z3core.py:4049) (4 samples, 0.18%)</title><rect x="74.4957%" y="164" width="0.1793%" height="15" fill="rgb(254,186,54)" fg:x="1662" fg:w="4"/><text x="74.7457%" y="174.50"></text></g><g><title>add (z3/z3.py:7090) (67 samples, 3.00%)</title><rect x="74.6750%" y="148" width="3.0031%" height="15" fill="rgb(208,174,49)" fg:x="1666" fg:w="67"/><text x="74.9250%" y="158.50">add..</text></g><g><title>assert_exprs (z3/z3.py:7079) (67 samples, 3.00%)</title><rect x="74.6750%" y="164" width="3.0031%" height="15" fill="rgb(233,191,51)" fg:x="1666" fg:w="67"/><text x="74.9250%" y="174.50">ass..</text></g><g><title>Z3_solver_assert (z3/z3core.py:4125) (67 samples, 3.00%)</title><rect x="74.6750%" y="180" width="3.0031%" height="15" fill="rgb(222,134,10)" fg:x="1666" fg:w="67"/><text x="74.9250%" y="190.50">Z3_..</text></g><g><title>guess (bisimulation_learning/fintely_branching/cegis_solver.py:73) (80 samples, 3.59%)</title><rect x="74.6750%" y="132" width="3.5858%" height="15" fill="rgb(230,226,20)" fg:x="1666" fg:w="80"/><text x="74.9250%" y="142.50">gues..</text></g><g><title>simplify (z3/z3.py:8909) (12 samples, 0.54%)</title><rect x="77.7230%" y="148" width="0.5379%" height="15" fill="rgb(251,111,25)" fg:x="1734" fg:w="12"/><text x="77.9730%" y="158.50"></text></g><g><title>Z3_simplify (z3/z3core.py:3289) (12 samples, 0.54%)</title><rect x="77.7230%" y="164" width="0.5379%" height="15" fill="rgb(224,40,46)" fg:x="1734" fg:w="12"/><text x="77.9730%" y="174.50"></text></g><g><title>guess (bisimulation_learning/fintely_branching/cegis_solver.py:75) (103 samples, 4.62%)</title><rect x="78.2609%" y="132" width="4.6168%" height="15" fill="rgb(236,108,47)" fg:x="1746" fg:w="103"/><text x="78.5109%" y="142.50">guess..</text></g><g><title>check (z3/z3.py:7174) (103 samples, 4.62%)</title><rect x="78.2609%" y="148" width="4.6168%" height="15" fill="rgb(234,93,0)" fg:x="1746" fg:w="103"/><text x="78.5109%" y="158.50">check..</text></g><g><title>Z3_solver_check_assumptions (z3/z3core.py:4235) (103 samples, 4.62%)</title><rect x="78.2609%" y="164" width="4.6168%" height="15" fill="rgb(224,213,32)" fg:x="1746" fg:w="103"/><text x="78.5109%" y="174.50">Z3_so..</text></g><g><title>guess (bisimulation_learning/fintely_branching/cegis_solver.py:78) (3 samples, 0.13%)</title><rect x="82.9225%" y="132" width="0.1345%" height="15" fill="rgb(251,11,48)" fg:x="1850" fg:w="3"/><text x="83.1725%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/cegis_solver.py:78) (3 samples, 0.13%)</title><rect x="82.9225%" y="148" width="0.1345%" height="15" fill="rgb(236,173,5)" fg:x="1850" fg:w="3"/><text x="83.1725%" y="158.50"></text></g><g><title>evaluate (z3/z3.py:6488) (3 samples, 0.13%)</title><rect x="82.9225%" y="164" width="0.1345%" height="15" fill="rgb(230,95,12)" fg:x="1850" fg:w="3"/><text x="83.1725%" y="174.50"></text></g><g><title>guess_and_check (bisimulation_learning/fintely_branching/cegis_solver.py:35) (1,800 samples, 80.68%)</title><rect x="2.4204%" y="116" width="80.6813%" height="15" fill="rgb(232,209,1)" fg:x="54" fg:w="1800"/><text x="2.6704%" y="126.50">guess_and_check (bisimulation_learning/fintely_branching/cegis_solver.py:35)</text></g><g><title>__del__ (z3/z3.py:6964) (15 samples, 0.67%)</title><rect x="83.1017%" y="132" width="0.6723%" height="15" fill="rgb(232,6,1)" fg:x="1854" fg:w="15"/><text x="83.3517%" y="142.50"></text></g><g><title>Z3_solver_dec_ref (z3/z3core.py:4101) (15 samples, 0.67%)</title><rect x="83.1017%" y="148" width="0.6723%" height="15" fill="rgb(210,224,50)" fg:x="1854" fg:w="15"/><text x="83.3517%" y="158.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (3 samples, 0.13%)</title><rect x="83.8189%" y="196" width="0.1345%" height="15" fill="rgb(228,127,35)" fg:x="1870" fg:w="3"/><text x="84.0689%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (3 samples, 0.13%)</title><rect x="83.8189%" y="212" width="0.1345%" height="15" fill="rgb(245,102,45)" fg:x="1870" fg:w="3"/><text x="84.0689%" y="222.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (3 samples, 0.13%)</title><rect x="83.8189%" y="228" width="0.1345%" height="15" fill="rgb(214,1,49)" fg:x="1870" fg:w="3"/><text x="84.0689%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="83.8189%" y="244" width="0.1345%" height="15" fill="rgb(226,163,40)" fg:x="1870" fg:w="3"/><text x="84.0689%" y="254.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:23) (7 samples, 0.31%)</title><rect x="83.7741%" y="164" width="0.3138%" height="15" fill="rgb(239,212,28)" fg:x="1869" fg:w="7"/><text x="84.0241%" y="174.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (7 samples, 0.31%)</title><rect x="83.7741%" y="180" width="0.3138%" height="15" fill="rgb(220,20,13)" fg:x="1869" fg:w="7"/><text x="84.0241%" y="190.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (3 samples, 0.13%)</title><rect x="83.9534%" y="196" width="0.1345%" height="15" fill="rgb(210,164,35)" fg:x="1873" fg:w="3"/><text x="84.2034%" y="206.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (3 samples, 0.13%)</title><rect x="83.9534%" y="212" width="0.1345%" height="15" fill="rgb(248,109,41)" fg:x="1873" fg:w="3"/><text x="84.2034%" y="222.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (3 samples, 0.13%)</title><rect x="84.1775%" y="196" width="0.1345%" height="15" fill="rgb(238,23,50)" fg:x="1878" fg:w="3"/><text x="84.4275%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (3 samples, 0.13%)</title><rect x="84.1775%" y="212" width="0.1345%" height="15" fill="rgb(211,48,49)" fg:x="1878" fg:w="3"/><text x="84.4275%" y="222.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:25) (8 samples, 0.36%)</title><rect x="84.0879%" y="164" width="0.3586%" height="15" fill="rgb(223,36,21)" fg:x="1876" fg:w="8"/><text x="84.3379%" y="174.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (6 samples, 0.27%)</title><rect x="84.1775%" y="180" width="0.2689%" height="15" fill="rgb(207,123,46)" fg:x="1878" fg:w="6"/><text x="84.4275%" y="190.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (3 samples, 0.13%)</title><rect x="84.3120%" y="196" width="0.1345%" height="15" fill="rgb(240,218,32)" fg:x="1881" fg:w="3"/><text x="84.5620%" y="206.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (3 samples, 0.13%)</title><rect x="84.3120%" y="212" width="0.1345%" height="15" fill="rgb(252,5,43)" fg:x="1881" fg:w="3"/><text x="84.5620%" y="222.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:26) (4 samples, 0.18%)</title><rect x="84.4464%" y="164" width="0.1793%" height="15" fill="rgb(252,84,19)" fg:x="1884" fg:w="4"/><text x="84.6964%" y="174.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (11 samples, 0.49%)</title><rect x="84.6257%" y="212" width="0.4931%" height="15" fill="rgb(243,152,39)" fg:x="1888" fg:w="11"/><text x="84.8757%" y="222.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (11 samples, 0.49%)</title><rect x="84.6257%" y="228" width="0.4931%" height="15" fill="rgb(234,160,15)" fg:x="1888" fg:w="11"/><text x="84.8757%" y="238.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (10 samples, 0.45%)</title><rect x="84.6706%" y="244" width="0.4482%" height="15" fill="rgb(237,34,20)" fg:x="1889" fg:w="10"/><text x="84.9206%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="84.9395%" y="260" width="0.1793%" height="15" fill="rgb(229,97,13)" fg:x="1895" fg:w="4"/><text x="85.1895%" y="270.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (6 samples, 0.27%)</title><rect x="85.1636%" y="212" width="0.2689%" height="15" fill="rgb(234,71,50)" fg:x="1900" fg:w="6"/><text x="85.4136%" y="222.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (6 samples, 0.27%)</title><rect x="85.1636%" y="228" width="0.2689%" height="15" fill="rgb(253,155,4)" fg:x="1900" fg:w="6"/><text x="85.4136%" y="238.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (5 samples, 0.22%)</title><rect x="85.2084%" y="244" width="0.2241%" height="15" fill="rgb(222,185,37)" fg:x="1901" fg:w="5"/><text x="85.4584%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="85.2981%" y="260" width="0.1345%" height="15" fill="rgb(251,177,13)" fg:x="1903" fg:w="3"/><text x="85.5481%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/conditions.py:28) (24 samples, 1.08%)</title><rect x="84.6257%" y="180" width="1.0758%" height="15" fill="rgb(250,179,40)" fg:x="1888" fg:w="24"/><text x="84.8757%" y="190.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (24 samples, 1.08%)</title><rect x="84.6257%" y="196" width="1.0758%" height="15" fill="rgb(242,44,2)" fg:x="1888" fg:w="24"/><text x="84.8757%" y="206.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (6 samples, 0.27%)</title><rect x="85.4325%" y="212" width="0.2689%" height="15" fill="rgb(216,177,13)" fg:x="1906" fg:w="6"/><text x="85.6825%" y="222.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (6 samples, 0.27%)</title><rect x="85.4325%" y="228" width="0.2689%" height="15" fill="rgb(216,106,43)" fg:x="1906" fg:w="6"/><text x="85.6825%" y="238.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:111) (3 samples, 0.13%)</title><rect x="85.7463%" y="180" width="0.1345%" height="15" fill="rgb(216,183,2)" fg:x="1913" fg:w="3"/><text x="85.9963%" y="190.50"></text></g><g><title>__sub__ (z3/z3.py:2526) (3 samples, 0.13%)</title><rect x="85.7463%" y="196" width="0.1345%" height="15" fill="rgb(249,75,3)" fg:x="1913" fg:w="3"/><text x="85.9963%" y="206.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:28) (29 samples, 1.30%)</title><rect x="84.6257%" y="164" width="1.2999%" height="15" fill="rgb(219,67,39)" fg:x="1888" fg:w="29"/><text x="84.8757%" y="174.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (8 samples, 0.36%)</title><rect x="85.9704%" y="196" width="0.3586%" height="15" fill="rgb(253,228,2)" fg:x="1918" fg:w="8"/><text x="86.2204%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (8 samples, 0.36%)</title><rect x="85.9704%" y="212" width="0.3586%" height="15" fill="rgb(235,138,27)" fg:x="1918" fg:w="8"/><text x="86.2204%" y="222.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (5 samples, 0.22%)</title><rect x="86.1049%" y="228" width="0.2241%" height="15" fill="rgb(236,97,51)" fg:x="1921" fg:w="5"/><text x="86.3549%" y="238.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (4 samples, 0.18%)</title><rect x="86.1497%" y="244" width="0.1793%" height="15" fill="rgb(240,80,30)" fg:x="1922" fg:w="4"/><text x="86.3997%" y="254.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (3 samples, 0.13%)</title><rect x="86.3290%" y="196" width="0.1345%" height="15" fill="rgb(230,178,19)" fg:x="1926" fg:w="3"/><text x="86.5790%" y="206.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (3 samples, 0.13%)</title><rect x="86.3290%" y="212" width="0.1345%" height="15" fill="rgb(210,190,27)" fg:x="1926" fg:w="3"/><text x="86.5790%" y="222.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:30) (15 samples, 0.67%)</title><rect x="85.9256%" y="164" width="0.6723%" height="15" fill="rgb(222,107,31)" fg:x="1917" fg:w="15"/><text x="86.1756%" y="174.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (14 samples, 0.63%)</title><rect x="85.9704%" y="180" width="0.6275%" height="15" fill="rgb(216,127,34)" fg:x="1918" fg:w="14"/><text x="86.2204%" y="190.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (3 samples, 0.13%)</title><rect x="86.4635%" y="196" width="0.1345%" height="15" fill="rgb(234,116,52)" fg:x="1929" fg:w="3"/><text x="86.7135%" y="206.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (3 samples, 0.13%)</title><rect x="86.4635%" y="212" width="0.1345%" height="15" fill="rgb(222,124,15)" fg:x="1929" fg:w="3"/><text x="86.7135%" y="222.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:31) (5 samples, 0.22%)</title><rect x="86.5979%" y="164" width="0.2241%" height="15" fill="rgb(231,179,28)" fg:x="1932" fg:w="5"/><text x="86.8479%" y="174.50"></text></g><g><title>h_brn_impl (bisimulation_learning/shared/template.py:126) (4 samples, 0.18%)</title><rect x="86.6428%" y="180" width="0.1793%" height="15" fill="rgb(226,93,45)" fg:x="1933" fg:w="4"/><text x="86.8928%" y="190.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:129) (4 samples, 0.18%)</title><rect x="86.9117%" y="212" width="0.1793%" height="15" fill="rgb(215,8,51)" fg:x="1939" fg:w="4"/><text x="87.1617%" y="222.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (4 samples, 0.18%)</title><rect x="86.9117%" y="228" width="0.1793%" height="15" fill="rgb(223,106,5)" fg:x="1939" fg:w="4"/><text x="87.1617%" y="238.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (3 samples, 0.13%)</title><rect x="86.9565%" y="244" width="0.1345%" height="15" fill="rgb(250,191,5)" fg:x="1940" fg:w="3"/><text x="87.2065%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="86.9565%" y="260" width="0.1345%" height="15" fill="rgb(242,132,44)" fg:x="1940" fg:w="3"/><text x="87.2065%" y="270.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (10 samples, 0.45%)</title><rect x="86.9117%" y="196" width="0.4482%" height="15" fill="rgb(251,152,29)" fg:x="1939" fg:w="10"/><text x="87.1617%" y="206.50"></text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:137) (4 samples, 0.18%)</title><rect x="87.1806%" y="212" width="0.1793%" height="15" fill="rgb(218,179,5)" fg:x="1945" fg:w="4"/><text x="87.4306%" y="222.50"></text></g><g><title>formula (bisimulation_learning/shared/binary_decision_trees.py:64) (4 samples, 0.18%)</title><rect x="87.1806%" y="228" width="0.1793%" height="15" fill="rgb(227,67,19)" fg:x="1945" fg:w="4"/><text x="87.4306%" y="238.50"></text></g><g><title>__add__ (z3/z3.py:2478) (6 samples, 0.27%)</title><rect x="87.4496%" y="212" width="0.2689%" height="15" fill="rgb(233,119,31)" fg:x="1951" fg:w="6"/><text x="87.6996%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1235) (3 samples, 0.13%)</title><rect x="87.8978%" y="228" width="0.1345%" height="15" fill="rgb(241,120,22)" fg:x="1961" fg:w="3"/><text x="88.1478%" y="238.50"></text></g><g><title>__del__ (z3/z3.py:352) (3 samples, 0.13%)</title><rect x="88.0323%" y="244" width="0.1345%" height="15" fill="rgb(224,102,30)" fg:x="1964" fg:w="3"/><text x="88.2823%" y="254.50"></text></g><g><title>Z3_dec_ref (z3/z3core.py:1626) (3 samples, 0.13%)</title><rect x="88.0323%" y="260" width="0.1345%" height="15" fill="rgb(210,164,37)" fg:x="1964" fg:w="3"/><text x="88.2823%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1236) (4 samples, 0.18%)</title><rect x="88.0323%" y="228" width="0.1793%" height="15" fill="rgb(226,191,16)" fg:x="1964" fg:w="4"/><text x="88.2823%" y="238.50"></text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:34) (34 samples, 1.52%)</title><rect x="86.8221%" y="164" width="1.5240%" height="15" fill="rgb(214,40,45)" fg:x="1937" fg:w="34"/><text x="87.0721%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/fintely_branching/conditions.py:35) (34 samples, 1.52%)</title><rect x="86.8221%" y="180" width="1.5240%" height="15" fill="rgb(244,29,26)" fg:x="1937" fg:w="34"/><text x="87.0721%" y="190.50"></text></g><g><title>h_brn_impl (bisimulation_learning/shared/template.py:126) (22 samples, 0.99%)</title><rect x="87.3599%" y="196" width="0.9861%" height="15" fill="rgb(216,16,5)" fg:x="1949" fg:w="22"/><text x="87.6099%" y="206.50"></text></g><g><title>__mul__ (z3/z3.py:2503) (11 samples, 0.49%)</title><rect x="87.8530%" y="212" width="0.4931%" height="15" fill="rgb(249,76,35)" fg:x="1960" fg:w="11"/><text x="88.1030%" y="222.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1237) (3 samples, 0.13%)</title><rect x="88.2116%" y="228" width="0.1345%" height="15" fill="rgb(207,11,44)" fg:x="1968" fg:w="3"/><text x="88.4616%" y="238.50"></text></g><g><title>successors_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:106) (3 samples, 0.13%)</title><rect x="88.3460%" y="180" width="0.1345%" height="15" fill="rgb(228,190,49)" fg:x="1971" fg:w="3"/><text x="88.5960%" y="190.50"></text></g><g><title>__le__ (z3/z3.py:2672) (3 samples, 0.13%)</title><rect x="88.3460%" y="196" width="0.1345%" height="15" fill="rgb(214,173,12)" fg:x="1971" fg:w="3"/><text x="88.5960%" y="206.50"></text></g><g><title>check (bisimulation_learning/fintely_branching/cegis_solver.py:104) (109 samples, 4.89%)</title><rect x="83.7741%" y="132" width="4.8857%" height="15" fill="rgb(218,26,35)" fg:x="1869" fg:w="109"/><text x="84.0241%" y="142.50">check ..</text></g><g><title>encode_classification_branching (bisimulation_learning/fintely_branching/conditions.py:95) (109 samples, 4.89%)</title><rect x="83.7741%" y="148" width="4.8857%" height="15" fill="rgb(220,200,19)" fg:x="1869" fg:w="109"/><text x="84.0241%" y="158.50">encode..</text></g><g><title>cond_implicit_partiton (bisimulation_learning/fintely_branching/conditions.py:36) (7 samples, 0.31%)</title><rect x="88.3460%" y="164" width="0.3138%" height="15" fill="rgb(239,95,49)" fg:x="1971" fg:w="7"/><text x="88.5960%" y="174.50"></text></g><g><title>add (z3/z3.py:7090) (86 samples, 3.85%)</title><rect x="88.7046%" y="148" width="3.8548%" height="15" fill="rgb(235,85,53)" fg:x="1979" fg:w="86"/><text x="88.9546%" y="158.50">add ..</text></g><g><title>assert_exprs (z3/z3.py:7079) (85 samples, 3.81%)</title><rect x="88.7494%" y="164" width="3.8100%" height="15" fill="rgb(233,133,31)" fg:x="1980" fg:w="85"/><text x="88.9994%" y="174.50">asse..</text></g><g><title>Z3_solver_assert (z3/z3core.py:4125) (85 samples, 3.81%)</title><rect x="88.7494%" y="180" width="3.8100%" height="15" fill="rgb(218,25,20)" fg:x="1980" fg:w="85"/><text x="88.9994%" y="190.50">Z3_s..</text></g><g><title>check (bisimulation_learning/fintely_branching/cegis_solver.py:118) (90 samples, 4.03%)</title><rect x="88.6598%" y="132" width="4.0341%" height="15" fill="rgb(252,210,38)" fg:x="1978" fg:w="90"/><text x="88.9098%" y="142.50">chec..</text></g><g><title>simplify (z3/z3.py:8909) (3 samples, 0.13%)</title><rect x="92.5594%" y="148" width="0.1345%" height="15" fill="rgb(242,134,21)" fg:x="2065" fg:w="3"/><text x="92.8094%" y="158.50"></text></g><g><title>Z3_simplify (z3/z3core.py:3289) (3 samples, 0.13%)</title><rect x="92.5594%" y="164" width="0.1345%" height="15" fill="rgb(213,28,48)" fg:x="2065" fg:w="3"/><text x="92.8094%" y="174.50"></text></g><g><title>check (bisimulation_learning/fintely_branching/cegis_solver.py:119) (95 samples, 4.26%)</title><rect x="92.6939%" y="132" width="4.2582%" height="15" fill="rgb(250,196,2)" fg:x="2068" fg:w="95"/><text x="92.9439%" y="142.50">check..</text></g><g><title>check (z3/z3.py:7174) (95 samples, 4.26%)</title><rect x="92.6939%" y="148" width="4.2582%" height="15" fill="rgb(227,5,17)" fg:x="2068" fg:w="95"/><text x="92.9439%" y="158.50">check..</text></g><g><title>Z3_solver_check_assumptions (z3/z3core.py:4235) (95 samples, 4.26%)</title><rect x="92.6939%" y="164" width="4.2582%" height="15" fill="rgb(221,226,24)" fg:x="2068" fg:w="95"/><text x="92.9439%" y="174.50">Z3_so..</text></g><g><title>run_and_print (run_branching.py:14) (2,113 samples, 94.71%)</title><rect x="2.4204%" y="84" width="94.7109%" height="15" fill="rgb(211,5,48)" fg:x="54" fg:w="2113"/><text x="2.6704%" y="94.50">run_and_print (run_branching.py:14)</text></g><g><title>bisimulation_learning (bisimulation_learning/fintely_branching/cegis_solver.py:13) (2,113 samples, 94.71%)</title><rect x="2.4204%" y="100" width="94.7109%" height="15" fill="rgb(219,150,6)" fg:x="54" fg:w="2113"/><text x="2.6704%" y="110.50">bisimulation_learning (bisimulation_learning/fintely_branching/cegis_solver.py:13)</text></g><g><title>guess_and_check (bisimulation_learning/fintely_branching/cegis_solver.py:37) (313 samples, 14.03%)</title><rect x="83.1017%" y="116" width="14.0296%" height="15" fill="rgb(251,46,16)" fg:x="1854" fg:w="313"/><text x="83.3517%" y="126.50">guess_and_check (bisi..</text></g><g><title>bdt_term_loop_nd_2 (bisimulation_learning/fintely_branching/experiments/nd_term.py:134) (3 samples, 0.13%)</title><rect x="97.3106%" y="164" width="0.1345%" height="15" fill="rgb(220,204,40)" fg:x="2171" fg:w="3"/><text x="97.5606%" y="174.50"></text></g><g><title>__init__ (bisimulation_learning/shared/binary_decision_trees.py:61) (3 samples, 0.13%)</title><rect x="97.3106%" y="180" width="0.1345%" height="15" fill="rgb(211,85,2)" fg:x="2171" fg:w="3"/><text x="97.5606%" y="190.50"></text></g><g><title>quotient_has_transition (bisimulation_learning/shared/template.py:220) (5 samples, 0.22%)</title><rect x="97.2658%" y="116" width="0.2241%" height="15" fill="rgb(229,17,7)" fg:x="2170" fg:w="5"/><text x="97.5158%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (bisimulation_learning/shared/template.py:220) (5 samples, 0.22%)</title><rect x="97.2658%" y="132" width="0.2241%" height="15" fill="rgb(239,72,28)" fg:x="2170" fg:w="5"/><text x="97.5158%" y="142.50"></text></g><g><title>f (bisimulation_learning/shared/template.py:116) (5 samples, 0.22%)</title><rect x="97.2658%" y="148" width="0.2241%" height="15" fill="rgb(230,47,54)" fg:x="2170" fg:w="5"/><text x="97.5158%" y="158.50"></text></g><g><title>quotient_has_transition (bisimulation_learning/shared/template.py:222) (11 samples, 0.49%)</title><rect x="97.4899%" y="116" width="0.4931%" height="15" fill="rgb(214,50,8)" fg:x="2175" fg:w="11"/><text x="97.7399%" y="126.50"></text></g><g><title>add (z3/z3.py:7090) (11 samples, 0.49%)</title><rect x="97.4899%" y="132" width="0.4931%" height="15" fill="rgb(216,198,43)" fg:x="2175" fg:w="11"/><text x="97.7399%" y="142.50"></text></g><g><title>assert_exprs (z3/z3.py:7079) (11 samples, 0.49%)</title><rect x="97.4899%" y="148" width="0.4931%" height="15" fill="rgb(234,20,35)" fg:x="2175" fg:w="11"/><text x="97.7399%" y="158.50"></text></g><g><title>Z3_solver_assert (z3/z3core.py:4125) (11 samples, 0.49%)</title><rect x="97.4899%" y="164" width="0.4931%" height="15" fill="rgb(254,45,19)" fg:x="2175" fg:w="11"/><text x="97.7399%" y="174.50"></text></g><g><title>compute_adjacency_matrix (bisimulation_learning/shared/template.py:187) (41 samples, 1.84%)</title><rect x="97.1313%" y="100" width="1.8377%" height="15" fill="rgb(219,14,44)" fg:x="2167" fg:w="41"/><text x="97.3813%" y="110.50">c..</text></g><g><title>quotient_has_transition (bisimulation_learning/shared/template.py:223) (22 samples, 0.99%)</title><rect x="97.9830%" y="116" width="0.9861%" height="15" fill="rgb(217,220,26)" fg:x="2186" fg:w="22"/><text x="98.2330%" y="126.50"></text></g><g><title>check (z3/z3.py:7174) (21 samples, 0.94%)</title><rect x="98.0278%" y="132" width="0.9413%" height="15" fill="rgb(213,158,28)" fg:x="2187" fg:w="21"/><text x="98.2778%" y="142.50"></text></g><g><title>Z3_solver_check_assumptions (z3/z3core.py:4235) (21 samples, 0.94%)</title><rect x="98.0278%" y="148" width="0.9413%" height="15" fill="rgb(252,51,52)" fg:x="2187" fg:w="21"/><text x="98.2778%" y="158.50"></text></g><g><title>quotient_self_loop (bisimulation_learning/shared/template.py:249) (6 samples, 0.27%)</title><rect x="99.0587%" y="116" width="0.2689%" height="15" fill="rgb(246,89,16)" fg:x="2210" fg:w="6"/><text x="99.3087%" y="126.50"></text></g><g><title>add (z3/z3.py:7090) (6 samples, 0.27%)</title><rect x="99.0587%" y="132" width="0.2689%" height="15" fill="rgb(216,158,49)" fg:x="2210" fg:w="6"/><text x="99.3087%" y="142.50"></text></g><g><title>assert_exprs (z3/z3.py:7079) (6 samples, 0.27%)</title><rect x="99.0587%" y="148" width="0.2689%" height="15" fill="rgb(236,107,19)" fg:x="2210" fg:w="6"/><text x="99.3087%" y="158.50"></text></g><g><title>Z3_solver_assert (z3/z3core.py:4125) (6 samples, 0.27%)</title><rect x="99.0587%" y="164" width="0.2689%" height="15" fill="rgb(228,185,30)" fg:x="2210" fg:w="6"/><text x="99.3087%" y="174.50"></text></g><g><title>&lt;module&gt; (run_branching.py:52) (2,176 samples, 97.53%)</title><rect x="2.4204%" y="68" width="97.5347%" height="15" fill="rgb(246,134,8)" fg:x="54" fg:w="2176"/><text x="2.6704%" y="78.50">&lt;module&gt; (run_branching.py:52)</text></g><g><title>run_and_print (run_branching.py:23) (63 samples, 2.82%)</title><rect x="97.1313%" y="84" width="2.8238%" height="15" fill="rgb(214,143,50)" fg:x="2167" fg:w="63"/><text x="97.3813%" y="94.50">ru..</text></g><g><title>compute_adjacency_matrix (bisimulation_learning/shared/template.py:195) (22 samples, 0.99%)</title><rect x="98.9691%" y="100" width="0.9861%" height="15" fill="rgb(228,75,8)" fg:x="2208" fg:w="22"/><text x="99.2191%" y="110.50"></text></g><g><title>quotient_self_loop (bisimulation_learning/shared/template.py:250) (14 samples, 0.63%)</title><rect x="99.3277%" y="116" width="0.6275%" height="15" fill="rgb(207,175,4)" fg:x="2216" fg:w="14"/><text x="99.5777%" y="126.50"></text></g><g><title>check (z3/z3.py:7174) (14 samples, 0.63%)</title><rect x="99.3277%" y="132" width="0.6275%" height="15" fill="rgb(205,108,24)" fg:x="2216" fg:w="14"/><text x="99.5777%" y="142.50"></text></g><g><title>Z3_solver_check_assumptions (z3/z3core.py:4235) (14 samples, 0.63%)</title><rect x="99.3277%" y="148" width="0.6275%" height="15" fill="rgb(244,120,49)" fg:x="2216" fg:w="14"/><text x="99.5777%" y="158.50"></text></g><g><title>all (2,231 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(223,47,38)" fg:x="0" fg:w="2231"/><text x="0.2500%" y="62.50"></text></g></svg></svg>